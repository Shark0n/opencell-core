{
	"info": {
		"_postman_id": "5a5e19a5-5967-4059-891e-40221339c384",
		"name": "Opencell",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "OK",
			"item": [
				{
					"name": "API",
					"item": [
						{
							"name": "Accounting",
							"item": [
								{
									"name": "Account Code",
									"item": [
										{
											"name": "CreateOrUpdate Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e73be517-1997-43f8-9a7b-c3b7e56b03b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "69db65c6-d642-465c-ab79-978c9ff4977c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.accountingCode.code).to.eql(pm.environment.get(\"testCode\"));",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.accountingCode.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode?accountingCode={{testCode}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													],
													"query": [
														{
															"key": "accountingCode",
															"value": "{{testCode}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Accounting Code ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b2ff3d3-6322-475b-bd94-fa53e1e4680f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=\"+pm.environment.get(\"testCode\")+\" already exists.\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Accounting Code ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "72060a5f-c682-435c-9280-436eaee628c6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=NOT_EXIST does not exists.\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"chartOfAccountTypeEnum\": \"ASSETS\",\r\n    \"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5e52ee22-84a4-47d5-93ba-1d23a166d8d3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"disabled\": false,\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\",\r\n\t\"migrated\": false\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30e73549-3154-4fbe-882e-2903da8be22a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"disabled\": false,\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\",\r\n\t\"migrated\": false\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dde26737-0a5d-4688-9131-a644ef33468f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.accountingCode.code).to.eql(pm.environment.get(\"testCode\"));",
															"});",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.accountingCode.description).to.eql(pm.environment.get(\"testDescription\")+ \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode?accountingCode={{testCode}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													],
													"query": [
														{
															"key": "accountingCode",
															"value": "{{testCode}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Accounting Code MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a55c97fc-8bd3-485a-82c4-f005238fe46e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Accounting Code INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2cfa2f41-f2e9-461b-8317-97c8086e02a2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.billing.ChartOfAccountViewTypeEnum`\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "OCC Template",
									"item": [
										{
											"name": "CreateOrUpdate OCC Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef706f87-e631-4726-86a2-7e8e9bcca0c1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OCC Template ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "73e9dc3e-3fc0-4eb5-8908-1a962413eaf7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=\"+pm.environment.get(\"testCode\")+\" already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update OCC Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8fc44a6d-33ad-493a-99a2-59b40b07dc78",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"NOT_EXIST\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update OCC Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0381df23-63d3-4e66-96ce-ad839b801a16",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate OCC Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fcbfe13b-c26f-4db8-9b1d-997f17f585f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate OCC Template MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aeea2c5e-3e0a-48af-8a95-07bb003dcb1c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: accountCode / accountingCode.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_Missing\",\r\n  \"description\": \"{{testDescription}} missing\",\r\n  \"occCategory\": \"DEBIT\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate OCC Template INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58bbb6bb-1199-4f18-8de2-7b0bf641d41e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.payments.OperationCategoryEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clear Data",
									"item": [
										{
											"name": "Delete Accounting Code GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6e79d9b-5c6c-4fbf-b9f7-5655c9f73814",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"is still referenced from table\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/TEST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"TEST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete OCC Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "056b09b5-09f1-4965-85ad-7e0b986268b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/{{testCode}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"{{testCode}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete OCC Template FAIL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e35707bc-6a55-46c3-bdac-2ad2ffe1f944",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=\"+pm.environment.get(\"testCode\")+\" does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/{{testCode}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"{{testCode}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "77c16914-ec8d-4036-8a5e-d3518f920360",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/TEST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"TEST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Accounting Code FAIL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "701e7009-d563-4444-8fb3-f8919671a64f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=\"+pm.environment.get(\"testCode\")+\" does not exists.\");",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/TEST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"TEST"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Accounts",
							"item": [
								{
									"name": "BillingCycle",
									"item": [
										{
											"name": "CreateOrUpdate Billing Cylcle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "649c4e20-8245-44ec-9f7d-83ebe6c9e10a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BTN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3fabd0aa-3843-4d62-ac50-fec38a26524a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingCycle with code=\"+pm.environment.get(\"testCode\")+\"_BC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BTN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dcd5ffb7-9d30-4b40-a765-fd50fd0933db",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingCycle.code).to.eql(pm.environment.get(\"testCode\")+\"_BC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingCycle.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle?billingCycleCode={{testCode}}_BC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													],
													"query": [
														{
															"key": "billingCycleCode",
															"value": "{{testCode}}_BC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89268f35-31b0-4fd4-89a7-31a6778a95ae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingCycle with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"NOT_EXIST\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BtN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7cdd0e0e-408c-41a8-acc4-d3001c524462",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"billingTemplateName\": \"TEST\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bdd60366-3524-4a56-ad9b-d71130d9bd4e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"billingTemplateName\": \"TEST\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35350495-7f81-4173-a558-0c60a89f17a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingCycle.code).to.eql(pm.environment.get(\"testCode\")+\"_BC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingCycle.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle?billingCycleCode={{testCode}}_BC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													],
													"query": [
														{
															"key": "billingCycleCode",
															"value": "{{testCode}}_BC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Billing Cycle MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ed86d00c-6707-40ec-9843-37d13a8f0e36",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: invoiceDateDelay.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"MISSING\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"calendar\": \"MONTHLY\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f4791127-f7f0-422e-aebc-44e6bc2bda8c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"calendar\": \"NOT_EXIST\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Seller",
									"item": [
										{
											"name": "CreateOrUpdate Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "31e55e4d-a439-4c38-a977-72a1ba0ee0eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "971fa57a-4dd6-4c20-9d42-a33a21da0e93",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=\"+pm.environment.get(\"testCode\")+\"_SELLER already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d589769-6816-4d82-8f10-2fe7c3b9278b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.seller.code).to.eql(pm.environment.get(\"testCode\")+\"_SELLER\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.seller.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{testCode}}_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{testCode}}_SELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ca769a1a-f210-44f5-b778-2ab4c9f6683f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "45c33088-81c5-48cd-a758-080429d42ebe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91766f4d-f5ed-4225-bae6-1dde91c2aa1d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "77bdd5b6-3515-40e1-a51e-bc05a29e7aed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.seller.code).to.eql(pm.environment.get(\"testCode\")+\"_SELLER\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.seller.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{testCode}}_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{testCode}}_SELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28aa3cf2-899c-43ac-ab15-796413fb5335",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\": \"NOT_EXIST\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "CustomerBrand",
									"item": [
										{
											"name": "CreateOrUpdate CustomerBrand SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30ad1678-3061-4c88-96b3-ef788f584f6b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CustomerBrand ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eebee041-29cf-4d43-860f-d09ecf4d5a44",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CustomerBrand ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d242347-941f-4c76-bcb3-237d53069456",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/updateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"updateBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CustomerBrand SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "292dcd6d-7697-41aa-91e3-655d2e90a0d9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/updateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"updateBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerBrand SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c6e4f6a9-30bc-4122-af32-1a1c8a3f8771",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerBrand MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99aa7143-5d5b-4505-bfec-29edaad20f13",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateBrand"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer Category",
									"item": [
										{
											"name": "CreateOrUpdate Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6758e08e-5080-4555-8a89-3c5d66eb47af",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d04fbe16-2b82-4278-b21e-35574a852059",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_CC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/category/{{testCode}}_CC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"category",
														"{{testCode}}_CC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer Category ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f789e217-ce5c-47c6-82a3-e0e75637cbe2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=\"+pm.environment.get(\"testCode\")+\"_CC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Customer Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e678e710-a4fd-4dd6-9518-e1718d183276",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/updateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"updateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9ec09489-6e1c-4731-8892-4c06790cf2f6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/updateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"updateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15490178-c55b-4275-b946-dc608d36b45c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa950ac0-e99a-4185-b19e-42b9a15dc0de",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_CC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/category/{{testCode}}_CC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"category",
														"{{testCode}}_CC"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer Category MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef1b9de6-6a73-4899-9b57-c0ddcc440769",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testCode}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3180a26c-0a89-4f47-a909-1b14563336d5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\",\r\n    \"accountingCode\": \"NOT_EXIST\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer Category INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa7b6952-3055-495d-87d2-e555bed99c25",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"INVALID\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer",
									"item": [
										{
											"name": "CreateOrUpdate Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26e76d57-369b-4d6c-94ca-4f8f5579b2a6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bef321b8-c907-493c-905e-56c9ad519ca9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_C\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{testCode}}_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d28e718b-f0e1-46ea-8ae3-b07591cca21b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_C already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "20da811d-409e-42d8-8cf8-440a34d1a0b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "961594be-99f3-48de-9154-ab5f560ded73",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08b90f77-7be9-4094-8250-75bfb7978397",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d383958-ef27-4bc9-8a48-499fa6e04720",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_C\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{testCode}}_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "34c98423-53dc-4278-bb8f-4d969377cd5e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: customerCategory.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "48494fa7-9bdb-489b-818d-bf9e877e26fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateDate\": \"INVALID\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "883d27de-b6d8-4381-9ae1-a99dc9755a93",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"NOT_EXIST\",\r\n    \"mandateIdentification\": \"\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b95f4ba6-7186-4110-ad60-a45962bdb119",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"NOT_EXIST\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1e94ea67-f6f0-4785-b52f-bb5205ebdbf5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"NOT_EXIST\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "CustomerAccount",
									"item": [
										{
											"name": "CreateOrUpdate CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c702985f-1dda-4bbf-a2b8-f9baac50452f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4dd6c90c-9e7d-4f92-a8f9-71ccf152d8f1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_CA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{testCode}}_CA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{testCode}}_CA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CustomerAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "54e4e9a0-3679-4e0f-a398-1bb935df14d6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=\"+pm.environment.get(\"testCode\")+\"_CA already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "46478e34-7943-44bd-ae17-9b1a2ff0232a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1def4393-6699-47ac-b5b0-71f3e30bc81e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af10dd3e-029f-4410-a363-a383696a2cfc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "caba4c10-8e7d-49e7-a1bb-734be9c79967",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_CA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{testCode}}_CA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{testCode}}_CA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerAccount MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "23f10b19-221e-4b32-b1db-935c16dfc0f0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: currency, language.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerAccount INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d4d37125-b025-466f-86de-2b8e37ee8c3a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"mandateDate\": \"INVALID\"\r\n}\r\n\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "45fd209a-7d59-4e5b-893c-93a6f99d6599",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"customer\": \"NOT_EXIST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "BillingAccount",
									"item": [
										{
											"name": "CreateOrUpdate BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3fdb1bf5-2a0b-492b-81b0-569ef20a1bd9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e7e2a5a4-5041-4219-a1d3-f579c954a25c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_BA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{testCode}}_BA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{testCode}}_BA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BillingAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "48721b37-7f1e-4178-80b5-0b89f02dadc7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=\"+pm.environment.get(\"testCode\")+\"_BA already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update BillingAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dd45c696-6dd2-40d2-83c1-5b991b116f8b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fba69079-3856-4bed-b702-d5629859ebe4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "40dbee03-6de9-4e51-b5a0-1d82a9e820f6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d9efd26-da86-4f15-98b7-9a3655fdd883",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_BA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{testCode}}_BA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{testCode}}_BA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate BillingAccount MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de711ccd-3a33-4189-8b53-a19037864819",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: country, language.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"MISSING\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate BillingAccount INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d7cc7862-3d84-4c1c-84bb-b8cd443e05ff",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\",\r\n    \"subscriptionDate\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate BillingAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb6826de-2ec7-4485-9e12-79ae226c3299",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "UserAccount",
									"item": [
										{
											"name": "CreateOrUpdate UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3be32755-82b3-4e18-89dc-fb17a0e35df5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\" : \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c4bea10-b52f-4d25-aadf-30fb0d07657c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_UA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{testCode}}_UA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{testCode}}_UA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create UserAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7f1dffa0-a5d5-4926-a5fb-04f409b4f831",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=\"+pm.environment.get(\"testCode\")+\"_UA already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\" : \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3150b21c-8724-439d-981d-a4712a6b27dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "282ef6c9-a2a6-4924-8362-972b6a5fc96c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "83394d8c-3f39-4b0b-9fd4-5fc6178be656",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3dfb1d3f-1f08-44f1-8501-519c61ca93eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_UA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{testCode}}_UA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{testCode}}_UA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate UserAccount MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "57cfec4b-4a5b-408c-b221-e26d29054256",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: billingAccount.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n\t\"code\": \"MISSING\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate UserAccount INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de0d8e62-04ee-497d-8cf1-515f34013efb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.billing.AccountStatusEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n\t\"code\": \"{{testCode}}_UA\", \r\n\t\"billingAccount\":\"{{testCode}}_BA\",\r\n\t\"terminationReason\":\"TR\",\r\n\t\"terminationDate\":\"2018-09-14\",\r\n\t\"status\" : \"INVALID\" \r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "59bac34b-e847-43df-a132-b9077ec5f5d9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n\t\"code\": \"{{testCode}}_UA\", \r\n\t\"billingAccount\":\"NOT_EXIST\",\r\n\t\"terminationReason\":\"TR\",\r\n\t\"terminationDate\":\"2018-09-14\",\r\n\t\"status\" : \"ACTIVE\" \r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Provider Contact",
									"item": [
										{
											"name": "CreateOrUpdate Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9636927a-2b73-4b31-8f51-7548eb733b5f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cbcae537-00d9-4ec6-bef3-8475c52e90f8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.providerContact.code).to.eql(pm.environment.get(\"testCode\")+\"_PC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.providerContact.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact?providerContactCode={{testCode}}_PC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													],
													"query": [
														{
															"key": "providerContactCode",
															"value": "{{testCode}}_PC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Provider Contact ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "546d2f74-60f9-485d-bcc6-9620bb3e22d9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ProviderContact with code=\"+pm.environment.get(\"testCode\")+\"_PC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c97cff6a-bd9f-45b0-b094-81fac332d1c7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ProviderContact with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a190a24-beba-479b-a39a-4941a3cb54f5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a2a40c4f-5037-499c-b48b-7c281c11a23e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e3999dbf-db05-4e9c-8772-fad87f91cd85",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.providerContact.code).to.eql(pm.environment.get(\"testCode\")+\"_PC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.providerContact.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact?providerContactCode={{testCode}}_PC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													],
													"query": [
														{
															"key": "providerContactCode",
															"value": "{{testCode}}_PC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Provider Contact MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "85c07cf9-be15-4e38-8154-b76f06e25a98",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: description.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Provider Contact INTERNAL_SERVER_ERROR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9d882cf-2677-4e46-8ee4-d5c651692a96",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"At least 1 of the field in Contact Information tab is required [email, genericEmail, phone, mobile].\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Provider Contact INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d80ae4e-a165-4409-a7d5-511694117fdf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.account.AddressDto`\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7936c5f2-dab1-4c32-a7a9-835a9468458d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/{{testCode}}_PC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"{{testCode}}_PC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4342e592-5d95-4e4d-9c91-c2c9382fe47f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ProviderContact with code=\"+pm.environment.get(\"testCode\")+\"_PC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/{{testCode}}_PC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"{{testCode}}_PC"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account Hierarchy",
									"item": [
										{
											"name": "CreateOrUpdate Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6edc2c5b-99a1-467c-9f55-63334fb8b541",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1758c554-eb20-4d91-9c3e-fba0e05a1ea9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.name.firstName).to.eql(\"created\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "767f6938-8ec8-4ed4-985a-2ed4d7ea2d71",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_CH already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9e062809-e187-461d-b231-6161901836e5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code='NOT_EXIST' does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"NOT_EXIST\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e41d310-08ea-47e6-9b4a-401c2c9086fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6dc5ba15-aeaa-4687-8526-524eabc943a7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"SELLER_US\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d2b11c0-3609-48ff-acfd-f9adf4113de7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.name.firstName).to.eql(\"updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy MISSING_PARAMETER 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f49175f3-5300-4669-83ad-4a4b11aa8606",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: customerCode, customerCategoryCode, sellerCode, currencyCode, countryCode, billingCycleCode, languageCode, email.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy MISSING_PARAMETER 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f246a298-653a-4e48-941d-74b0c9ce165f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: customerCategoryCode, sellerCode, currencyCode, countryCode, billingCycleCode, languageCode, email.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"customerCode\": \"{{testCode}}_CH\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0e04f5bc-7bd8-4076-85cf-8a234d5f9a5b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Currency with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"NOT_EXIST\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "edba5af5-cb5c-40bf-9b78-b8bc93cd1e4e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"NOT_EXIST\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c278e0d-fb54-42a4-810a-82cf73d35fcf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_BC\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\",\r\n    \"birthDate\": \"INVALID\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9476920-4025-41f0-b4e9-b8f4296852f8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{testCode}}_CH"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "46f43658-9c06-42fa-923a-8a3b08cd69fc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_CH does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{testCode}}_CH"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clear Data",
									"item": [
										{
											"name": "Delete UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "831c0a03-3984-47b0-b74e-6bd64fa2284d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/{{testCode}}_UA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"{{testCode}}_UA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d075ee37-27bf-4018-86c3-76c70dc2e221",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=\"+pm.environment.get(\"testCode\")+\"_UA does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/{{testCode}}_UA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"{{testCode}}_UA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerBrand  DELETE_REFERENCED_ENTITY_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cce27482-837d-470b-8078-e47502e71750",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"DELETE_REFERENCED_ENTITY_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB is referenced.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"removeBrand",
														"{{testCode}}_CB"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "003bf3ff-87a5-465a-aa00-236632647c66",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/{{testCode}}_BA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"{{testCode}}_BA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete BillingAccount  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1e63337-bc6c-4d3c-8d53-3d2f23936a9e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=\"+pm.environment.get(\"testCode\")+\"_BA does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/{{testCode}}_BA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"{{testCode}}_BA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "22041346-7b05-4a86-9178-917adfdcfec1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/{{testCode}}_CA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"{{testCode}}_CA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "369cb388-1f34-46a5-bde9-3ece1abf2ea0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=\"+pm.environment.get(\"testCode\")+\"_CA does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/{{testCode}}_CA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"{{testCode}}_CA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c9700039-d3da-4e93-acdb-0a2b7813ee2d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{testCode}}_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{testCode}}_C"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2df6f2d2-972d-4e9d-942c-a7aa15bbf0b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_C does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{testCode}}_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{testCode}}_C"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2e27feb0-c8ca-41bd-a99b-3ec2bc61da57",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{testCode}}_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{testCode}}_SELLER"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "43d49143-9451-4db9-8889-850bf2a9d979",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=\"+pm.environment.get(\"testCode\")+\"_SELLER does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{testCode}}_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{testCode}}_SELLER"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2311fa22-f08f-4776-8426-fc7cd3888308",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/{{testCode}}_BC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"{{testCode}}_BC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f66e903c-a052-43a3-ab0a-431f81bde27d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingCycle with code=\"+pm.environment.get(\"testCode\")+\"_BC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/{{testCode}}_BC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"{{testCode}}_BC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerBrand  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "46345cd5-de7a-498a-b87e-1e32e681135d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"removeBrand",
														"{{testCode}}_CB"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerBrand  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15add7a4-db79-415d-9cd3-393140b8467b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"removeBrand",
														"{{testCode}}_CB"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Administration",
							"item": [
								{
									"name": "Module",
									"item": [
										{
											"name": "CreateOrUpdate Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7236832d-133b-4cc7-9cde-4115c8b10ff0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_MOD\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef424d85-530a-4e5d-9ea6-825c0b0a47f3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.module.code).to.eql(pm.environment.get(\"testCode\")+\"_MOD\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.module.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module?code={{testCode}}_MOD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_MOD"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Module ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0661614-2cc9-40e7-ab03-e655a5ac32d1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"MeveoModule with code=\"+pm.environment.get(\"testCode\")+\"_MOD already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_MOD\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Module ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5709ab0a-4731-4f8a-ba7b-0f50968da60c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"MeveoModule with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb06200a-1291-43b4-bc5e-7762b20650f1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_MOD\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"license\": \"COM\",\r\n    \"moduleItems\": [\r\n        {\r\n            \"script\": {\r\n                \"code\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"description\": \"Save Ingenico Card\",\r\n                \"script\": \"package org.meveo.service.script;\\\\r\\\\n\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.Client;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.RequestHeader;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.PaymentResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.CardPaymentMethodSpecificOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentReferences;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentStatusOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.token.TokenResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.webhooks.WebhooksEvent;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.InMemorySecretKeyStore;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.SignatureValidationException;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.Webhooks;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.WebhooksHelper;\\\\r\\\\nimport org.apache.commons.collections4.MapUtils;\\\\r\\\\nimport org.json.simple.JSONObject;\\\\r\\\\nimport org.json.simple.parser.JSONParser;\\\\r\\\\nimport org.json.simple.parser.ParseException;\\\\r\\\\nimport org.meveo.admin.exception.BusinessException;\\\\r\\\\nimport org.meveo.commons.utils.StringUtils;\\\\r\\\\nimport org.meveo.model.notification.InboundRequest;\\\\r\\\\nimport org.meveo.model.payments.CardPaymentMethod;\\\\r\\\\nimport org.meveo.model.payments.CreditCardTypeEnum;\\\\r\\\\nimport org.meveo.model.payments.CustomerAccount;\\\\r\\\\nimport org.meveo.model.payments.PaymentGateway;\\\\r\\\\nimport org.meveo.service.payments.impl.CustomerAccountService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentGatewayService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentMethodService;\\\\r\\\\nimport org.slf4j.Logger;\\\\r\\\\nimport org.slf4j.LoggerFactory;\\\\r\\\\n\\\\r\\\\nimport java.util.ArrayList;\\\\r\\\\nimport java.util.HashMap;\\\\r\\\\nimport java.util.List;\\\\r\\\\nimport java.util.Map;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n *\\\\r\\\\n * @author Mounir Bahije\\\\r\\\\n *\\\\r\\\\n *         Script executed to save card enrolled with Ingenico Hosted Checkout\\\\r\\\\n *\\\\r\\\\n */\\\\r\\\\npublic class SaveIngenicoCardScript extends Script {\\\\r\\\\n\\\\r\\\\n    private final static Logger log = LoggerFactory.getLogger(SaveIngenicoCardScript.class);\\\\r\\\\n\\\\r\\\\n    private PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface(\\\\\\\"PaymentMethodService\\\\\\\");\\\\r\\\\n    private CustomerAccountService customerAccountService = (CustomerAccountService) getServiceInterface(\\\\\\\"CustomerAccountService\\\\\\\");\\\\r\\\\n    private PaymentGatewayService paymentGatewayService = (PaymentGatewayService) getServiceInterface(\\\\\\\"PaymentGatewayService\\\\\\\");\\\\r\\\\n\\\\r\\\\n    @Override\\\\r\\\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\\\r\\\\n\\\\r\\\\n        String verification = \\\\\\\"\\\\\\\";\\\\r\\\\n        InboundRequest inReq = (InboundRequest) methodContext.get(\\\\\\\"event\\\\\\\");\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"GET\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            String body = inReq.getBody();\\\\r\\\\n            Map<String, String> headers = inReq.getHeaders();\\\\r\\\\n            for (String headerKey : headers.keySet()) {\\\\r\\\\n                if (\\\\\\\"X-GCS-Webhooks-Endpoint-Verification\\\\\\\".equalsIgnoreCase(headerKey)) {\\\\r\\\\n                    String headerValue = headers.get(headerKey);\\\\r\\\\n                    verification = headerValue;\\\\r\\\\n                    inReq.setResponseBody(verification);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"POST\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            final String reqBody = inReq.getBody();\\\\r\\\\n\\\\r\\\\n            List<RequestHeader> requestHeaders = getWebhookRequestHeaders(inReq.getHeaders());\\\\r\\\\n            String webhooksKeyId = this.getHeaderValue(requestHeaders, \\\\\\\"X-GCS-KeyId\\\\\\\");\\\\r\\\\n\\\\r\\\\n            InMemorySecretKeyStore keyStore = InMemorySecretKeyStore.INSTANCE;\\\\r\\\\n            keyStore.storeSecretKey(webhooksKeyId, getWebhookSecretKey(webhooksKeyId));\\\\r\\\\n\\\\r\\\\n            WebhooksHelper helper = Webhooks.createHelper(keyStore);\\\\r\\\\n            WebhooksEvent webhooksEvent = helper.unmarshal(reqBody, requestHeaders);\\\\r\\\\n\\\\r\\\\n            PaymentResponse payment = webhooksEvent.getPayment();\\\\r\\\\n            if (payment == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentResponse not found on webhooksEvent : [%s]\\\\\\\", webhooksEvent));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentOutput paymentOutput = payment.getPaymentOutput();\\\\r\\\\n            if (paymentOutput == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentReferences paymentReferences = paymentOutput.getReferences();\\\\r\\\\n            if (paymentReferences == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"paymentReferences not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            String merchantReference = paymentReferences.getMerchantReference();\\\\r\\\\n\\\\r\\\\n            if (merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") >= 0) {\\\\r\\\\n\\\\r\\\\n                String longIdCA = merchantReference.substring(merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") + 3);\\\\r\\\\n                CustomerAccount ca = customerAccountService.findById(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                PaymentGateway paymentGateway = paymentGatewayService.getPaymentGateway(ca, null, null);\\\\r\\\\n\\\\r\\\\n                if (paymentGateway == null) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is null\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                if (!webhooksKeyId.equals(paymentGateway.getWebhooksKeyId())) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is not the good one\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                String status = payment.getStatus();\\\\r\\\\n                if (\\\\\\\"PENDING_CAPTURE\\\\\\\".equalsIgnoreCase(status)) {\\\\r\\\\n                    PaymentStatusOutput paymentStatusOutput = payment.getStatusOutput();\\\\r\\\\n                    if (paymentStatusOutput == null) {\\\\r\\\\n                        throw new BusinessException(String.format(\\\\\\\"paymentStatusOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n                    }\\\\r\\\\n                    Boolean isAuthorized = paymentStatusOutput.getIsAuthorized();\\\\r\\\\n\\\\r\\\\n                    if (isAuthorized) {\\\\r\\\\n\\\\r\\\\n                        CardPaymentMethodSpecificOutput cardPaymentMethodSpecificOutput = paymentOutput.getCardPaymentMethodSpecificOutput();\\\\r\\\\n                        if (cardPaymentMethodSpecificOutput == null) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"cardPaymentMethodSpecificOutput not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n                        }\\\\r\\\\n                        Long paymentProductId = Long.valueOf(cardPaymentMethodSpecificOutput.getPaymentProductId());\\\\r\\\\n\\\\r\\\\n                        JSONParser jsonParser = new JSONParser();\\\\r\\\\n                        JSONObject obj = null;\\\\r\\\\n                        try {\\\\r\\\\n                            obj = (JSONObject) jsonParser.parse(reqBody);\\\\r\\\\n                        } catch (ParseException e) {\\\\r\\\\n                            e.printStackTrace();\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String tokenId = (String) ((JSONObject) ((JSONObject) ((JSONObject) obj.get(\\\\\\\"payment\\\\\\\")).get(\\\\\\\"paymentOutput\\\\\\\")).get(\\\\\\\"cardPaymentMethodSpecificOutput\\\\\\\")).get(\\\\\\\"token\\\\\\\");\\\\r\\\\n                        if (StringUtils.isBlank(tokenId)) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"tokenId not found on webhooksEvent.payment.paymentOutput.cardPaymentMethodSpecificOutput : [%s]\\\\\\\", cardPaymentMethodSpecificOutput));\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String merchantId = webhooksEvent.getMerchantId();\\\\r\\\\n\\\\r\\\\n                        try {\\\\r\\\\n\\\\r\\\\n                            CreditCardTypeEnum cardType = fromId(Long.valueOf(paymentProductId).intValue());\\\\r\\\\n\\\\r\\\\n                            Client client = (Client) paymentMethodService.getClient(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                            TokenResponse response = client.merchant(merchantId).tokens().get(tokenId);\\\\r\\\\n\\\\r\\\\n                            String cardNumber = response.getCard().getData().getCardWithoutCvv().getCardNumber();\\\\r\\\\n                            String expiryDate = response.getCard().getData().getCardWithoutCvv().getExpiryDate();\\\\r\\\\n                            String ownerName = response.getCard().getData().getCardWithoutCvv().getCardholderName();\\\\r\\\\n                            CardPaymentMethod paymentMethod = new CardPaymentMethod();\\\\r\\\\n                            paymentMethod.setCardNumber(cardNumber);\\\\r\\\\n                            paymentMethod.setCardType(cardType);\\\\r\\\\n                            paymentMethod.setCustomerAccount(ca);\\\\r\\\\n                            paymentMethod.setPreferred(true);\\\\r\\\\n                            paymentMethod.setMonthExpiration(new Integer(expiryDate.substring(0, 2)));\\\\r\\\\n                            paymentMethod.setYearExpiration(new Integer(expiryDate.substring(2, 4)));\\\\r\\\\n                            paymentMethod.setOwner(ownerName);\\\\r\\\\n                            paymentMethod.setTokenId(tokenId);\\\\r\\\\n                            paymentMethod.setHiddenCardNumber(CardPaymentMethod.hideCardNumber(cardNumber));\\\\r\\\\n                            if (!paymentMethodService.cardTokenExist(paymentMethod)) {\\\\r\\\\n                                paymentMethodService.create(paymentMethod);\\\\r\\\\n                            }\\\\r\\\\n                        } catch (Exception e) {\\\\r\\\\n                            throw new BusinessException(\\\\\\\"Error on SaveIngenicoCardScript : \\\\\\\" + e.getMessage());\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private CreditCardTypeEnum fromId(Integer id) {\\\\r\\\\n        for (CreditCardTypeEnum es : CreditCardTypeEnum.values()) {\\\\r\\\\n            if (es.getId().equals(id)) {\\\\r\\\\n                return es;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        throw new IllegalArgumentException();\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private List<RequestHeader> getWebhookRequestHeaders(Map<String, String> headers) {\\\\r\\\\n        List<RequestHeader> webhookHeaders = new ArrayList<>();\\\\r\\\\n        if (MapUtils.isNotEmpty(headers)) {\\\\r\\\\n            headers.forEach((key, value) -> webhookHeaders.add(new RequestHeader(key, value)) );\\\\r\\\\n        }\\\\r\\\\n        return webhookHeaders;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getHeaderValue(List<RequestHeader> requestHeaders, String headerName) {\\\\r\\\\n        String value = null;\\\\r\\\\n        for (RequestHeader header : requestHeaders) {\\\\r\\\\n            if (headerName.equalsIgnoreCase(header.getName())) {\\\\r\\\\n                if (value == null) {\\\\r\\\\n                    value = header.getValue();\\\\r\\\\n                } else {\\\\r\\\\n                    throw new SignatureValidationException(\\\\\\\"enocuntered multiple occurrences of header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        if (value == null) {\\\\r\\\\n            throw new SignatureValidationException(\\\\\\\"could not find header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n        return value;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getWebhookSecretKey(String webhooksKeyId) throws BusinessException {\\\\r\\\\n        try {\\\\r\\\\n            String query = \\\\\\\"select pg.webhooksSecretKey from PaymentGateway pg where pg.webhooksKeyId=:webhooksKeyId\\\\\\\";\\\\r\\\\n            Map<String, Object> queryParams = new HashMap<>();\\\\r\\\\n            queryParams.put(\\\\\\\"webhooksKeyId\\\\\\\", webhooksKeyId);\\\\r\\\\n            Object result = paymentGatewayService.executeSelectQuery(query, queryParams);\\\\r\\\\n            return ((List<String>)result).get(0);\\\\r\\\\n        } catch (Exception e) {\\\\r\\\\n            throw new BusinessException(String.format(\\\\\\\"Error on getWebhookSecretKey for webhooksKeyId = [%s]\\\\\\\", webhooksKeyId));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\",\r\n                \"type\": \"JAVA\"\r\n            }\r\n        },\r\n        {\r\n            \"notification\": {\r\n                \"updatedCode\": null,\r\n                \"code\": \"SaveIngenicoCardInbound\",\r\n                \"classNameFilter\": \"org.meveo.model.notification.InboundRequest\",\r\n                \"eventTypeFilter\": \"INBOUND_REQ\",\r\n                \"elFilter\": \"#{event.pathInfo.endsWith(\\\\\\\"/ingenico/saveCard\\\\\\\")}\",\r\n                \"scriptInstanceCode\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"scriptParams\": {\r\n                    \"event\": \"#{event}\"\r\n                },\r\n                \"counterTemplate\": null\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "60907f9d-fd4a-4bf8-b5b3-f8aeaf38d931",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_MOD\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"license\": \"COM\",\r\n    \"moduleItems\": [\r\n        {\r\n            \"script\": {\r\n                \"code\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"description\": \"Save Ingenico Card\",\r\n                \"script\": \"package org.meveo.service.script;\\\\r\\\\n\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.Client;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.RequestHeader;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.PaymentResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.CardPaymentMethodSpecificOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentReferences;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentStatusOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.token.TokenResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.webhooks.WebhooksEvent;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.InMemorySecretKeyStore;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.SignatureValidationException;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.Webhooks;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.WebhooksHelper;\\\\r\\\\nimport org.apache.commons.collections4.MapUtils;\\\\r\\\\nimport org.json.simple.JSONObject;\\\\r\\\\nimport org.json.simple.parser.JSONParser;\\\\r\\\\nimport org.json.simple.parser.ParseException;\\\\r\\\\nimport org.meveo.admin.exception.BusinessException;\\\\r\\\\nimport org.meveo.commons.utils.StringUtils;\\\\r\\\\nimport org.meveo.model.notification.InboundRequest;\\\\r\\\\nimport org.meveo.model.payments.CardPaymentMethod;\\\\r\\\\nimport org.meveo.model.payments.CreditCardTypeEnum;\\\\r\\\\nimport org.meveo.model.payments.CustomerAccount;\\\\r\\\\nimport org.meveo.model.payments.PaymentGateway;\\\\r\\\\nimport org.meveo.service.payments.impl.CustomerAccountService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentGatewayService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentMethodService;\\\\r\\\\nimport org.slf4j.Logger;\\\\r\\\\nimport org.slf4j.LoggerFactory;\\\\r\\\\n\\\\r\\\\nimport java.util.ArrayList;\\\\r\\\\nimport java.util.HashMap;\\\\r\\\\nimport java.util.List;\\\\r\\\\nimport java.util.Map;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n *\\\\r\\\\n * @author Mounir Bahije\\\\r\\\\n *\\\\r\\\\n *         Script executed to save card enrolled with Ingenico Hosted Checkout\\\\r\\\\n *\\\\r\\\\n */\\\\r\\\\npublic class SaveIngenicoCardScript extends Script {\\\\r\\\\n\\\\r\\\\n    private final static Logger log = LoggerFactory.getLogger(SaveIngenicoCardScript.class);\\\\r\\\\n\\\\r\\\\n    private PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface(\\\\\\\"PaymentMethodService\\\\\\\");\\\\r\\\\n    private CustomerAccountService customerAccountService = (CustomerAccountService) getServiceInterface(\\\\\\\"CustomerAccountService\\\\\\\");\\\\r\\\\n    private PaymentGatewayService paymentGatewayService = (PaymentGatewayService) getServiceInterface(\\\\\\\"PaymentGatewayService\\\\\\\");\\\\r\\\\n\\\\r\\\\n    @Override\\\\r\\\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\\\r\\\\n\\\\r\\\\n        String verification = \\\\\\\"\\\\\\\";\\\\r\\\\n        InboundRequest inReq = (InboundRequest) methodContext.get(\\\\\\\"event\\\\\\\");\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"GET\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            String body = inReq.getBody();\\\\r\\\\n            Map<String, String> headers = inReq.getHeaders();\\\\r\\\\n            for (String headerKey : headers.keySet()) {\\\\r\\\\n                if (\\\\\\\"X-GCS-Webhooks-Endpoint-Verification\\\\\\\".equalsIgnoreCase(headerKey)) {\\\\r\\\\n                    String headerValue = headers.get(headerKey);\\\\r\\\\n                    verification = headerValue;\\\\r\\\\n                    inReq.setResponseBody(verification);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"POST\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            final String reqBody = inReq.getBody();\\\\r\\\\n\\\\r\\\\n            List<RequestHeader> requestHeaders = getWebhookRequestHeaders(inReq.getHeaders());\\\\r\\\\n            String webhooksKeyId = this.getHeaderValue(requestHeaders, \\\\\\\"X-GCS-KeyId\\\\\\\");\\\\r\\\\n\\\\r\\\\n            InMemorySecretKeyStore keyStore = InMemorySecretKeyStore.INSTANCE;\\\\r\\\\n            keyStore.storeSecretKey(webhooksKeyId, getWebhookSecretKey(webhooksKeyId));\\\\r\\\\n\\\\r\\\\n            WebhooksHelper helper = Webhooks.createHelper(keyStore);\\\\r\\\\n            WebhooksEvent webhooksEvent = helper.unmarshal(reqBody, requestHeaders);\\\\r\\\\n\\\\r\\\\n            PaymentResponse payment = webhooksEvent.getPayment();\\\\r\\\\n            if (payment == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentResponse not found on webhooksEvent : [%s]\\\\\\\", webhooksEvent));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentOutput paymentOutput = payment.getPaymentOutput();\\\\r\\\\n            if (paymentOutput == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentReferences paymentReferences = paymentOutput.getReferences();\\\\r\\\\n            if (paymentReferences == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"paymentReferences not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            String merchantReference = paymentReferences.getMerchantReference();\\\\r\\\\n\\\\r\\\\n            if (merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") >= 0) {\\\\r\\\\n\\\\r\\\\n                String longIdCA = merchantReference.substring(merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") + 3);\\\\r\\\\n                CustomerAccount ca = customerAccountService.findById(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                PaymentGateway paymentGateway = paymentGatewayService.getPaymentGateway(ca, null, null);\\\\r\\\\n\\\\r\\\\n                if (paymentGateway == null) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is null\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                if (!webhooksKeyId.equals(paymentGateway.getWebhooksKeyId())) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is not the good one\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                String status = payment.getStatus();\\\\r\\\\n                if (\\\\\\\"PENDING_CAPTURE\\\\\\\".equalsIgnoreCase(status)) {\\\\r\\\\n                    PaymentStatusOutput paymentStatusOutput = payment.getStatusOutput();\\\\r\\\\n                    if (paymentStatusOutput == null) {\\\\r\\\\n                        throw new BusinessException(String.format(\\\\\\\"paymentStatusOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n                    }\\\\r\\\\n                    Boolean isAuthorized = paymentStatusOutput.getIsAuthorized();\\\\r\\\\n\\\\r\\\\n                    if (isAuthorized) {\\\\r\\\\n\\\\r\\\\n                        CardPaymentMethodSpecificOutput cardPaymentMethodSpecificOutput = paymentOutput.getCardPaymentMethodSpecificOutput();\\\\r\\\\n                        if (cardPaymentMethodSpecificOutput == null) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"cardPaymentMethodSpecificOutput not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n                        }\\\\r\\\\n                        Long paymentProductId = Long.valueOf(cardPaymentMethodSpecificOutput.getPaymentProductId());\\\\r\\\\n\\\\r\\\\n                        JSONParser jsonParser = new JSONParser();\\\\r\\\\n                        JSONObject obj = null;\\\\r\\\\n                        try {\\\\r\\\\n                            obj = (JSONObject) jsonParser.parse(reqBody);\\\\r\\\\n                        } catch (ParseException e) {\\\\r\\\\n                            e.printStackTrace();\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String tokenId = (String) ((JSONObject) ((JSONObject) ((JSONObject) obj.get(\\\\\\\"payment\\\\\\\")).get(\\\\\\\"paymentOutput\\\\\\\")).get(\\\\\\\"cardPaymentMethodSpecificOutput\\\\\\\")).get(\\\\\\\"token\\\\\\\");\\\\r\\\\n                        if (StringUtils.isBlank(tokenId)) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"tokenId not found on webhooksEvent.payment.paymentOutput.cardPaymentMethodSpecificOutput : [%s]\\\\\\\", cardPaymentMethodSpecificOutput));\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String merchantId = webhooksEvent.getMerchantId();\\\\r\\\\n\\\\r\\\\n                        try {\\\\r\\\\n\\\\r\\\\n                            CreditCardTypeEnum cardType = fromId(Long.valueOf(paymentProductId).intValue());\\\\r\\\\n\\\\r\\\\n                            Client client = (Client) paymentMethodService.getClient(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                            TokenResponse response = client.merchant(merchantId).tokens().get(tokenId);\\\\r\\\\n\\\\r\\\\n                            String cardNumber = response.getCard().getData().getCardWithoutCvv().getCardNumber();\\\\r\\\\n                            String expiryDate = response.getCard().getData().getCardWithoutCvv().getExpiryDate();\\\\r\\\\n                            String ownerName = response.getCard().getData().getCardWithoutCvv().getCardholderName();\\\\r\\\\n                            CardPaymentMethod paymentMethod = new CardPaymentMethod();\\\\r\\\\n                            paymentMethod.setCardNumber(cardNumber);\\\\r\\\\n                            paymentMethod.setCardType(cardType);\\\\r\\\\n                            paymentMethod.setCustomerAccount(ca);\\\\r\\\\n                            paymentMethod.setPreferred(true);\\\\r\\\\n                            paymentMethod.setMonthExpiration(new Integer(expiryDate.substring(0, 2)));\\\\r\\\\n                            paymentMethod.setYearExpiration(new Integer(expiryDate.substring(2, 4)));\\\\r\\\\n                            paymentMethod.setOwner(ownerName);\\\\r\\\\n                            paymentMethod.setTokenId(tokenId);\\\\r\\\\n                            paymentMethod.setHiddenCardNumber(CardPaymentMethod.hideCardNumber(cardNumber));\\\\r\\\\n                            if (!paymentMethodService.cardTokenExist(paymentMethod)) {\\\\r\\\\n                                paymentMethodService.create(paymentMethod);\\\\r\\\\n                            }\\\\r\\\\n                        } catch (Exception e) {\\\\r\\\\n                            throw new BusinessException(\\\\\\\"Error on SaveIngenicoCardScript : \\\\\\\" + e.getMessage());\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private CreditCardTypeEnum fromId(Integer id) {\\\\r\\\\n        for (CreditCardTypeEnum es : CreditCardTypeEnum.values()) {\\\\r\\\\n            if (es.getId().equals(id)) {\\\\r\\\\n                return es;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        throw new IllegalArgumentException();\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private List<RequestHeader> getWebhookRequestHeaders(Map<String, String> headers) {\\\\r\\\\n        List<RequestHeader> webhookHeaders = new ArrayList<>();\\\\r\\\\n        if (MapUtils.isNotEmpty(headers)) {\\\\r\\\\n            headers.forEach((key, value) -> webhookHeaders.add(new RequestHeader(key, value)) );\\\\r\\\\n        }\\\\r\\\\n        return webhookHeaders;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getHeaderValue(List<RequestHeader> requestHeaders, String headerName) {\\\\r\\\\n        String value = null;\\\\r\\\\n        for (RequestHeader header : requestHeaders) {\\\\r\\\\n            if (headerName.equalsIgnoreCase(header.getName())) {\\\\r\\\\n                if (value == null) {\\\\r\\\\n                    value = header.getValue();\\\\r\\\\n                } else {\\\\r\\\\n                    throw new SignatureValidationException(\\\\\\\"enocuntered multiple occurrences of header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        if (value == null) {\\\\r\\\\n            throw new SignatureValidationException(\\\\\\\"could not find header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n        return value;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getWebhookSecretKey(String webhooksKeyId) throws BusinessException {\\\\r\\\\n        try {\\\\r\\\\n            String query = \\\\\\\"select pg.webhooksSecretKey from PaymentGateway pg where pg.webhooksKeyId=:webhooksKeyId\\\\\\\";\\\\r\\\\n            Map<String, Object> queryParams = new HashMap<>();\\\\r\\\\n            queryParams.put(\\\\\\\"webhooksKeyId\\\\\\\", webhooksKeyId);\\\\r\\\\n            Object result = paymentGatewayService.executeSelectQuery(query, queryParams);\\\\r\\\\n            return ((List<String>)result).get(0);\\\\r\\\\n        } catch (Exception e) {\\\\r\\\\n            throw new BusinessException(String.format(\\\\\\\"Error on getWebhookSecretKey for webhooksKeyId = [%s]\\\\\\\", webhooksKeyId));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\",\r\n                \"type\": \"JAVA\"\r\n            }\r\n        },\r\n        {\r\n            \"notification\": {\r\n                \"updatedCode\": null,\r\n                \"code\": \"SaveIngenicoCardInbound\",\r\n                \"classNameFilter\": \"org.meveo.model.notification.InboundRequest\",\r\n                \"eventTypeFilter\": \"INBOUND_REQ\",\r\n                \"elFilter\": \"#{event.pathInfo.endsWith(\\\\\\\"/ingenico/saveCard\\\\\\\")}\",\r\n                \"scriptInstanceCode\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"scriptParams\": {\r\n                    \"event\": \"#{event}\"\r\n                },\r\n                \"counterTemplate\": null\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "71e7c37f-1835-42d0-a61a-fc99e7b371ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.module.code).to.eql(pm.environment.get(\"testCode\")+\"_MOD\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.module.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module?code={{testCode}}_MOD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_MOD"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c406a131-3980-42b5-8442-7f5cf7f4f09f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module/{{testCode}}_MOD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module",
														"{{testCode}}_MOD"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Module ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "02b4f388-4d42-4201-80f8-735fd26f7c66",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"MeveoModule with code=TEST_MOD does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/module/{{testCode}}_MOD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module",
														"{{testCode}}_MOD"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Job Instance",
									"item": [
										{
											"name": "CreateOrUpdate Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5222baa1-9df7-4256-b21e-4df17110ecec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ffb4e197-07df-4b43-8349-f2048e6f534d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.jobInstanceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_JI\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.jobInstanceDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance?jobInstanceCode={{testCode}}_JI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance"
													],
													"query": [
														{
															"key": "jobInstanceCode",
															"value": "{{testCode}}_JI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Job Instance ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6a18b7b0-44a6-4b62-947a-3ee1ff9e13dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"JobInstance with code=\"+pm.environment.get(\"testCode\")+\"_JI already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/create",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Job Instance ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab09a922-b5b6-46e9-b7cd-3e5f79c6382e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"JobInstance with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/update",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "231c1904-f734-4611-82a4-6d06c2bbebe6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/update",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"update"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6783bc28-3c60-4d73-a5cb-07b9669c933e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86bc333c-4bd4-4255-8c36-e41799d238fd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.jobInstanceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_JI\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.jobInstanceDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance?jobInstanceCode={{testCode}}_JI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance"
													],
													"query": [
														{
															"key": "jobInstanceCode",
															"value": "{{testCode}}_JI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Job Instance MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "64aef894-f0c7-4c31-84f4-7534a5dc07c3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: SepaJob_ddRequestBuilder.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testDescription}}_JI\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Job Instance ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5eb331c6-2085-476c-a715-cb0a5257a36a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"JobTemplate with code 'NOT_EXIST' doesn't exist.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"NOT_EXIST\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "afea9a62-7443-4612-829e-43d51640b3d5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/{{testCode}}_JI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"{{testCode}}_JI"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ec2d3ca-034d-4c81-b404-ff2d1d6d34b4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"JobInstance with code=\"+pm.environment.get(\"testCode\")+\"_JI does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/{{testCode}}_JI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"{{testCode}}_JI"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Discount Plan",
									"item": [
										{
											"name": "CreateOrUpdate Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e80aa61d-d5e0-4f6d-9233-b0643dd4a141",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "532ae968-832f-40e3-bb09-93b419b6e6dc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.discountPlanDto.code).to.eql(pm.environment.get(\"testCode\")+\"_DP\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.discountPlanDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													],
													"query": [
														{
															"key": "discountPlanCode",
															"value": "{{testCode}}_DP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Discount Plan ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d5db2c09-1abd-47ab-b3f4-a312344e6147",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"DiscountPlan with code=\"+pm.environment.get(\"testCode\")+\"_DP already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Discount Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47c8dda2-a7b9-437c-8b41-0bd781707170",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"DiscountPlan with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"TEST\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "350dc405-f4f8-4aa4-9344-6363430d169a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cc428f81-1e74-466d-8880-9116f32e797e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "85952985-9c2e-4d93-9a5e-3da04e9c5a1f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.discountPlanDto.code).to.eql(pm.environment.get(\"testCode\")+\"_DP\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.discountPlanDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													],
													"query": [
														{
															"key": "discountPlanCode",
															"value": "{{testCode}}_DP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Discount Plan INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "befbe8e9-d62c-4b23-b4d6-4a1c9ac4d9bc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"INVALID\",\r\n    \"endDate\": \"INVALID\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac886afc-6d89-428d-8b97-5c47e37e76f3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													],
													"query": [
														{
															"key": "discountPlanCode",
															"value": "{{testCode}}_DP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Discount Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a18a91e-92f5-4b74-adfa-a1f47357d0f4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"DiscountPlan with code=\"+pm.environment.get(\"testCode\")+\"_DP does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													],
													"query": [
														{
															"key": "discountPlanCode",
															"value": "{{testCode}}_DP"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Billing",
							"item": [
								{
									"name": "Invoice Category",
									"item": [
										{
											"name": "CreateOrUpdate Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09693e74-2e26-4f87-95bf-80363d35164e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cf1b6ee4-ab3f-4c85-ba3d-c00a04dde4a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_IC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory?invoiceCategoryCode={{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													],
													"query": [
														{
															"key": "invoiceCategoryCode",
															"value": "{{testCode}}_IC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Invoice Category  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f56605f5-154e-4bd9-88eb-320c41ec8434",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=\"+pm.environment.get(\"testCode\")+\"_IC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Category  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b02d0388-cea8-41b5-8b70-b154ebe04e67",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "afb05357-300a-486b-ac76-6263cb593673",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6dd135f0-c31e-48a8-8d94-d96593a2c177",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39d7e24e-6035-4e7f-9a82-39571e94f127",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_IC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory?invoiceCategoryCode={{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													],
													"query": [
														{
															"key": "invoiceCategoryCode",
															"value": "{{testCode}}_IC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Category  MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09381da2-1ba8-4f99-82eb-b80f3f90ed5f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Category INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d1ca8ddb-324a-4e92-837a-cf51d705658d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.CustomFieldsDto`\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice SubCategory",
									"item": [
										{
											"name": "CreateOrUpdate Invoice SubCategory  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "895db7cf-f5da-4501-8e42-a1b7762a825d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_ISC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice SubCategory  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "563e72e1-b502-4ff9-a13c-1982972508fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSubCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_ISC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSubCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory?invoiceSubCategoryCode={{testCode}}_ISC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													],
													"query": [
														{
															"key": "invoiceSubCategoryCode",
															"value": "{{testCode}}_ISC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Invoice SubCategory  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1f7929b5-fea3-4124-97aa-5d0b9c658aea",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=\"+pm.environment.get(\"testCode\")+\"_ISC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_ISC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice SubCategory  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "727d4e3e-aa70-4abc-90c0-06473bbf4582",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice SubCategory  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a169c2c0-6220-45bd-b01e-161b3f6bccc6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice SubCategory  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "646e9e50-77ed-4944-ab1b-aa49b4d783fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "daba83ea-61d4-4535-9858-f403f4fe8f38",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSubCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_ISC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSubCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory?invoiceSubCategoryCode={{testCode}}_ISC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													],
													"query": [
														{
															"key": "invoiceSubCategoryCode",
															"value": "{{testCode}}_ISC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice SubCategory  MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "74e5b700-a4cc-44c8-aba5-e7115913a793",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: invoiceCategory.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice SubCategory INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb993eee-957b-4cc8-aac6-67be717e0905",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.CustomFieldsDto`\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice SubCategory ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f560b8d-217a-497f-bf2c-ed2f163d0bb3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceCategory\": \"NOT_EXIST\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice Sequence",
									"item": [
										{
											"name": "CreateOrUpdate Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c72d3e3a-6b7b-4a7e-8a3f-8ed20af732e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "303753f9-9a83-4068-a8d7-8dae3f897ca0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSequenceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_IS\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSequenceDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence?invoiceSequenceCode={{testCode}}_IS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													],
													"query": [
														{
															"key": "invoiceSequenceCode",
															"value": "{{testCode}}_IS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Invoice Sequence ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "62ef1516-a4bd-4ce6-b3dc-24851abf7a54",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSequence with code=\"+pm.environment.get(\"testCode\")+\"_IS already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Sequence ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4068db6c-2de7-421e-8ff8-b9b8a9b78176",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSequence with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d33aa138-9911-4021-b43e-2d0f17545d66",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ff39ea9-7a1e-4f6d-8dbc-d3bcb3e8a954",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b367e55d-ecaf-4ea5-9aa4-756d4ae31098",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSequenceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_IS\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSequenceDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence?invoiceSequenceCode={{testCode}}_IS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													],
													"query": [
														{
															"key": "invoiceSequenceCode",
															"value": "{{testCode}}_IS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Sequence MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e617a9f-e285-4444-bd66-46db52741c11",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Sequence INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "34d989cd-d549-4d7c-b69c-a142491719eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"sequenceSize\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clear Data",
									"item": [
										{
											"name": "Delete Invoice Category GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4e605ea2-14bb-4f62-b380-53e1cfa1f12e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"{{testCode}}_IC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice SubCategory SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a946ee95-7e65-4f5e-9cea-c498bb6fd4a2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/{{testCode}}_ISC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"{{testCode}}_ISC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice SubCategory ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9b5298a3-4343-4b8c-bd7b-15c2abbc3f89",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=\"+pm.environment.get(\"testCode\")+\"_ISC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/{{testCode}}_ISC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"{{testCode}}_ISC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c025bada-5438-435d-af59-5c014fcc873b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"{{testCode}}_IC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e415e0ec-173f-4098-9971-d667c99137a7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=\"+pm.environment.get(\"testCode\")+\"_IC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"{{testCode}}_IC"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Wallet Operation",
									"item": [
										{
											"name": "Create Wallet Operation SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eea404dc-37f6-4062-bfc7-2ef7ebc67823",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"chargeInstance\": \"CH_CLASSIC_REC_FLAT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/operation",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"operation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Wallet Operation ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb6d9053-f6a0-4857-92db-3975a6b5da37",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"WalletOperation with code=\"+pm.environment.get(\"testCode\")+\"_WLT already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"chargeInstance\": \"CH_CLASSIC_REC_FLAT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/operation",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"operation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Wallet Operation MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "be2dd95e-ab37-4e82-a503-de3843d7bd55",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"MISSING\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/operation",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"operation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Wallet Operation INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "84e91b38-cb7c-40c1-a6eb-13cde4963904",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"subscriptionDate\": \"INVALID\",\r\n    \"chargeInstance\": \"PR_CLASSIC_DEFAULT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/operation",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"operation"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Offers",
							"item": [
								{
									"name": "Offer Template",
									"item": [
										{
											"name": "CreateOrUpdate  Offer Template  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30ca821c-e48d-49f9-9657-5aa278c5b465",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Offer Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "683dc454-b454-457b-b598-1de1c6648744",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.offerTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_OT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.offerTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{testCode}}_OT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{testCode}}_OT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer Template  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fe4cf85-3fe0-4791-a2fa-7802a746fc13",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=\" + pm.environment.get(\"testCode\") + \"_OF already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Offer Template  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4bc30010-c574-44e3-8c2e-1c8c521412e7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OfferTemplate with code=NOT_EXIST /  /  does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Offer Template  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c793c340-54bc-4bc1-8ce3-656e22d70f23",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Offer Template  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5af7f2a1-be0e-47ca-ba3a-97ebdff77fa3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Offer Template  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf2a1ed9-6c03-471b-ba1c-06998dfecb49",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.offerTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_OT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.offerTemplate.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{testCode}}_OT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{testCode}}_OT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Offer Template INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2bb390a8-71be-488b-9806-0e1bef56fd88",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.catalog.LifeCycleStatusEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"INVALID\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"5_SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Offer Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f0e350b-3eda-458d-8154-c7888d099c78",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{testCode}}_OT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{testCode}}_OT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Offer Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4011227-d444-4b6f-8cb5-ceaf7398936d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OfferTemplate with code=\" + pm.environment.get(\"testCode\") + \"_OT /  /  does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{testCode}}_OT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{testCode}}_OT"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Tax Class",
									"item": [
										{
											"name": "CreateOrUpdate  Tax Class  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "723a3839-0d60-45f7-91dd-3dced4392533",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Tax Class SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bea90289-5ae5-4bff-a300-3da6b11ca19b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.dto.code).to.eql(pm.environment.get(\"testCode\") + \"_TC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.dto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass?code={{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_TC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax Class  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "65dd3516-f67f-4370-840e-1dd03c5c049d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"TaxClass with code=\" + pm.environment.get(\"testCode\") + \"_TC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Tax Class  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ecf503e3-4b65-4e78-bf1e-dfec2f2768dc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"TaxClass with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testCode}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Tax Class  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "22d52eb7-ca9d-42e3-82e1-6bd9950a41e2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax Class  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2cb7348c-3614-4005-b07a-0ca9b0874806",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Tax Class  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f7d528c-f001-42ed-a85a-7588e9e18cfb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.dto.code).to.eql(pm.environment.get(\"testCode\") + \"_TC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.dto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass?code={{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_TC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax Class INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7681e5b3-f170-42a6-9e0a-965a86421bde",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"INVALID\",\r\n    \"descriptionI18n\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7ef8d2e5-f4ab-4c03-a30d-50610c3a8b1b",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "76b2f042-26a2-48f1-8fcb-f9aa93ac327c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Recurring Charge",
									"item": [
										{
											"name": "CreateOrUpdate  Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "795e22f0-13d7-4be1-afa2-88957cfb8730",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8730cb1d-c05d-4390-8a33-d4727d461ccf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.recurringChargeTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_RCT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.recurringChargeTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate?recurringChargeTemplateCode={{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													],
													"query": [
														{
															"key": "recurringChargeTemplateCode",
															"value": "{{testCode}}_RCT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring Charge  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bcabfe6f-ae78-40f2-b78d-21daea954cce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"RecurringChargeTemplate with code=\" + pm.environment.get(\"testCode\") + \"_RCT already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Recurring Charge ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1cfe556d-e638-416c-9813-8d14d06eef93",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"RecurringChargeTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testCode}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Recurring Charge  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b6902984-cda1-4a8d-a294-e3a8fe7b7a96",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fc47943e-10ab-44b1-91e1-4dda5470d5f5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c3da3022-6b5e-482a-bf43-2307e149adc7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.recurringChargeTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_RCT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.recurringChargeTemplate.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate?recurringChargeTemplateCode={{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													],
													"query": [
														{
															"key": "recurringChargeTemplateCode",
															"value": "{{testCode}}_RCT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Recurring Charge MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "280ec375-3169-4f40-8149-14cedd2fb4c1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: invoiceSubCategory, calendar, taxClassCode.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"MISSING\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Recurring Charge INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "918d1177-3578-4eb9-9b5e-764807321442",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_REC\",\r\n    \"disabled\": \"INVAID\",\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"calendar\": \"CAL_MONTHLY_1ST\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b89eba5d-5326-437a-87a5-e2ff9e248f9e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2de1ea01-8f72-4817-857c-de96f88d9618",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Price Plan",
									"item": [
										{
											"name": "CreateOrUpdate  Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af569bbf-6bdc-4951-9fcc-bccfb73bc169",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a0cd943-6f65-4e14-a8dc-eef06e1ca817",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.pricePlan.code).to.eql(pm.environment.get(\"testCode\") + \"_PP\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.pricePlan.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan?pricePlanCode={{testCode}}_PP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													],
													"query": [
														{
															"key": "pricePlanCode",
															"value": "{{testCode}}_PP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b7c76cc3-f39e-4bf4-85ae-59b85a40b4e5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PricePlanMatrix with code=\" + pm.environment.get(\"testCode\") + \"_PP already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Price Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "419d2654-8a5e-4d78-9961-14a5999e7f7d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PricePlanMatrix with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e47d1f81-8976-4d32-b291-f5ee6d7980ab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b01ce09d-65ae-4322-a3d0-27ade01f1861",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4a2c50c7-be1d-4dbc-a98a-568a2f9f84a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.pricePlan.code).to.eql(pm.environment.get(\"testCode\") + \"_PP\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.pricePlan.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan?pricePlanCode={{testCode}}_PP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													],
													"query": [
														{
															"key": "pricePlanCode",
															"value": "{{testCode}}_PP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Price Plan MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8f2fdf8-fc46-484a-8871-9556eaebe67e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: eventCode, amountWithoutTax.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"MISSING\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Price Plan INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "68fb84a6-339e-4106-a6f5-4627fa81f7a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RcT\",\r\n    \"amountWithoutTax\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09e55195-b7d0-4dbb-98a3-c8900cb8ef2c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/{{testCode}}_PP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"{{testCode}}_PP"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Price Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9dc4772a-c17d-474f-9aca-5a99b1d6634f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PricePlanMatrix with code=\" + pm.environment.get(\"testCode\") + \"_PP does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/{{testCode}}_PP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"{{testCode}}_PP"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0291c47f-d739-4a88-9bee-80ea0d90b8d9",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "dd6a68af-cb93-4c8f-aaf7-1d9d77c6d3a0",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Service Template",
									"item": [
										{
											"name": "CreateOrUpdate  Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3acc7783-7182-40d1-a7c7-b2c6c01943b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "046ef937-18f0-40c6-a870-e48586e0e655",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_ST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate?serviceTemplateCode={{testCode}}_ST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													],
													"query": [
														{
															"key": "serviceTemplateCode",
															"value": "{{testCode}}_ST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service Template  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5978d2a6-2e13-4c60-a4a3-bf0b78fb2c0e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceTemplateService with code=\" + pm.environment.get(\"testCode\") + \"_ST already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Service Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e5bb08ad-ea45-460f-86b9-6be0274d78a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceTemplateService with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1a3964ef-f237-4621-ab91-2a8e83b96ab3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3199dc1d-0a50-4ec9-8500-3e955ccb54fd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c5f6404-7c4e-4630-aa23-9165ca915a0c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_ST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceTemplate.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate?serviceTemplateCode={{testCode}}_ST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													],
													"query": [
														{
															"key": "serviceTemplateCode",
															"value": "{{testCode}}_ST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Service Template MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "731bbf81-a08d-4c81-b31e-7138c4c6f30b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Service Template INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e79ae4f-52a6-42c5-a7c1-0fb0aa52fc4a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": \"INVALID\",\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c4acceec-2c27-4ea4-a523-4b7b7ed7ae9f",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "583c5895-7abf-4109-8517-3fa878880d4a",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clear Data",
									"item": [
										{
											"name": "Delete Tax Class GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4761828b-1799-49da-9693-0b88b5501edb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table \\\"billing_tax_class\\\" violates foreign key constraint\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"{{testCode}}_TC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Recurring Charge GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6562e2d4-fa5f-4990-a97e-a88adc4582ee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"{{testCode}}_RCT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "109f5275-200d-449e-88f3-b4b45c99acdb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/{{testCode}}_ST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"{{testCode}}_ST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Service Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c502775-12a7-457a-a044-bf0c1a4b392a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceTemplate with code=\" + pm.environment.get(\"testCode\") + \"_ST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/{{testCode}}_ST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"{{testCode}}_ST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2e741af3-619f-4fbd-8802-cb50459512cd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"{{testCode}}_RCT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Recurring Charge ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "68d667f7-600b-4085-90cc-022b99e48e77",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"RecurringChargeTemplate with code=\" + pm.environment.get(\"testCode\") + \"_RCT does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"{{testCode}}_RCT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Tax Class SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "00703ce7-f000-49ce-912e-5204c08bf5c9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"{{testCode}}_TC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Tax Class ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b8d33e77-3938-4b70-b13b-6f30a7396772",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"TaxClass with code=\" + pm.environment.get(\"testCode\") + \"_TC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"{{testCode}}_TC"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription",
							"item": [
								{
									"name": "Subscription",
									"item": [
										{
											"name": "CreateOrUpdate Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd336ea2-a56c-41f0-b46e-c431a223d68d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\t\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e334e3cc-f555-405e-b67d-4acc95fad8bd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"testCode\")+\"_SUB\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{testCode}}_SUB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{testCode}}_SUB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Subscription ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3fcba3b-fe80-4d3d-9272-161fc3ad7abb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Subscription with code=\"+pm.environment.get(\"testCode\")+\"_SUB already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Subscription ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "54ca96d6-be87-45ae-a1ed-581604a16a13",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Subscription with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"userAccount\": \"ben.ohara\",\r\n\t\"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n\t\"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "870f4b8f-6442-4178-beea-4df139cf1ea4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f2b93274-6467-44a6-9cea-216195012c21",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Subscription SUCCESS Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28ec37b1-64e1-4927-8fb6-cb0cf7b2c62b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"testCode\")+\"_SUB\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{testCode}}_SUB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{testCode}}_SUB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Subscription ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "408a20a4-29e5-42fa-a350-f31690b30fa8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"NOT_EXIST\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Subscription MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "04d2004a-9d85-4654-bcbc-e1055afe55d5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: subscriptionDate.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"ben.ohara\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Subscription INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "27bad866-4cf5-45f0-a426-1e57c1d142af",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58c6db38-06d8-4877-b3fa-bf8c706c5dbe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{testCode}}_SUB\",\r\n    \"terminationReason\" : \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2019-01-01\",\r\n    \"orderItemAction\" : \"DELETE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription RESILIATED",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8ab71564-7bd7-4d23-8f50-b34575cf3c10",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Subscription is already RESILIATED.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{testCode}}_SUB\",\r\n    \"terminationReason\" : \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2019-01-01\",\r\n    \"orderItemAction\" : \"DELETE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Subscribe and Activate Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "947be46e-ee52-444e-8f28-3fac5a3ea732",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"SUB_TEST_1\",\r\n    \"userAccount\": \"DEMO.CLASSIC\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n                \"quantity\": 1\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/subscribeAndActivateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"subscribeAndActivateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Subscribe and Activate Subscription ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "848fc9b1-6e75-4e52-baab-b8fef16ee71e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Subscription with code=SUB_TEST_1 already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"SUB_TEST_1\",\r\n    \"userAccount\": \"DEMO.CLASSIC\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n                \"quantity\": 1\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/subscribeAndActivateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"subscribeAndActivateServices"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Settings",
							"item": [
								{
									"name": "Title",
									"item": [
										{
											"name": "CreateOrUpdate Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b9cd46e-ea62-410b-a13a-aa7dc2cdea2b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66fe72c0-eed1-437d-8ad1-15d26c9f3968",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.titleDto.code).to.eql(pm.environment.get(\"testCode\")+\"_TITLE\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.titleDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title?titleCode={{testCode}}_TITLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													],
													"query": [
														{
															"key": "titleCode",
															"value": "{{testCode}}_TITLE"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Title ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0857f095-7cc7-4afc-8150-7cf9b463cf51",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Title with code=\"+pm.environment.get(\"testCode\")+\"_TITLE already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Title ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d3981ea-fdea-476d-9f0b-731dbcd43cfc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Title with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28f94b1a-ae76-4d2b-ab9f-6ba463aa35e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Operation SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bc31c14a-721c-440c-ad2d-43f35ecde609",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1abe613f-0000-4576-98da-fc3ed6a6eb78",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.titleDto.code).to.eql(pm.environment.get(\"testCode\")+\"_TITLE\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.titleDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title?titleCode={{testCode}}_TITLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													],
													"query": [
														{
															"key": "titleCode",
															"value": "{{testCode}}_TITLE"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Title MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f50f3cc-f47d-4895-9d83-1f7d8293b421",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: titleCode.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Title INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4feda2be-bb85-4282-943a-35469e5fc805",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"Test\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"INVALID\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "97d0a868-bb4d-4147-bd42-50d5018ee634",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/{{testCode}}_TITLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"{{testCode}}_TITLE"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Title ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bba2c59-4b05-430f-bc8b-bdef6e532c78",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Title with code=\"+pm.environment.get(\"testCode\")+\"_TITLE does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/{{testCode}}_TITLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"{{testCode}}_TITLE"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Calendar",
									"item": [
										{
											"name": "CreateOrUpdate Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "010a0881-ee73-4a71-be5e-e17f84389992",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5776b5f1-8ed0-42c4-80c3-640312280ba8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.calendar.code).to.eql(pm.environment.get(\"testCode\")+\"_CAL\");",
															"});",
															"",
															"pm.test(\"Description is equal Monthly (1st of the month)\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.calendar.description).to.eql(\"Monthly (1st of the month)\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/?calendarCode={{testCode}}_CAL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														""
													],
													"query": [
														{
															"key": "calendarCode",
															"value": "{{testCode}}_CAL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Calendar ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "881d28af-0a8b-4227-85bd-94c493bf2564",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=\"+pm.environment.get(\"testCode\")+\"_CAL already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Calendar ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "46d4fd9d-4821-49f4-853e-978e44d777d4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "115a584b-3110-4be5-8f7e-a1ed77647d09",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month) updated\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53109ece-b494-4006-991e-46723ff0d581",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month) updated\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09021415-5811-48af-8e67-b2c1d1ebd6f9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.calendar.code).to.eql(pm.environment.get(\"testCode\")+\"_CAL\");",
															"});",
															"",
															"pm.test(\"Description is equal Monthly (1st of the month)\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.calendar.description).to.eql(\"Monthly (1st of the month) updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/?calendarCode={{testCode}}_CAL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														""
													],
													"query": [
														{
															"key": "calendarCode",
															"value": "{{testCode}}_CAL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Calendar MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f0892f0-51f1-44fd-9028-a6a180c1a94d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: calendarType.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Calendar GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d5f95864-4110-41af-8887-97fd7ec9c507",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"query did not return a unique result\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Calendar INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6bfd9219-6bbb-45cf-b19f-5e3e9465fed6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.api.dto.CalendarTypeEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"INVALID\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "34ee114d-e472-4fcd-94b0-6343b275606d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/{{testCode}}_CAL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"{{testCode}}_CAL"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Calendar ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "37617796-c9f0-4c00-94b3-5772d8911e14",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=\"+pm.environment.get(\"testCode\")+\"_CAL does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/{{testCode}}_CAL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"{{testCode}}_CAL"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Channel",
									"item": [
										{
											"name": "CreateOrUpdate Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cfb0c12a-b0de-48cf-b417-8933d2f392ca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c21f82b-3348-4121-870d-991342e0ad31",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.channel.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.channel.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													],
													"query": [
														{
															"key": "channelCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Channel ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4a0aca0-a0dd-4ddb-b264-ec94f9cf9d9c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Channel with code=\"+pm.environment.get(\"testCode\")+\"_CH already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Channel ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "135d02cd-6af2-4f61-b844-23e1a2cd04d9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Channel with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a3c9dcde-f087-4d5c-877b-d44f7acafe33",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d55a18ea-7ea2-4258-a4b6-c642d4ee1911",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6448df7f-63b2-4eea-8102-39d5dcc250fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.channel.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.channel.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													],
													"query": [
														{
															"key": "channelCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Channel MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "27a55526-246a-4cc8-a61d-5afcd1a61c25",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Channel INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "02499004-f773-4841-9124-0fdc34bbf3b1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": \"INVALID\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc2e66ad-84ba-467d-8c49-779cc256e9dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													],
													"query": [
														{
															"key": "channelCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Channel ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3b66b8e-7352-4196-aa55-7f3e15d507e2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Channel with code=\"+pm.environment.get(\"testCode\")+\"_CH does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													],
													"query": [
														{
															"key": "channelCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "CountryIso",
									"item": [
										{
											"name": "CreateOrUpdate CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "021a985e-9e20-4fea-8d4b-3a0b26900bf7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "491060e5-a967-4179-8e75-a0815c7edc63",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TS\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.country.countryCode).to.eql(\"TS\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.country.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso?countryCode=TS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													],
													"query": [
														{
															"key": "countryCode",
															"value": "TS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CountryIso  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "106ee355-3f66-46fa-979a-6f980801fcef",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Country with code=TS already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "70e97d1d-9bc8-413d-8242-dfac46ed863f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Country with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d4160a5-a992-4b94-8e1d-d5f67ba22b4c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1cd52c0f-7fc6-455b-8504-f2ef01e536b8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dda46716-ed49-41a0-8e5b-95ad87f95d5e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TS\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.country.countryCode).to.eql(\"TS\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.country.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso?countryCode=TS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													],
													"query": [
														{
															"key": "countryCode",
															"value": "TS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso  MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0779ecaa-a407-40b5-837b-bf9d161be309",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: currencyCode.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"MISSING\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8c0871b4-14f1-4b6d-bd73-554fc6d094dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"INVALID\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"languageDescriptions\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c90e65a-6c21-4ac7-be1e-074a26f97f62",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"countryCode size must be between 0 and 10\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TOO_LONG_NAME\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aa360655-0f67-4940-8b0b-5a631c180519",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"NOT_EXIST\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d85c7a6-46ac-4c6f-bf4b-d72b6a3361bd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/TS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"TS"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26f9fc18-6b7a-494e-a96c-980de26c7512",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Country with code=TS does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/TS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"TS"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "CurrencyIso",
									"item": [
										{
											"name": "CreateOrUpdate CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0b52b99d-c4ca-444b-9747-bddf7b353a72",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4be0e9cb-b350-40fd-9740-f2074d0af1b2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TST\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.currency.code).to.eql(\"TST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.currency.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso?currencyCode=TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													],
													"query": [
														{
															"key": "currencyCode",
															"value": "TST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CurrencyIso ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05a92a2e-d559-4cc5-b305-f28cbda49bc2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Currency with code=TST already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CurrencyIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c6951fa-3362-4317-8161-cbbb1562c05d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Currency with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36656f6d-bcc7-48c6-88c4-f45ee050948c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c5abbdf2-de95-4c82-839c-efdafaeabad6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5943279b-1a02-4a8e-b712-07f80093073b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TST\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.currency.code).to.eql(\"TST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.currency.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso?currencyCode=TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													],
													"query": [
														{
															"key": "currencyCode",
															"value": "TST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CurrencyIso INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "850300ad-6d17-4dab-92b7-6c107284257e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"currencyCode size must be between 0 and 3\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TEST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CurrencyIso  MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9580d888-ab4b-40e7-a9c4-3a834dd2801b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CurrencyIso  GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c69e9da1-6d12-4315-a7d7-0b346fa5435c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: null value in column\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "73a1631c-3b0c-4310-9930-0d0889740621",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"TST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CurrencyIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30f2c7e4-6dae-49a9-9f38-57b4a40aa1e8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Currency with code=TST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"TST"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "LanguageIso",
									"item": [
										{
											"name": "CreateOrUpdate LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "622f8394-9458-4a84-8dfe-6b508b1d0173",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n  \"code\": \"TST\",\r\n  \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99d3d85e-c06f-4257-84d8-abc595fa4420",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TST\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.language.code).to.eql(\"TST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.language.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso?languageCode=TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													],
													"query": [
														{
															"key": "languageCode",
															"value": "TST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create LanguageIso  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ae7f5981-0bf5-4c92-a299-496f150fb8ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language with code=TST already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update LanguageIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c99ea24f-ed4a-4e19-8c96-1996cbc053d2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "600974ed-0aaf-4cd4-89a0-9044c39c110a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "48cb817a-cade-43df-a094-ab905d0c8326",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2463123b-8dac-4d0b-965a-fe7dd2f5e9db",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TST\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.language.code).to.eql(\"TST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.language.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso?languageCode=TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													],
													"query": [
														{
															"key": "languageCode",
															"value": "TST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate LanguageIso INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ba0963ee-042a-4e5b-b795-d67539a9e3f2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"languageCode size must be between 0 and 3\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TEST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate LanguageIso MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "62aea540-d0bb-4965-965c-3c410fef6471",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate LanguageIso GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "984fa7fe-52b2-4cd5-a198-53d123ebef6e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: null value in column\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4964f07-c866-453a-86c6-68eb5df04328",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"TST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete LanguageIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8c7a829f-bbd3-4376-9913-ec8fe2b7ad82",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language with code=TST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"TST"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Provider",
									"item": [
										{
											"name": "Create Provider BUSINESS_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3950e7fb-408f-4018-989b-fa4a6d5d11c4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"There should already be a provider setup\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "971f60d1-eb4c-4522-bde2-6a71f9e8f64d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Provider SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c687f4e2-c6d5-4582-947b-5ac38029a1c2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.provider.code).to.eql(pm.environment.get(\"testCode\")+\"_PROVIDER\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.provider.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b00ecf82-058d-4309-9539-62a79a12a94a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Provider SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fcff9470-5cd7-4342-9ec5-f6426bb5f85f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.provider.code).to.eql(pm.environment.get(\"testCode\")+\"_PROVIDER\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.provider.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "42fde28a-d203-4ebb-8330-5286053f519f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_PROVIDER\",\r\n  \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"INVALID\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n      \"displaySubscriptions\": \"true\",\r\n      \"displayServices\": \"true\",\r\n      \"displayOffers\": \"true\",\r\n      \"displayEdrs\": \"true\",\r\n      \"displayProvider\": \"true\",\r\n      \"displayCfAsXML\": \"true\",\r\n      \"displayPricePlans\": \"true\",\r\n      \"displayDetail\": \"true\",\r\n      \"displayChargesPeriods\": \"true\",\r\n      \"displayFreeTransacInInvoice\": \"false\",\r\n      \"displayBillingCycle\": \"true\",\r\n      \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "546fb4d8-1e79-443f-ad51-86da39d44d98",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_PROVIDER\",\r\n  \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"INVALID\",\r\n    \"invoiceConfiguration\": {\r\n      \"displaySubscriptions\": \"true\",\r\n      \"displayServices\": \"true\",\r\n      \"displayOffers\": \"true\",\r\n      \"displayEdrs\": \"true\",\r\n      \"displayProvider\": \"true\",\r\n      \"displayCfAsXML\": \"true\",\r\n      \"displayPricePlans\": \"true\",\r\n      \"displayDetail\": \"true\",\r\n      \"displayChargesPeriods\": \"true\",\r\n      \"displayFreeTransacInInvoice\": \"false\",\r\n      \"displayBillingCycle\": \"true\",\r\n      \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a98761e7-c0c3-4ee7-b26d-8e79c523d824",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ff305a4f-92fb-4deb-9ea5-3780fc934ae2",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Role",
									"item": [
										{
											"name": "CreateOrUpdate Role SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5043b87b-ad5b-4a4e-a0cc-588a62a1e109",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Role SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dfe5bb82-b3d6-405b-a0fd-f05a33bbd678",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\"+pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.roleDto.name).to.eql(pm.environment.get(\"testCode\") + \"_ROLE\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.roleDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role?roleName={{testCode}}_ROLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													],
													"query": [
														{
															"key": "roleName",
															"value": "{{testCode}}_ROLE"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Role ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9a3dda6-07b4-4b8b-acf2-4b0bfa030550",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Role with role name=\"+pm.environment.get(\"testCode\")+\"_ROLE already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2a195c48-68e1-4804-806c-292341fdc3a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Role with name=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Role SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c5d9b3cc-8d74-4170-a230-cec092fc385a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Role  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1b467725-f4d5-4440-a430-ead8c2811538",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Role  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a96e54e7-27f8-4abd-8410-a3dfe3ee1ed0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.roleDto.name).to.eql(pm.environment.get(\"testCode\") + \"_ROLE\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.roleDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role?roleName={{testCode}}_ROLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													],
													"query": [
														{
															"key": "roleName",
															"value": "{{testCode}}_ROLE"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Role INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8a5f8b0a-cdf4-4286-ab55-d43fe08fb633",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Role MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c0f6bdd-8e39-45f2-832c-5d817a415449",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: name.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n\t\"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "97b6c33b-24bd-4cde-8ecc-994510d89674",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Permission with name=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"NOT_EXIST\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Role  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e709f612-8493-4729-ad9e-06e9e974b463",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role/{{testCode}}_ROLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"{{testCode}}_ROLE"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d069a441-b740-4cdb-85a5-0042b0ef01a0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Role with name=\"+pm.environment.get(\"testCode\")+\"_ROLE does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role/{{testCode}}_ROLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"{{testCode}}_ROLE"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Tax",
									"item": [
										{
											"name": "CreateOrUpdate Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e165590c-d7dc-4417-b7de-1fce6e1e78f0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "85f9e741-9297-455d-a44e-3537d114b045",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.tax.code).to.eql(pm.environment.get(\"testCode\") + \"_TAX\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.tax.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax?taxCode={{testCode}}_TAX",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													],
													"query": [
														{
															"key": "taxCode",
															"value": "{{testCode}}_TAX"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "60b51528-5f88-4f59-b00c-d6a2e92b43be",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Tax with code=\" + pm.environment.get(\"testCode\") + \"_TAX already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Tax  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9e21d57e-ccad-4a71-903f-57e84195ca1c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Tax with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6ef2e4e-66e2-4ab2-a962-40b0757e22a9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"percent\": \"30\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 30%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 30%\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "828465f7-af89-497f-9e0f-5913f490b479",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"percent\": \"30\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 30%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 30%\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Tax   SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "52645f0c-638a-4b9c-89f0-6a4acee224fe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.tax.code).to.eql(pm.environment.get(\"testCode\") + \"_TAX\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.tax.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax?taxCode={{testCode}}_TAX",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													],
													"query": [
														{
															"key": "taxCode",
															"value": "{{testCode}}_TAX"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28107c4f-dc4f-43b2-b7d8-6b33fa1deecd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab67f2db-ea55-40e4-90c1-960cebb62e1a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language INVALID is not supported by the provider.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"INVALID\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "43156239-ebd0-4666-99b2-d80e945fdb0d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: percent.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "60160ef5-a8f5-492f-b49f-184d60371dac",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"TVA 20%\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": \"NOT_EXIST\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0cc219bf-2d9d-42cd-80eb-cc19f1676892",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax/{{testCode}}_TAX",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"{{testCode}}_TAX"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Tax  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15e036c7-06dc-45e9-9aee-51e1e61f94ae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Tax with code=\"+pm.environment.get(\"testCode\")+\"_TAX does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/tax/{{testCode}}_TAX",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"{{testCode}}_TAX"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice Type",
									"item": [
										{
											"name": "CreateOrUpdate Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cf65fc63-2ea8-4421-80ca-6c1aeab54961",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2a12ef02-94cd-4a44-925b-aceef704239c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceTypeDto.code).to.eql(pm.environment.get(\"testCode\") + \"_IT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceTypeDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType?invoiceTypeCode={{testCode}}_IT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													],
													"query": [
														{
															"key": "invoiceTypeCode",
															"value": "{{testCode}}_IT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Invoice Type ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c1a8bafa-0c39-4682-83fa-806b83cf45ce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=\" + pm.environment.get(\"testCode\") + \"_IT already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d04928f7-5b58-4618-8583-bb630f625a35",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "25508f60-8ee0-462a-bd4c-1f99e477465f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3d536357-54c3-43bb-8d5d-1ad85e0ae7c1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0cd42ae8-0b56-4af8-9362-04b45cb7f97d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceTypeDto.code).to.eql(pm.environment.get(\"testCode\") + \"_IT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceTypeDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType?invoiceTypeCode={{testCode}}_IT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													],
													"query": [
														{
															"key": "invoiceTypeCode",
															"value": "{{testCode}}_IT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de80f014-f0d2-49f7-abc6-0d8255092ef3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": \"INVALID\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c4ca44b7-45d8-4c43-af41-76a2ac8c9e91",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "364ec806-55bf-4053-9262-0738cae2b95c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"EmailTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"manual\",\r\n    \"emailTemplateCode\": \"NOT_EXIST\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a98af6b3-9220-41b6-882c-4632261077f6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSequence with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"XX\",\r\n        \"invoiceSequenceCode\": \"NOT_EXIST\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"XX\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c0b5e03b-e61a-4aef-a36a-88ce2ce0d3f3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"NOT_EXIST\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"manual\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87f6771a-8533-4112-bdcc-022e47cda33c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"NOT_EXIST\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"XX\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"XX\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8ba7ade6-e020-4717-91af-a0ba7c9ab42e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/{{testCode}}_IT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"{{testCode}}_IT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "404d89e5-3b3f-4953-ae8b-63b9fb0d2172",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=\"+pm.environment.get(\"testCode\")+\"_IT does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/{{testCode}}_IT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"{{testCode}}_IT"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Payments",
							"item": [
								{
									"name": "Credit Category",
									"item": [
										{
											"name": "CreateOrUpdate Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bcde6dc-8691-430f-a31f-cd3b8c880d56",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Credit Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a9af85b0-010b-448e-b9fb-ba6d15825c06",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.creditCategory.code).to.eql(pm.environment.get(\"testCode\") + \"_CrCat\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.creditCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory?creditCategoryCode={{testCode}}_CrCat",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													],
													"query": [
														{
															"key": "creditCategoryCode",
															"value": "{{testCode}}_CrCat"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Credit Category ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f04075e-44fc-493f-8f83-8e4a3e230bd0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=\" + pm.environment.get(\"testCode\") + \"_CrCat already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Credit Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7251c7b8-d381-4d05-93b2-050b57148d3b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "77a3dd7e-7869-40bb-9763-fb11a3d2249c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f2b1851-ad87-4043-9749-78a440b88714",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d62b3f7c-f7c3-4112-9020-b1018558f7b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.creditCategory.code).to.eql(pm.environment.get(\"testCode\") + \"_CrCat\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.creditCategory.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory?creditCategoryCode={{testCode}}_CrCat",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													],
													"query": [
														{
															"key": "creditCategoryCode",
															"value": "{{testCode}}_CrCat"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06096581-9065-49a4-8a07-1b1079fab84d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory/{{testCode}}_CrCat",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory",
														"{{testCode}}_CrCat"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Credit Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8ddb8261-e4fc-42c3-8dd4-1606f82e6e9c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=\" + pm.environment.get(\"testCode\") + \"_CrCat does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory/{{testCode}}_CrCat",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory",
														"{{testCode}}_CrCat"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "47b41f08-7e3e-49fc-877e-8faa3513b63e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b00f172f-b277-4c8a-ba32-6f2d3d66b96d",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Payment Gateway",
									"item": [
										{
											"name": "CreateOrUpdate Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "11c19341-a55c-44f8-a343-e9334a58d1ae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Payment Gateway  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53793553-4dda-43e1-b7c9-b1f40e750326",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentGateway.code).to.eql(pm.environment.get(\"testCode\") + \"_PG\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentGateway.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_PG"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Payment Gateway ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9e56e3df-897b-4353-9807-587de54552bf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=\" + pm.environment.get(\"testCode\") + \"_PG already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Payment Gateway ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e84b6714-6bcc-49e0-833f-498d644337cf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e5e49940-0b07-4f0a-8332-65d1b82f3b61",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "77cf6cdb-f9ed-4258-a5eb-2971e84d7f72",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3405b534-05a7-4c95-a56a-d0d7928843b0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentGateway.code).to.eql(pm.environment.get(\"testCode\") + \"_PG\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentGateway.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_PG"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Gateway MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f65b6788-c66f-4427-b3f9-5f8084cd30a6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code, type, paymentMethodType.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Gateway INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3fb15786-9252-4cd0-bf7f-535af9d2b46c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.payments.PaymentGatewayTypeEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"INVALID\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15e098fd-1eda-49f1-842c-fe1e079f7f4c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_PG"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Payment Gateway ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d32a468-0aaf-4d39-a409-6bafacdec955",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=\" + pm.environment.get(\"testCode\") + \"_PG does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_PG"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e25e6fe8-d4ba-4d13-b265-fbbfa7986294",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ff7889ac-4de6-46dd-937d-aea60fca10ff",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Payment Schedule Template",
									"item": [
										{
											"name": "CreateOrUpdate Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e20d371a-ed0b-4c4d-a6b0-d3b738cf2771",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"1\");",
															"    pm.globals.set(\"id_PST\", jsonData.message);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "95d64d8a-ada0-4e22-8c47-e9c046c8a7ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.code).to.eql(pm.environment.get(\"testCode\") + \"_PST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});",
															"pm.test(\"Id is equal \"+pm.globals.get(\"id_PST\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.id+\"\").to.eql(pm.globals.get(\"id_PST\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													],
													"query": [
														{
															"key": "paymentScheduleTemplateCode",
															"value": "{{testCode}}_PST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Payment Schedule Template ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2b481b38-dd5d-46f0-8c8d-b27e0ec907a2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=\" + pm.environment.get(\"testCode\") + \"_PST already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Payment Schedule Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a5245ab-0fd1-4616-ba59-55b03340088a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05ebfde9-5f9e-4efb-a6b6-d9aa8d5e6c5b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b7701707-d412-48a3-a4bf-236ee27fe68e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e7b73b74-c171-4c29-a97d-a1921930ff97",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.code).to.eql(pm.environment.get(\"testCode\") + \"_PST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});",
															"pm.test(\"Id is equal \"+pm.globals.get(\"id_PST\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.id+\"\").to.eql(pm.globals.get(\"id_PST\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													],
													"query": [
														{
															"key": "paymentScheduleTemplateCode",
															"value": "{{testCode}}_PST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6a4d8d23-2d78-454a-b6b3-cbe1235050b2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code, calendarCode, serviceTemplateCode, paymentDayInMonth, amount, paymentLabel, advancePaymentInvoiceTypeCode, advancePaymentInvoiceSubCategoryCode, generateAdvancePaymentInvoice, doPayment.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_amount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3718e9bf-d740-4d79-98d4-581cfc94d365",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"INVALID\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_doPayment",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6594dba8-488b-4b10-9d52-ba2cc61450f6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"INVALID\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_generateAdvancePaymentInvoice",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "663fe0d5-f298-42cf-a199-569cb1d67aa4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"INVALID\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_paymentDateInMonth",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "705dc7c9-fd2d-4c67-a2e4-4b17e9321452",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"INVALID\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_advPaymentInvSubCat",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e336d2ab-fb63-4e4b-8391-10e206a055d3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"NOT_EXIST\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_advPaymentInvType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dacf13e3-79c2-47e3-9a30-75a59ae1f251",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"NOT_EXIST\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_calendarCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4333558-eb2b-4315-8d0c-965d2d35563c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"NOT_EXIST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_serviceTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39f9c231-ccdf-4e4c-98b0-6498f7b08139",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"NOT_EXIST\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cb653778-e63f-49f5-b158-4f653615fe58",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													],
													"query": [
														{
															"key": "paymentScheduleTemplateCode",
															"value": "{{testCode}}_PST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Payment Schedule Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35c2458b-b78f-4793-bc67-57072bddacca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=\" + pm.environment.get(\"testCode\") + \"_PST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													],
													"query": [
														{
															"key": "paymentScheduleTemplateCode",
															"value": "{{testCode}}_PST"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "bd830f11-d1f9-42cd-8053-ee4302b1fb47",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "12fbb5ec-c217-497c-99c6-62a8dd02197f",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Custom",
							"item": [
								{
									"name": "Entity Customization",
									"item": [],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Custom Table",
									"item": [],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"description": "# Portal APIs\r\n\r\nHere are all portal APIs. Are tested the CRUD processes when available as well as exceptions that might occure, to assure that everything works as intended.\r\n\r\n### Typical execution\r\n\r\nThe typical test consists of:\r\n1. A successful createOrUpdate (POST) - remplace with create when createOrUpdate is unavailable\r\n2. A successful read (GET) - check if entity created in point 1 is retreived\r\n3. A failed Create (POST) - due to entity already created\r\n4. A failed update (PUT) - due to a non existant entity\r\n5. A succesfull update (PUT) - update entity created in point 1\r\n6. A succesfull createOrUpdate (POST) - update entity created in point 1 - skip this if createOrUpdate is unavailable\r\n7. A successful read (GET) - check if updated entity from point 5 and 6 have been correctly updated\r\n8. Any extra failed tests such as MISSING_PARAMETER or INVALID_PARAMETER\r\n\r\nPlease ensure that tests are correctly asserted in the Tests tab.\r\n\r\n## Table of portal entities\r\n\r\n| Entity                    | Create | Read | Update | Delete | Other           | Exception Handling |\r\n|---------------------------|--------|------|--------|--------|-----------------|--------------------|\r\n| Access                    |        |      |        |        |                 |                    |\r\n| Account Hierarchy         | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Account Operation         | TODO   | TODO | TODO   | TODO   |                 | TODO               |\r\n| Accouting Code            | OK     | OK   | OK     | OK     |                 |                    |\r\n| Addressbook               |        |      |        |        |                 |                    |\r\n| Audit                     |        |      |        |        |                 |                    |\r\n| Billing Account           | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Billing Run               | OK     | NA   | NA     | NA     | Validate/Cancel | OK                 |\r\n| Billing Cycle             | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Business Account          |        |      |        |        |                 |                    |\r\n| Business Offer Model      |        |      |        |        |                 |                    |\r\n| Business Product Model    |        |      |        |        |                 |                    |\r\n| Business Service Model    |        |      |        |        |                 |                    |\r\n| Calendar                  | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Catalog                   |        |      |        |        |                 |                    |\r\n| Channel                   | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Channel and Segments      |        |      |        |        |                 |                    |\r\n| Charge Template           |        |      |        |        |                 |                    |\r\n| Chart                     |        |      |        |        |                 |                    |\r\n| Communication             |        |      |        |        |                 |                    |\r\n| Configuration             |        |      |        |        |                 |                    |\r\n| Contact                   |        |      |        |        |                 |                    |\r\n| Counter Template          |        |      |        |        |                 |                    |\r\n| CountryIso                | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Country                   |        |      |        |        |                 |                    |\r\n| Credit Category           | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Currency                  |        |      |        |        |                 |                    |\r\n| CurrencyIso               | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Custom Entity Instance    | NOK    | NOK  | TODO   | NOK    |                 | NOK                |\r\n| Custom Field Template     |        |      |        |        |                 |                    |\r\n| Custom Table              | NOK    | NOK  | TODO   | NOK    |                 | NOK                |\r\n| Customer                  | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Customer Account          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Customer Brand            | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Customer Category         | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| DD Request Lot OP         |        |      |        |        |                 |                    |\r\n| Discount Plan             | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Discount Plan Item        |        |      |        |        |                 |                    |\r\n| Document Sign             |        |      |        |        |                 |                    |\r\n| Dunning Document          |        |      |        |        |                 |                    |\r\n| Email Notification        |        |      |        |        |                 |                    |\r\n| Email Template            |        |      |        |        |                 |                    |\r\n| Entity Customization      | NOK    | NOK  | TODO   | NOK    |                 | NOK                |\r\n| File Format               |        |      |        |        |                 |                    |\r\n| File Format               |        |      |        |        |                 |                    |\r\n| Filter                    |        |      |        |        |                 |                    |\r\n| Generic Workflow          |        |      |        |        |                 |                    |\r\n| Iban                      |        |      |        |        |                 |                    |\r\n| Import Export             |        |      |        |        |                 |                    |\r\n| Invoice                   | OK     | OK   | NA     | NA     | Generate        |                    |\r\n| Invoice Category          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Invoice Sequence          | OK     | OK   | OK     | NA     |                 | OK                 |\r\n| Invoice SubCategory       | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Invoice Type              | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Invoicing                 |        |      |        |        |                 |                    |\r\n| Job Instance              | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Job Trigger               |        |      |        |        |                 |                    |\r\n| LanguageIso               | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Language                  |        |      |        |        |                 |                    |\r\n| Measurable Quantity       |        |      |        |        |                 |                    |\r\n| Mediation                 |        |      |        |        |                 |                    |\r\n| Metric Configuration      |        |      |        |        |                 |                    |\r\n| Meveo Instance            |        |      |        |        |                 |                    |\r\n| Module                    | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Notification              |        |      |        |        |                 |                    |\r\n| OccTemplate               | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Offer Template            | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Offer Template Category   |        |      |        |        |                 |                    |\r\n| One Shot Charge Template  |        |      |        |        |                 |                    |\r\n| Order                     |        |      |        |        |                 |                    |\r\n| Payment Gateway           | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Payment Method            | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Payment Schedule          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Payment                   |        |      |        |        |                 |                    |\r\n| PDF Document              |        |      |        |        |                 |                    |\r\n| PdfInvoice                |        |      |        |        |                 |                    |\r\n| Price Plan                | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Provider                  | OK     | OK   | OK     | NA     |                 | OK                 |\r\n| Provider Contact          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Query                     |        |      |        |        |                 |                    |\r\n| Quote                     |        |      |        |        |                 |                    |\r\n| Rated Transation          |        |      |        |        |                 |                    |\r\n| Tax                       | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Recurring Charge Template | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Refund                    |        |      |        |        |                 |                    |\r\n| Report Extract            |        |      |        |        |                 |                    |\r\n| Revenue Recognition Rules |        |      |        |        |                 |                    |\r\n| Role                      | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Rum Sequence              |        |      |        |        |                 |                    |\r\n| Script Instance           | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Seller                    | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Service Template          | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| SMS Notification          |        |      |        |        |                 |                    |\r\n| Subscription              | OK     | OK   | OK     | OK     | Activate        | OK                 |\r\n| Tax Category              |        |      |        |        |                 |                    |\r\n| Tax Class                 | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Tax Mapping               |        |      |        |        |                 |                    |\r\n| Terminate Reason          | OK     | TODO | TODO   | TODO   |                 | TODO               |\r\n| Timer Entity              |        |      |        |        |                 |                    |\r\n| Title                     | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| Triggered Edr             |        |      |        |        |                 |                    |\r\n| Unit of Measure           |        |      |        |        |                 |                    |\r\n| Unitary Custom Table      |        |      |        |        |                 |                    |\r\n| Usage                     |        |      |        |        |                 |                    |\r\n| Usage Charge Template     |        |      |        |        |                 |                    |\r\n| User                      |        |      |        |        |                 |                    |\r\n| User Account              | OK     | OK   | OK     | OK     |                 | OK                 |\r\n| User Hierarchy            |        |      |        |        |                 |                    |\r\n| Wallet                    | OK     | OK   | TODO   | NA     |                 | OK                 |\r\n| WebHook Notification      |        |      |        |        |                 |                    |\r\n| Workflow                  |        |      |        |        |                 |                    |",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f6870bfa-5bac-46f7-af2e-525654f14223",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "02bd7573-ac8d-4661-b75a-f68b7bf82c24",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Url",
					"item": [
						{
							"name": "Index",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf00f53c-ddb4-4fa1-92f6-a243885853fe",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/index.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"index.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/providers/providerSelfDetail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f97c81f-0b7c-442d-83da-eaa2a57f2af2",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/providers/providerSelfDetail.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"providers",
										"providerSelfDetail.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/providerContacts/providerContacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "abeebd1d-fd10-4437-a42d-6e13430a8bad",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/providerContacts/providerContacts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"providerContacts",
										"providerContacts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/meveoUsers/users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bc7bbca5-17d1-4c00-bd5f-b9de8c5870ab",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/meveoUsers/users.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"meveoUsers",
										"users.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/userRoles/userRoles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d3d3bb09-7ee8-47c0-b425-feb8cef1064f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/userRoles/userRoles.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"userRoles",
										"userRoles.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/userGroupHierarchy/userGroupHierarchy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "520d8f64-6629-4d2f-9ee7-3495cc1b3788",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/userGroupHierarchy/userGroupHierarchy.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"userGroupHierarchy",
										"userGroupHierarchy.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/sellers/sellers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "443e781b-b4e1-4aad-9a93-0a640eca629f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/sellers/sellers.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"sellers",
										"sellers.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/title/titles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dca4e7c3-2655-4227-bfb9-cdb3574394d2",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/title/titles.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"title",
										"titles.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/customerBrands/customerBrands",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00b267f7-522a-4b7c-bca1-7bb839f598e1",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/customerBrands/customerBrands.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"customerBrands",
										"customerBrands.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/customerCategories/customerCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d7191e5e-654a-42bd-93c4-932482e93a50",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/customerCategories/customerCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"customerCategories",
										"customerCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/creditCategories/creditCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "783fb913-e461-468c-bd22-fde8d65a371a",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/creditCategories/creditCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"creditCategories",
										"creditCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/occTemplates/occTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a067a1e1-2631-4ad7-b67f-591874f69d35",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/occTemplates/occTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"occTemplates",
										"occTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/tradingLanguages/tradingLanguages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6210f568-b7c2-4a92-a339-0a0ae04f04ee",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/tradingLanguages/tradingLanguages.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"tradingLanguages",
										"tradingLanguages.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/tradingCurrencies/tradingCurrencies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "777a2fa9-f27b-4afd-8450-3b8c52ebfe34",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/tradingCurrencies/tradingCurrencies.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"tradingCurrencies",
										"tradingCurrencies.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/tradingCountries/tradingCountries",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e075a17c-f99d-458b-805c-f61b59b19855",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/tradingCountries/tradingCountries.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"tradingCountries",
										"tradingCountries.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/multiLanguageField/multiLanguageFields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d57aba90-a341-448b-a5ce-093583b39ac2",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/multiLanguageField/multiLanguageFields.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"multiLanguageField",
										"multiLanguageFields.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/communication/emailTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2487b208-4292-4110-8498-523f6aafc463",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/communication/emailTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"communication",
										"emailTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/calendars/calendars",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee19b23c-fca4-45bf-88cf-7971385a14b7",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/calendars/calendars.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"calendars",
										"calendars.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/billingCycles/billingCycles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d140bc61-8d8b-4651-b324-31aa15fad072",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/billingCycles/billingCycles.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"billingCycles",
										"billingCycles.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/taxes/taxes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bceaea80-2053-4cc9-93a1-6e7925728723",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/taxes/taxes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"taxes",
										"taxes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/invoiceCategories/invoiceCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "753eb060-9a69-4d76-a23d-4b500fb53795",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/invoiceCategories/invoiceCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"invoiceCategories",
										"invoiceCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/invoiceSubCategories/invoiceSubCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e903af13-5f0a-4eaf-b597-b3ccf4150bba",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/invoiceSubCategories/invoiceSubCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"invoiceSubCategories",
										"invoiceSubCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoiceTypes/invoiceTypes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad3075f-544c-42de-ae84-4edb93d3fbb7",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoiceTypes/invoiceTypes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoiceTypes",
										"invoiceTypes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoiceSequences/invoiceSequences",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47936c27-72b1-47b7-b56e-1dabbf3810c6",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoiceSequences/invoiceSequences.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoiceSequences",
										"invoiceSequences.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/terminationReason/terminationReasons",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9e0f33a-33f8-491e-b684-97f3c36bce09",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/terminationReason/terminationReasons.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"terminationReason",
										"terminationReasons.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/channels/channels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b53f4b18-0a6c-46cb-afb5-e63b66fa8108",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/channels/channels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"channels",
										"channels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/offerTemplates/offerTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f4a0b710-9d9e-4d0f-a863-32a62dbfeafe",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/offerTemplates/offerTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"offerTemplates",
										"offerTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/offerTemplateCategories/offerTemplateCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "173a70da-de3e-4554-a148-32e0c914335b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/offerTemplateCategories/offerTemplateCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"offerTemplateCategories",
										"offerTemplateCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/serviceTemplates/serviceTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c746b6fa-a30d-49f1-b9bc-a93ed0eb06e0",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/serviceTemplates/serviceTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"serviceTemplates",
										"serviceTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/chargeTemplates/chargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0663d9ab-310a-4012-8706-5e2c146cd78d",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/chargeTemplates/chargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"chargeTemplates",
										"chargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/recurringChargeTemplates/recurringChargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b75f824-6dd3-4e3f-b3c0-6a595b0c3cf5",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/recurringChargeTemplates/recurringChargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"recurringChargeTemplates",
										"recurringChargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/usageChargeTemplates/usageChargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0127f68d-aaf5-4737-883b-ea1c37750d69",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/usageChargeTemplates/usageChargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"usageChargeTemplates",
										"usageChargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/oneShotChargeTemplates/oneShotChargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5213cb41-a747-4d44-83a2-78eaaff8fc6d",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/oneShotChargeTemplates/oneShotChargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"oneShotChargeTemplates",
										"oneShotChargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/counterTemplates/counterTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "18ac9fff-b9f6-42d6-b47f-4db626cfffa6",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/counterTemplates/counterTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"counterTemplates",
										"counterTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/productTemplates/productTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8dbd4c75-1256-489b-996a-26cd3a9ca201",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/productTemplates/productTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"productTemplates",
										"productTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/productChargeTemplates/productChargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0fe4a60-398b-4aa6-9607-43a420f4ad3c",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/productChargeTemplates/productChargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"productChargeTemplates",
										"productChargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/bundleTemplates/bundleTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70970e95-36fa-4943-bdcb-0f3173dc70c9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/bundleTemplates/bundleTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"bundleTemplates",
										"bundleTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/triggeredEdrTemplates/triggeredEdrTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ebfc3658-fa3e-4175-a596-a62c2f72c15e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/triggeredEdrTemplates/triggeredEdrTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"triggeredEdrTemplates",
										"triggeredEdrTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/walletTemplates/walletTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76c27a6c-0ce9-4af0-8850-24719a0d1d55",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/walletTemplates/walletTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"walletTemplates",
										"walletTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/businessOfferModels/businessOfferModels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b35bd4f8-1d41-44d4-90a7-1797bdc32697",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/businessOfferModels/businessOfferModels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"businessOfferModels",
										"businessOfferModels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/businessServiceModels/businessServiceModels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "259c6ec4-0673-40d1-8110-8784b3e1e56b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/businessServiceModels/businessServiceModels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"businessServiceModels",
										"businessServiceModels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/businessProductModels/businessProductModels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ddae5bb-be3b-4f58-a777-06744739b6f9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/businessProductModels/businessProductModels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"businessProductModels",
										"businessProductModels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/pricePlanMatrixes/pricePlanMatrixes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4198c338-8655-4434-8e3b-4f341e22180f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/pricePlanMatrixes/pricePlanMatrixes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"pricePlanMatrixes",
										"pricePlanMatrixes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/discountPlans/discountPlans",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "776fbbbd-3c43-4c24-a13f-e368c039068a",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/discountPlans/discountPlans.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"discountPlans",
										"discountPlans.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/customers/customerSearch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70e1a6d2-7ec0-4fca-ba3b-ed3286adf57f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/customers/customerSearch.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"customers",
										"customerSearch.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/customers/customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "012fdbd0-9537-415c-aaef-99b80b8fd1b9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/customers/customers.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"customers",
										"customers.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/customerAccounts/customerAccounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "475ba46d-41ba-413b-b770-f732e5ad459b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/customerAccounts/customerAccounts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"customerAccounts",
										"customerAccounts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/billingAccounts/billingAccounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a1e4a03-afc2-404e-b9ae-bb5f4c165b9f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/billingAccounts/billingAccounts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"billingAccounts",
										"billingAccounts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/userAccounts/userAccounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd52114c-f847-4cc1-8572-c5cab7f2f486",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/userAccounts/userAccounts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"userAccounts",
										"userAccounts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/crmAccounts/crmAccounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5df582b2-e4af-404a-9619-efc0fe2d67c0",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/crmAccounts/crmAccounts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"crmAccounts",
										"crmAccounts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/subscriptions/subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56edaee5-b6df-4655-b052-d23956fccf91",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/subscriptions/subscriptions.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"subscriptions",
										"subscriptions.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "medina/access/access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "941361ee-b1d6-4462-860f-42eaecd83bb8",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/medina/access/access.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"medina",
										"access",
										"access.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/businessAccountModels/businessAccountModels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e68eb5b8-2a9e-46bb-a451-600cc5757db4",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/businessAccountModels/businessAccountModels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"businessAccountModels",
										"businessAccountModels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "quote/quotes/quotes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5903701-3717-4a77-96ad-7d4084bac7a1",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/quote/quotes/quotes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"quote",
										"quotes",
										"quotes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "order/orders/orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2afb5d13-04ab-4f24-bf72-cb099229e73e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/order/orders/orders.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"order",
										"orders",
										"orders.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "rating/edr/edrList",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f234c1de-8270-48f9-bbbc-bf05ec6df149",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/rating/edr/edrList.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"rating",
										"edr",
										"edrList.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "medina/importedFile/importedFiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc38e44a-59fc-4dda-b537-61d5f306453f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/medina/importedFile/importedFiles.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"medina",
										"importedFile",
										"importedFiles.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/walletOperations/walletOperations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cad5de47-b427-46fe-a989-b51fc8f947f6",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/walletOperations/walletOperations.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"walletOperations",
										"walletOperations.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/ratedTransactions/ratedTransactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "290564c8-25c7-4fb2-a943-4dd158c4f6d1",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/ratedTransactions/ratedTransactions.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"ratedTransactions",
										"ratedTransactions.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoicing/billingRuns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "920f11b5-50ea-465c-b470-18ba81bf9225",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoicing/billingRuns.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoicing",
										"billingRuns.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoicing/recurringInvoicing",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19dc0b58-4b58-4403-b2c3-ffd69e2c6ff5",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoicing/recurringInvoicing.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoicing",
										"recurringInvoicing.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoicing/exceptionelInvoicing",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e147028-6f78-4b38-9433-337d694669dd",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoicing/exceptionelInvoicing.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoicing",
										"exceptionelInvoicing.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoices/invoices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1891a981-6e8a-48d2-abb5-0a06d77e549c",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoices/invoices.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoices",
										"invoices.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoices/createInvoiceDetail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5ff5ab6-c701-41a3-900e-f68a2546ef1f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoices/createInvoiceDetail.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoices",
										"createInvoiceDetail.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/dDRequestBuilders/dDRequestBuilders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81169200-9e13-4410-9040-f835effcd896",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/dDRequestBuilders/dDRequestBuilders.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"dDRequestBuilders",
										"dDRequestBuilders.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/dDRequestBuilders/dDRequestBuilders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "93132712-b89f-49ae-9060-228289dcc4de",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/dDRequestBuilders/dDRequestBuilders.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"dDRequestBuilders",
										"dDRequestBuilders.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/ddrequestLotOp/ddrequestLotOps",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70a19da3-479a-40cf-af2d-abe0f79a9673",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/ddrequestLotOp/ddrequestLotOps.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"ddrequestLotOp",
										"ddrequestLotOps.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/ddrequestLot/ddrequestLots",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d166e4bc-18be-4524-a674-1b990307989b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/ddrequestLot/ddrequestLots.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"ddrequestLot",
										"ddrequestLots.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/paymentGateways/paymentGateways",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d66f035-db45-4581-b0a3-e58b2daa404d",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/paymentGateways/paymentGateways.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"paymentGateways",
										"paymentGateways.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/paymentScheduleTemplates/paymentScheduleTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b5fd885-a5fb-4600-9675-a3788869eb6e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/paymentScheduleTemplates/paymentScheduleTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"paymentScheduleTemplates",
										"paymentScheduleTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/workflow/genericWorkflows",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "863725a3-4d7e-4f81-aaa1-b1f983df613d",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/workflow/genericWorkflows.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"workflow",
										"genericWorkflows.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/workflow/workflowInstanceHistories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "025a0034-f7bc-4fb4-9a6a-b9c17ca0d714",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/workflow/workflowInstanceHistories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"workflow",
										"workflowInstanceHistories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/accountingCodes/accountingCodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6936469-e25b-4a7e-bac5-5cd4586c9fe9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/accountingCodes/accountingCodes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"accountingCodes",
										"accountingCodes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/generalLedgers/generalLedgers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4072cec1-dfa1-4cdf-8aff-0462724f6db1",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/generalLedgers/generalLedgers.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"generalLedgers",
										"generalLedgers.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/revenueRecognitionRules/revenueRecognitionRules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6807cf12-560c-49c7-a4d6-cac8217a4f26",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/revenueRecognitionRules/revenueRecognitionRules.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"revenueRecognitionRules",
										"revenueRecognitionRules.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/revenueSchedules/revenueSchedules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b333efb-393b-4d6d-925c-1d6e25b729ea",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/revenueSchedules/revenueSchedules.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"revenueSchedules",
										"revenueSchedules.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/reportExtracts/reportExtracts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5ab9e2c-18fe-4666-9384-b64e02983fb7",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/reportExtracts/reportExtracts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"reportExtracts",
										"reportExtracts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/reportExtractHistories/reportExtractHistories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91230746-6e4b-4167-8c58-d97f038b3016",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/reportExtractHistories/reportExtractHistories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"reportExtractHistories",
										"reportExtractHistories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/accountingWriting/accountingWritings",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2387ed7d-0f1d-485d-b78f-3d851492e265",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/accountingWriting/accountingWritings.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"accountingWriting",
										"accountingWritings.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "reporting/dwh/measurableQuantities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b7e717a-f299-4caf-bf7f-d77ee45f63d4",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/reporting/dwh/measurableQuantities.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"reporting",
										"dwh",
										"measurableQuantities.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "reporting/dwh/measuredValueDetail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a415cfac-aa40-4ac6-9d28-0359a5bf626a",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/reporting/dwh/measuredValueDetail.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"reporting",
										"dwh",
										"measuredValueDetail.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "reporting/dwh/charts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb4a2e91-e3db-4191-b859-8bc0396aa444",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/reporting/dwh/charts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"reporting",
										"dwh",
										"charts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/job/jobInstances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f72f957-6ebe-44d0-9859-d1c3dc21c50c",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/job/jobInstances.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"job",
										"jobInstances.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/job/timerEntities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ada37498-543f-465c-8213-5c77c9051fc9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/job/timerEntities.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"job",
										"timerEntities.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/meveoInstance/meveoInstances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5be665cf-31e3-49fb-beb2-d0860dc53f1e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/meveoInstance/meveoInstances.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"meveoInstance",
										"meveoInstances.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/module/modules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05ac03e2-9397-4b89-abf7-006eb3dad03f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/module/modules.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"module",
										"modules.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/customEntities/customizedEntities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4297477-496a-46df-8e2f-5d604665d26e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/customEntities/customizedEntities.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"customEntities",
										"customizedEntities.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/scriptInstanceCategories/scriptInstanceCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a2426f0-7e34-4c50-a1dd-c13cb83fdb58",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/scriptInstanceCategories/scriptInstanceCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"scriptInstanceCategories",
										"scriptInstanceCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/scriptInstances/scriptInstances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7012726-feb0-47c4-866f-a2aada37ce03",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/scriptInstances/scriptInstances.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"scriptInstances",
										"scriptInstances.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/filters/filters/filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33d00314-1fdb-4843-8b1c-83674119a2ec",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/filters/filters/filters.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"filters",
										"filters",
										"filters.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/notifications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d61ec4e1-da91-4b1a-9ca0-08598869f53e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/notifications.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"notifications.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/webHooks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01bd0dc9-29a3-4008-ba06-ec65578af058",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/webHooks.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"webHooks.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/emailNotifications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50df6d22-86b2-4474-90a1-a4fdd06d0145",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/emailNotifications.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"emailNotifications.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/jobTriggers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0d249a-2617-49dd-be36-fafe964344b5",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/jobTriggers.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"jobTriggers.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/notificationHistories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11276854-e12d-4fad-a664-3ad9b2ee07aa",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/notificationHistories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"notificationHistories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/inboundRequests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7785cb1b-72a6-42a1-bf3c-d923c3cbfc35",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/inboundRequests.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"inboundRequests.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/export/import",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d924c96-e017-41a6-b4a9-360ee5933f8c",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/export/import.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"export",
										"import.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/export/export",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3194fa1-8001-4382-8695-631e11ebc478",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/export/export.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"export",
										"export.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/auditLogs/auditConfiguration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d27e1e1-6c4a-41bb-9ec3-d325b9ea6ba8",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/auditLogs/auditConfiguration.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"auditLogs",
										"auditConfiguration.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/auditLogs/auditLogs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8bd329e-42d9-464b-91ab-765d35c52ca6",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/auditLogs/auditLogs.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"auditLogs",
										"auditLogs.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "reporting/cache/caches",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ef89e9d-d9da-4f54-99e9-8e4787fa70e0",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/reporting/cache/caches.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"reporting",
										"cache",
										"caches.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "index/fullTextSearch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "effe6e4f-2844-4334-9521-d3068a1ef60a",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/index/fullTextSearch.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"index",
										"fullTextSearch.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "index/index",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f2e48281-b466-4aaa-ae4f-5aa84aea0527",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/index/index.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"index",
										"index.jsf"
									]
								}
							},
							"response": []
						}
					],
					"description": "This will run a GET on the admin pages and check if a proper status 200 is returned. ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c76a9cd9-8dfb-42f0-931b-ff4e37b8699c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1349f796-9a12-4b93-bb36-991eda1d934a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Scenarios",
					"item": [
						{
							"name": "Setup Base Data",
							"item": [
								{
									"name": "Cleanup data - clear customizations",
									"item": [
										{
											"name": "Clear Seller Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a0389794-27bd-4ebd-bfc3-f259186d82de",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.admin.Seller\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Customer Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "56e014ef-6c14-4798-bb20-0c655813d652",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.crm.Customer\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Customer Account Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0f6ad21f-0a93-4d08-96fd-4ecd70270db5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.payments.CustomerAccount\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Billing Account Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0a08d57-5f81-46f7-ba44-92b304efa247",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.BillingAccount\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear User Account Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e21dbca4-9bc7-47c7-81b7-bd7894091435",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.UserAccount\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Subscription Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8239399e-da16-44e0-bed1-dc93ba34631e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Subscription\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Access Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5507f513-3849-4e3e-ae29-d38bc50d20d4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.mediation.Access\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Provider Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "72a3bdeb-d511-4221-b3bf-4aee2a4d8377",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.crm.Provider\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Product Template Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f7734cdf-0226-4a90-bd92-7f451b8377a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ProductTemplate\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Product Instance Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0b823ea8-a9c9-4ba2-b183-5829f3153d7b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.ProductInstance\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Service Template Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c67f770-fa38-4ef7-a1a6-a0f92be3a1ee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ServiceTemplate\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Offer Template  Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5cda5695-c91b-424c-8a3f-e7d482ab79b2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.OfferTemplate\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Charge Template  Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d1f4e385-ceee-42ab-81a7-fec323814968",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ChargeTemplate\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Price Plan Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b6dc93c3-7569-4446-9cbc-64a72e4d4084",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.PricePlanMatrix\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Invoice Category Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "306fb4fc-aa79-4c56-b20d-a6438ed10306",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.InvoiceCategory\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Invoice SubCategory Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c576f7e-0620-4cfc-b775-84707e88be67",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.payments.AccountOperation\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Account Operation Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "440e3a3a-7dbd-4516-8366-2c02f7945863",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.InvoiceSubCategory\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Invoice Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3667bb6-189d-4c62-b08b-e03b1da48267",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Invoice\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Tax Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7423d4b4-5407-40ab-97ff-a7acd2cb7233",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Tax\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Billing Cycle Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05e9b83a-5774-4332-afb7-684ebc7fef26",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.BillingCycle\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Purge Job Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13779653-44e9-4299-9687-16592c467093",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.admin.job.PurgeJob\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clean up data - restore provider and configuration",
									"item": [
										{
											"name": "Update provider",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f0db4a5-bb0d-4712-8b40-7a53a6deef1f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"demo\",\r\n    \"currency\": \"AFA\",\r\n    \"country\": \"AD\",\r\n    \"language\": \"DEU\",\r\n    \"multiCurrency\": \"true\",\r\n    \"multiCountry\": \"true\",\r\n    \"multiLanguage\": \"true\",\r\n    \"enterprise\": \"true\",\r\n    \"levelDuplication\": \"false\",\r\n    \"rounding\": \"8\",\r\n    \"invoiceRounding\": \"2\",\r\n    \"prepaidReservationExpirationDelayinMillisec\": \"60000\",\r\n    \"bankCoordinates\": {\r\n        \"bankCode\": \"SGMB\",\r\n        \"branchCode\": \"12345\",\r\n        \"accountNumber\": \"33333333333\",\r\n        \"key\": \"11\",\r\n        \"iban\": \"11\",\r\n        \"bic\": \"11\",\r\n        \"accountOwner\": \"owner\",\r\n        \"bankName\": \"SGMB\",\r\n        \"bankId\": \"11\",\r\n        \"issuerNumber\": \"1111\",\r\n        \"issuerName\": \"DEMO\"\r\n    },\r\n    \"recognizeRevenue\": \"false\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"false\",\r\n        \"displayProvider\": \"false\",\r\n        \"displayCfAsXML\": \"false\",\r\n        \"displayPricePlans\": \"false\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayBillingCycle\": \"false\",\r\n        \"displayFreeTransacInInvoice\": \"true\",\r\n        \"displayOrders\": \"false\",\r\n        \"displayWalletOperations\": \"false\"\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set securedEntities=false - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8df33ce6-3b7d-4f9d-9e29-484dd5df814b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"property\": \"secured.entities.enabled\",\r\n\t\"value\": \"false\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/configurations/setProperty",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"configurations",
														"setProperty"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set service.allowMultiInstantiation=false - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2144e32f-8c07-4849-9962-fcdcccd393ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"false\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/configurations/setProperty",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"configurations",
														"setProperty"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clean up data - user and ES",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39540269-0e6e-4843-b4ed-a70902dcd562",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"{{opencell.username}}\",\r\n    \"password\": \"{{opencell.password}}\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\"administrateur\"],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clean and reindex Full text - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "42e29b87-4a65-424d-b47b-90c829252d15",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.superpassword}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.superusername}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuc3VwZXJhZG1pbjpvcGVuY2VsbC5zdXBlcmFkbWlu"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/filteredList/reindex",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"filteredList",
														"reindex"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Configuration: InvType, BC and Seller",
									"item": [
										{
											"name": "Create InvoiceType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d5472656-fa8b-469f-9586-ca02399eed24",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_TEST-Type\",\r\n\t\"description\": \"Invoice Test Type\",\r\n\t\"occTemplateCode\": \"INV_STD\",\r\n\t\"sequenceDto\": {\r\n\t\t\"prefixEL\": \"Fact_\",\r\n\t\t\"sequenceSize\": \"9\"\r\n\t},\r\n\t\"matchingAuto\": \"false\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BillingCycle",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac1fcfe2-2cd0-4881-8de5-0aa4e7ab38a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"CYC_INV_MT_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"2\",\r\n\t\"invoiceDateDelay\": \"4\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"invoiceTypeCode\": \"{{baseEntityPrefix}}_TEST-Type\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BillingCycle 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "853ffa0d-5bde-40fc-aeae-1c260b11a416",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"CYC_INV_MT_3\",\r\n\t\"description\": \"Monthly Invoice Cycle 3\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"2\",\r\n\t\"invoiceDateDelay\": \"4\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"dueDateDelayEL\": \"#{ba.id + invoice.billingAccount.id}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7f147ad1-41f9-4425-acd7-6e2f85ef082c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "    {\r\n    \t\"code\": \"SELLER_FR\",\r\n    \t\"description\": \"France Seller\",\r\n    \t\"currencyCode\": \"EUR\",\r\n    \t\"languageCode\": \"FRA\",\r\n    \t\"parentSeller\": \"MAIN_SELLER\",\r\n    \t\"invoiceTypeSequences\": {\r\n    \t\t\"{{baseEntityPrefix}}_TEST-Type\": {\r\n    \t\t\t\"prefixEL\": \"SellFact_\",\r\n    \t\t\t\"sequenceSize\": 9,\r\n    \t\t\t\"currentInvoiceNb\": 9\r\n    \t\t}\r\n    \t}\r\n    }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update InvoiceType COM Sequence",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f2dfe6d-20fb-44a6-a4c5-249d59f40b08",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"COM\",\n    \"occTemplateCode\": \"INV_STD\",\n    \"sequenceDto\": {\n        \"prefixEL\": \"COM_\",\n        \"sequenceSize\": \"9\"\n    },\n    \"matchingAuto\": \"false\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Catalog: Charges, Services, Offer, PP, Counters, Wallets",
									"item": [
										{
											"name": "Create Tax Class 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e91bacad-8a9f-45e8-a9d7-fef9b1ff499c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_taxClass\",\r\n    \"description\": \"Tax class for {{baseEntityPrefix}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax Class 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "424278a6-e439-4b40-a333-78d93515dca8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_taxClass2\",\r\n    \"description\": \"Tax class for {{baseEntityPrefix}} 2\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax Mapping",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f3fa6ef-5345-443d-a514-7fa3cdbc0a0c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"accountTaxCategoryCode\": \"Tax category\",\r\n    \"chargeTaxClassCode\": \"{{baseEntityPrefix}}_taxClass\",\r\n    \"taxCode\": \"TAX_18\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxMapping/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxMapping",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax Category 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fc05efc3-8e46-476e-8218-4bdd81ebfd93",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\":\"{{baseEntityPrefix}}_taxCategory2\",\r\n\t\"description\":\"Tax category 2\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create PrepaidWallet",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "552e8ea4-cb6b-4f56-8b8a-afd6fea24eda",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PPW1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PrepaidPWallet_Description\",\r\n\t\"walletType\": \"PREPAID\",\r\n\t\"consumptionAlertSet\": \"false\",\r\n\t\"fastRatingLevel\": \"1\",\r\n\t\"lowBalanceLevel\": \"2\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/template/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"template",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Counter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9a60d37-9e2d-4f79-ae44-89880847c402",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CT1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CounterTemplate_Description\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"unity\": \"Quantity\",\r\n\t\"type\": \"USAGE\",\r\n\t\"ceiling\": \"1\",\r\n\t\"disabled\": \"false\",\r\n\t\"counterLevel\": \"BA\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create TriggeredEDR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf394c9d-3492-4c4a-b106-cbce3cb9d075",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_EDR1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_Triggered_EDR_DESC\",\r\n\t\"quantityEl\": \"#{op.amountWithoutTax}\",\r\n\t\"param1El\": \"#{edr.parameter1}\",\r\n\t\"param2El\": \"#{edr.parameter2}\",\r\n\t\"param3El\": \"#{edr.parameter3}\",\r\n\t\"param4El\": \"#{edr.parameter4}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/triggeredEdr/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"triggeredEdr",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "900b36bf-b559-4e69-88e9-a206d06a7566",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n\t\"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot - Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e3aebb30-e6a0-4d3d-9358-2d3247bfc176",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n\t\"immediateInvoicing\": \"false\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot - Termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f9a2ce62-5d47-4535-8b16-c57d3e59798c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Termination Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"oneShotChargeTemplateType\": \"TERMINATION\",\r\n\t\"immediateInvoicing\": \"false\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot - Other",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7036ebe8-85eb-46d9-8253-132fa9345638",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"true\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}s-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"OTHER\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Usage 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4cdfd5a3-e232-47fb-a239-0e6deaa41845",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE\",\r\n\t\"priority\": \"1\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"filterExpression\": \"#{ci.chargeTemplate.code.equals('{{baseEntityPrefix}}_USAGE1')}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13f7677c-d390-459c-a401-3c3731342aba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_REC1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateSubscriptions\": {\r\n\t\t\"serviceChargeTemplateSubscription\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OS1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateTerminations\": {\r\n\t\t\"serviceChargeTemplateTermination\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OST1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f3173da-8ffd-4525-a83a-61c7787e647d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n    \"description\": \"{{baseEntityPrefix}}_SERVICE2\",\n    \"invoicingCalendar\": \"MONTHLY\",\n    \"serviceChargeTemplateRecurrings\": {\n        \"serviceChargeTemplateRecurring\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_REC1\"\n            }\n        ]\n    },\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_USAGE1\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product Charge 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a9eca5e6-6cca-4223-a7cc-f995382363a6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product Charge 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "44e15d81-d7e1-497f-a090-e901404b70d3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC2\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC2\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit 2 Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c2760243-c34b-451c-aedf-793e747ad79c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PRODUCT1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PRODUCT1 DESC\",\r\n\t\"name\": \"{{baseEntityPrefix}}_PRODUCT1 NAME\",\r\n\t\"productChargeTemplate\": [\r\n\t\t{\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\t\t\"disabled\": \"false\"\r\n\t\t}\r\n\t]\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15caae49-d4f5-4497-ad4b-fd8a776a8d68",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PRODUCT2 DESC\",\r\n\t\"name\": \"{{baseEntityPrefix}}_PRODUCT1 NAME\",\r\n\t\"productChargeTemplate\": [\r\n        {\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_PC2\",\r\n\t\t\t\"disabled\": \"false\"\r\n\t\t}\r\n\t]\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d52e75ed-c2ff-4392-b85d-754533c45150",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\"\r\n            }\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\"\r\n            }\r\n        }\r\n    ],\r\n    \"offerProductTemplate\": [\r\n        {\r\n            \"productTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_PRODUCT1\"\r\n            }\r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b7c0d8ee-276a-436f-8fe5-92fdcca67600",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"org.meveo.service.script.rating.RatingScript\",\n    \"description\": \"rating script\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script.rating;\\r\\n\\r\\nimport java.math.BigDecimal;\\r\\nimport java.util.Map;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.meveo.model.admin.User;\\r\\nimport org.meveo.model.billing.WalletOperation;\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.slf4j.Logger;\\r\\nimport org.slf4j.LoggerFactory;\\r\\n\\r\\npublic class RatingScript extends Script {\\r\\n\\r\\n    private static final Logger log = LoggerFactory.getLogger(RatingScript.class);\\r\\n\\r\\n    public void execute(Map<String, Object> context) throws BusinessException {\\r\\n        log.debug(\\\"Rating script creation script...\\\");\\r\\n        // DO not change any amount, as it is untestable\\r\\n        //WalletOperation op = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\\r\\n        //op.setAmountWithoutTax(op.getAmountTax().add(BigDecimal.ONE));\\r\\n    }\\r\\n}\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan  Recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f80f7bf7-9797-43fe-bbc7-ece0d529625b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"amountWithoutTax\": \"10\",\r\n\t\"amountWithTax\": \"12\",\r\n\t\"scriptInstance\": \"org.meveo.service.script.rating.RatingScript\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan OneShot - Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "90f70476-bd76-43c2-806c-caad60a1fbca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan OneShot - Termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e1b6bcde-3961-4ada-a669-f92c9d0f2ab0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"amountWithoutTax\": \"21\",\r\n\t\"amountWithTax\": \"25\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan OneShot - Other",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4a6bd8de-798b-46c3-a1d9-915da3386152",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\",\r\n\t\"woDescriptionEL\": \"#{\\\"Special \\\".concat(op.description)}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Usage 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "909161f8-f363-4021-9bec-f4af0c13e7d7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"amountWithoutTax\": \"9\",\r\n\t\"amountWithTax\": \"14\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Product 1 in Offer 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "25c50216-acec-4d0e-8030-6a54cc8f078a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC1_PP2\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\"amountWithoutTax\": \"0.5\",\r\n\t\"amountWithTax\": \"0.6\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Product 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ebbde18-d247-4e2f-9681-0d3849afc2de",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC1_PP\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"2\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Product 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "57347bab-66c9-44a7-a7db-252446560fb2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC2_PP\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC2\",\r\n\t\"amountWithoutTax\": \"5\",\r\n\t\"amountWithTax\": \"6\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reccuring 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cbf21fac-8eaf-431a-a80d-9c7315a8a1b9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC2\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "04477889-c22e-444d-87f5-f17c853bef16",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33dc573b-9b5a-4162-97ae-0c39b070635d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS2\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS2\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30609258-1c03-4fa6-96f2-d4a4500f0d78",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS3\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS3\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Usage 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ba0bf1b3-6fbc-45c0-9256-cec3f2fa18b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE\",\r\n\t\"priority\": \"1\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n} ",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Usage 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33bfaee4-2ace-4147-b5ec-8cb1a7ee9119",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE3\",\r\n\t\"priority\": \"2\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"filterExpression\": \"#{ci.chargeTemplate.code.equals('NO_MATCH')}\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "251801da-9a3c-4aab-a4ff-b81a4f6c0b9f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_REC3\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateSubscriptions\": {\r\n\t\t\"serviceChargeTemplateSubscription\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OS3\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4479562f-cd9f-4bc3-b8b7-bacbc257ce45",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0482b15b-d92d-45ea-b844-23295a09e71b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\"\r\n            }\r\n        \r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da2c71a5-30bd-4308-b5f2-00469469e5c2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\"\r\n            }\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE4\"\r\n            }\r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Usage 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9be1ea62-9102-4e20-aac5-d87be41ac35f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan  Usage 1 in Offer 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c947adba-e595-441a-8b91-f0a101d73d26",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1_OF2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n\t\"amountWithoutTax\": \"0\",\r\n\t\"amountWithTax\": \"0\",\r\n\t\"priority\": \"0\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan OneShot OS3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bc7f2461-402a-448b-8fc4-ab957f1dfa9c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Recurring 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "242d9b06-e7ef-41e6-a3d8-8c506a94609a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"amountWithoutTax\": \"10\",\r\n\t\"amountWithTax\": \"12\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan usage 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "70e729cb-595d-4eac-a0da-abc46cea8e07",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE3_OF2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE3_OF2\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"1\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Bundle 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c1bd7f3-5c6a-4354-b3eb-69cc79bbe406",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BUNDLE1\",\r\n    \"description\": \"Bundle 1\",\r\n    \"productChargeTemplates\": {\r\n        \"productChargeTemplate\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_PC2\"\r\n            }\r\n        ]\r\n    },\r\n    \"bundleProducts\": {\r\n        \"bundleProduct\": {\r\n            \"productTemplate\": [\r\n                {\r\n                    \"code\": \"{{baseEntityPrefix}}_PRODUCT1\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/bundleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"bundleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create channel - WEB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "65ce7cea-f726-4b84-abba-c8eea1c29548",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CHANNEL_WEB\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CHANNEL_WEB\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create channel - SOCIAL_MEDIA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "483a49ef-fe17-416b-be8e-fc2838946294",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CHANNEL_WEB\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CHANNEL_WEB\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer Category - SOFTWARE",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "311a191a-b297-4c25-a0a5-092d1d4bac37",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"description\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"name\": \"{{baseEntityPrefix}}_DISK_SPACE\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer Category - DISK_SPACE",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "84885859-f214-4f14-b3bd-bc236b59e6a6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"description\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"name\": \"{{baseEntityPrefix}}_DISK_SPACE\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Customer accounts, subscription, access",
									"item": [
										{
											"name": "Create Customer 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "21ac33bb-d913-44dc-a2b1-5593ce5e485c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3d5d0829-ce08-4c71-9c41-32d4091ad084",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9649bd8e-df2f-40c4-9fda-5d228cec853b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer Account 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53e4424c-45dc-4ed5-9e75-d0369f6deb74",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer Account 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "512e97fa-1de6-4c82-a260-f8bd37b40479",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer Account 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c6e42a9-0b69-45dd-835e-d647bd5e58e4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0626cfc-dd81-44a0-afb2-6a98d6877584",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "059470a8-dc34-4254-996b-852a39770407",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b2e2aea-9237-493f-bdb3-afa587d42bab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"billingCycle\": \"CYC_INV_MT_3\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05f14d02-d0b4-4087-bd81-d7f5aa181362",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f18bc6c-5d29-4c4a-8b8a-4960eb13e191",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c5439d39-da26-4302-af8c-caccdeb9fc1d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7447d38e-0fc1-4737-845a-e19350095b2e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"description\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8088ffcb-4d31-47e0-ac25-85bbe4b8b6bc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_ACCP\",\r\n    \"subscription\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"startDate\": \"2016-06-01\",\r\n    \"endDate\": \"2016-06-30\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/access/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"access",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Administration: Measurable Qtt,Charts, Notifications, etc..",
									"item": [
										{
											"name": "create MeasurableQuantities",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4ac0e12b-a981-4b39-baf3-1cc543ce6277",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_MQ1\",\r\n    \"description\": \"{{baseEntityPrefix}}_MQ1-DESC\",\r\n    \"dimension1\": \"1\",\r\n    \"dimension2\": \"2\",\r\n    \"dimension3\": \"3\",\r\n    \"dimension4\": \"4\",\r\n    \"editable\": \"false\",\r\n    \"additive\": \"true\",\r\n    \"sqlQuery\": \"select count(*) from billing_subscription where status='CREATED' and date(created)='#{date}'\",\r\n    \"measurementPeriod\": \"MONTHLY\",\r\n    \"lastMeasureDate\": \"2016-03-16\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/measurableQuantity",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"measurableQuantity"
													]
												}
											},
											"response": []
										},
										{
											"name": "create BarChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d374f79-c9dc-4a77-824f-7e9639e92d37",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_BarCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"100\",\r\n    \"height\": \"100\",\r\n    \"style\": \"test1\",\r\n    \"styleClass\": \"test1\",\r\n    \"extender\": \"test1\",\r\n    \"visible\": \"true\",\r\n    \"legendPosition\": \"n\",\r\n    \"barPadding\": \"100\",\r\n    \"barMargin\": \"100\",\r\n    \"orientation\": \"vertical\",\r\n    \"stacked\": \"true\",\r\n    \"min\": \"100\",\r\n    \"max\": \"100\",\r\n    \"breakOnNull\": \"false\",\r\n    \"xaxisLabel\": \"test\",\r\n    \"yaxisLabel\": \"test\",\r\n    \"xaxisAngle\": \"10\",\r\n    \"yaxisAngle\": \"10\",\r\n    \"legendCols\": \"20\",\r\n    \"legendRows\": \"20\",\r\n    \"zoom\": \"true\",\r\n    \"animate\": \"true\",\r\n    \"showDataTip\": \"true\",\r\n    \"datatipFormat\": \"false\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/chart/bar",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"chart",
														"bar"
													]
												}
											},
											"response": []
										},
										{
											"name": "create PieChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "27d72fde-f3cb-4819-a640-f42775ab7cb1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_PieCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"123\",\r\n    \"height\": \"123\",\r\n    \"style\": \"style1\",\r\n    \"styleClass\": \"style_class1\",\r\n    \"extender\": \"extender1\",\r\n    \"visible\": \"true\",\r\n    \"filled\": \"false\",\r\n    \"legendPosition\": \"n\",\r\n    \"diameter\": \"120\",\r\n    \"sliceMargin\": \"10\",\r\n    \"shadow\": \"true\",\r\n    \"showDataLabels\": \"false\",\r\n    \"legendCols\": \"23\",\r\n    \"legendRows\": \"23\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/chart/pie",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"chart",
														"pie"
													]
												}
											},
											"response": []
										},
										{
											"name": "create LineChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "03290c6c-8fb5-422e-8302-bf90d3296c13",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_LC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_LineCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"200\",\r\n    \"height\": \"200\",\r\n    \"style\": \"style1\",\r\n    \"styleClass\": \"styleClass2\",\r\n    \"extender\": \"extender3\",\r\n    \"visible\": \"true\",\r\n    \"filled\": \"false\",\r\n    \"legendPosition\": \"w\",\r\n    \"shadow\": \"true\",\r\n    \"minX\": \"45\",\r\n    \"maxX\": \"45\",\r\n    \"minY\": \"45\",\r\n    \"maxY\": \"45\",\r\n    \"breakOnNull\": \"true\",\r\n    \"xaxisLabel\": \"label 1\",\r\n    \"yaxisLabel\": \"label 2\",\r\n    \"xaxisAngle\": \"12\",\r\n    \"yaxisAngle\": \"12\",\r\n    \"stacked\": \"true\",\r\n    \"zoom\": \"true\",\r\n    \"animate\": \"false\",\r\n    \"showDataTip\": \"false\",\r\n    \"datatipFormat\": \"false\",\r\n    \"legendCols\": \"56\",\r\n    \"legendRows\": \"56\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/chart/line",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"chart",
														"line"
													]
												}
											},
											"response": []
										},
										{
											"name": "create ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd0e8a47-9757-45cb-baae-6592db98e64d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\n    \"description\": \"{{baseEntityPrefix}}_Script_Instance\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;           \\r\\n            import java.util.Map;\\r\\n            import java.math.BigDecimal;\\r\\n            import org.meveo.admin.exception.BusinessException;\\r\\n            import org.meveo.model.admin.User;\\r\\n            import org.meveo.model.crm.Provider;\\r\\n            import org.slf4j.Logger;\\r\\n            import org.slf4j.LoggerFactory;         \\r\\n            public class {{baseEntityPrefix}}_Script extends Script {             \\r\\n                private static final Logger log = LoggerFactory.getLogger({{baseEntityPrefix}}_Script.class);\\r\\n                public void execute(Map<String,Object> context) throws BusinessException{\\r\\n                    log.debug(\\\\\\\"{{baseEntityPrefix}}_Script creation script...\\\\\\\");\\r\\n                    log.debug(\\\\\\\"{{baseEntityPrefix}}_Script creation script.\\\\\\\");\\r\\n                }\\r\\n            }\",\n    \"executionRoles\": [\n        {\n            \"name\": \"administrateur\"\n        }\n    ],\n    \"sourcingRoles\": [\n        {\n            \"name\": \"administrateur\"\n        }\n    ]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3b45b8ea-8045-45d2-a493-ecc3374cb583",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Notification1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Webhook",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "00b50844-9e7d-42c7-b69a-30622cb8588e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_WebHook1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\r\n    \"host\": \"localhost\",\r\n    \"port\": \"8080\",\r\n    \"page\": \"meveo/api/rest/\",\r\n    \"httpMethod\": \"HTTP_GET\",\r\n    \"username\": \"test.username\",\r\n    \"password\": \"test.password\",\r\n    \"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/notification/webhook/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"webhook",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create EmailNotifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d2bcafb9-ee9e-4b00-88df-391ad660ffc0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_EmailNotif1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\r\n    \"emailFrom\": \"OpenCell\",\r\n    \"emailToEl\": \"edward.legaspi@opencellsoft.com\",\r\n    \"subject\": \"Test Meveo Application\",\r\n    \"body\": \"Test Body\",\r\n    \"htmlBody\": \"HTML Body\",\r\n    \"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/notification/email/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"email",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Timer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a0dd709-f934-47ef-920c-e375fdb3f607",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Timer1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Timer_DESCP\",\r\n    \"hour\": \"1\",\r\n    \"minute\": \"10\",\r\n    \"second\": \"45\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"timerEntity",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create JobInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "278f30c4-4b34-4b3e-b581-087e4af3ad5e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"jobTemplate\": \"ExportSubscriptionsJob\",\r\n    \"code\": \"{{baseEntityPrefix}}_ImpExp-Job1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Import-Export\",\r\n    \"timerCode\": \"{{baseEntityPrefix}}_Timer1\",\r\n    \"jobCategory\": \"IMPORT/EXPORT\",\r\n    \"followingJob\": \"ACCO_JOB\",\r\n    \"parameter\": \"param1\",\r\n    \"active\": \"false\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1e5a516e-2a1c-4f87-a084-25a5b039b95f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Filter1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Filter1_DESCP\",\r\n    \"shared\": \"false\",\r\n    \"inputXml\": \"<filter>\\n  <disabled>false</disabled>\\n  <appendGeneratedCode>false</appendGeneratedCode>\\n  <filterCondition class=\\\"andCompositeFilterCondition\\\">\\n    <filterConditionType>COMPOSITE_AND</filterConditionType>\\n    <filterConditions>\\n      <primitiveFilterCondition>\\n        <filterConditionType>PRIMITIVE</filterConditionType>\\n        <fieldName>startRatingDate</fieldName>\\n        <operator>>=</operator>\\n        <operand>date:01/09/2015</operand>\\n      </primitiveFilterCondition>\\n    </filterConditions>\\n  </filterCondition>\\n  <primarySelector>\\n    <targetEntity>org.meveo.model.catalog.PricePlanMatrix</targetEntity>\\n    <alias>p</alias>\\n    <displayFields>\\n      <field>code</field>\\n      <field>eventCode</field>\\n    </displayFields>\\n    <exportFields/>\\n    <ignoreIfNotFoundForeignKeys/>\\n  </primarySelector>\\n  <secondarySelectors/>\\n</filter>\"\r\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/filter/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"filter",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Timer Hourly",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33e786ff-f018-4d4e-a606-65a82a2d4aaf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"Hourly\",\r\n    \"description\": \"Hourly\",\r\n    \"hour\": \"*\",\r\n    \"minute\": \"0\",\r\n    \"second\": \"0\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"timerEntity",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create GDPR JobInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "71d4116a-52d9-4a5a-892b-ce959e256252",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"jobTemplate\": \"GDPRJob\",\n    \"code\": \"GDPR_Job\",\n    \"description\": \"GDPR_Job\",\n    \"jobCategory\": \"DWH\",\n    \"active\": \"false\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Timer Daily - Midnight",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d415d6e2-ffbd-4a46-acda-cb2923b46b9c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"Daily-midnight\",\r\n    \"description\": \"Daily-midnight\",\r\n    \"hour\": \"23\",\r\n    \"minute\": \"59\",\r\n    \"second\": \"59\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"timerEntity",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create PaymentSchedule Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dcc75ced-4597-49d1-b5e8-f4bb0c9dd4f1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"jobTemplate\": \"PaymentScheduleProcessingJob\",\r\n    \"code\": \"PaymentSchedule_Job\",\r\n    \"description\": \"PaymentSchedule_Job\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"active\": \"false\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup TerminationReason",
									"item": [
										{
											"name": "update TERM_REASON_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1faeb341-6a7c-42cd-b49e-2b34ef0b0dca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TERM_REASON_1\",\r\n    \"description\": \"Agreement Reimbursement Charge\",\r\n    \"applyAgreement\": \"true\",\r\n    \"applyReimbursment\": \"true\",\r\n    \"applyTerminationCharges\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason"
													]
												}
											},
											"response": []
										},
										{
											"name": "update TERM_REASON_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8a0b008c-d634-4312-8522-4ae6fc0e0a9d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TERM_REASON_2\",\r\n    \"description\": \"Reimbursement\",\r\n    \"applyAgreement\": \"false\",\r\n    \"applyReimbursment\": \"true\",\r\n    \"applyTerminationCharges\": \"false\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason"
													]
												}
											},
											"response": []
										},
										{
											"name": "update TERM_REASON_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3400f899-52d7-49fd-94cb-0cb4043aab5c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TERM_REASON_3\",\r\n    \"description\": \"Charge\",\r\n    \"applyAgreement\": \"false\",\r\n    \"applyReimbursment\": \"false\",\r\n    \"applyTerminationCharges\": \"true\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Service workflow",
							"item": [
								{
									"name": "Service workflow - service multi activation",
									"item": [
										{
											"name": "SET_VARIABLES",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "f8dc9510-3c93-4b69-94dc-f5d3f586bbb8",
														"exec": [
															"pm.globals.set(\"index\", 240);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "a92bf0ef-94b6-440b-b547-8e5984f26b9e",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "OPTIONS",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "https://postman-echo.com/",
													"protocol": "https",
													"host": [
														"postman-echo",
														"com"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Set service.allowMultiInstantiation=true - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3152077-0f14-4603-b393-6004284215f2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.superpassword}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.superusername}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuc3VwZXJhZG1pbjpvcGVuY2VsbC5zdXBlcmFkbWlu"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"true\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/configurations/setProperty",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"configurations",
														"setProperty"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6a7c9567-758a-4bd6-bac1-42fcd8ea6d58",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"subscriptionDate\": \"2016-12-01\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "10105049-02bc-41ff-8d89-d86d819487aa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service again - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3278009b-da6e-4ff5-9e76-5eae0a574c1e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4dd11c87-1951-40d9-bd76-b52659a7d767",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_UA\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"INACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(3);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1481414400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1]).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services 1 and 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af7b1115-1e4d-464a-9120-e8c10663f557",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\t\"quantity\": \"1\",\r\n\t\t\t\t\"subscriptionDate\": \"2016-12-02\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n\t\t\t\t\"quantity\": \"2\",\r\n\t\t\t\t\"subscriptionDate\": \"2017-01-01\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription A1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7540969b-47a1-41a4-a51d-d6845b8d0e06",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_UA\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "003cd435-71ca-4cc7-af98-59fde3b67bdf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.serviceInstance.quantity).to.eql(1);",
															"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														},
														{
															"key": "serviceInstanceCode",
															"value": "{{baseEntityPrefix}}_SERVICE1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7a276107-8505-4363-a7c4-9c6dc45ffe4f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE1\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1 again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "18a5cf2d-feb3-43a2-9338-7e985ffb3016",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service 1 again - change quantity and subscription date",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f0ba72c-a0f2-4ebb-bece-b5691d6f7b1c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"5\",\r\n                \"subscriptionDate\": \"2016-12-08\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription A2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58cceb67-9c7d-4b4a-9176-2788099e7762",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationReason).to.eql(\"TERM_REASON_1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].quantity).to.eql(5);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].subscriptionDate).to.eql(1481155200000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service1 A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bb5b31a1-09e3-4654-9df6-d457e148bbab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE1\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1 again 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26b86610-3462-4061-9cc8-af07a6da7762",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"11\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service 1 again - no changes",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "71ea4b6c-1050-4e56-929f-22714ee50e44",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription A3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d3b727ce-9cb4-475c-b813-f344a8adf6f5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.globals.set(\"siid1\", jsonData.subscription.services.serviceInstance[0].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationReason).to.eql(\"TERM_REASON_1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.globals.set(\"siid2\", jsonData.subscription.services.serviceInstance[1].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.globals.set(\"siid3\", jsonData.subscription.services.serviceInstance[2].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].quantity).to.eql(5);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].subscriptionDate).to.eql(1481155200000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].terminationDate).to.eql(1481155200000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].terminationReason).to.eql(\"TERM_REASON_1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.globals.set(\"siid4\", jsonData.subscription.services.serviceInstance[3].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].quantity).to.eql(11);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].subscriptionDate).to.eql(1481414400000);",
															"});",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff901295-eb02-45f9-8f39-c428b145ce75",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"More than one service instance with status [] was found. Please use ID to refer to service instance.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														},
														{
															"key": "serviceInstanceCode",
															"value": "{{baseEntityPrefix}}_SERVICE1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance by ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06c7e1c4-c57d-4295-86f7-a3f4ee83cdae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.serviceInstance.status).to.eql(\"TERMINATED\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceId={{siid1}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														},
														{
															"key": "serviceInstanceId",
															"value": "{{siid1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service by id1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0c2eea9-3d9d-42b2-a59b-e65cc0b876a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"serviceIds\": [{{siid4}}],\r\n\t\"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"terminationReason\": \"TERM_REASON_1\",\r\n\t\"terminationDate\": \"2016-12-31\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription T1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4bef687-0f70-4489-92d0-a01243c896a8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].id).to.eql(pm.globals.get(\"siid4\"));",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].status).to.eql(\"TERMINATED\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "489a38ca-4cc2-497d-9306-fae307bb55b8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE2\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription T2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1461c9f0-7756-4e46-bd1f-e8db0568d055",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Service workflow - service single activation",
									"item": [
										{
											"name": "Set service.allowMultiInstantiation=false - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f9aa320b-a09d-4826-93ad-1cfdadeac856",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"false\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/configurations/setProperty",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"configurations",
														"setProperty"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6403200a-cda9-4c47-b277-9c16cd1841be",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"subscriptionDate\": \"2016-12-01\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "899df0d4-6398-4198-bff2-b7718065bc44",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2016-12-01\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service again - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4a939918-5c38-4476-8b36-e792d46c1a8c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"3\",\n                \"subscriptionDate\": \"2016-12-11\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription I",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a630578a-1e70-4929-8e54-edb468aaf98f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"INACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480550400000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services 1 and 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aefa1e69-3235-4d34-844e-396a5b9d8ffe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\t\"quantity\": \"1\",\r\n\t\t\t\t\"subscriptionDate\": \"2016-12-02\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n\t\t\t\t\"quantity\": \"2\",\r\n\t\t\t\t\"subscriptionDate\": \"2017-01-01\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription A1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5481f789-c02c-4edb-906e-e506263ceda3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.globals.set(\"siid1\", jsonData.subscription.services.serviceInstance[0].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.globals.set(\"siid2\", jsonData.subscription.services.serviceInstance[1].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09f1fcbf-a096-4fb7-8aaf-33d74be658da",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														},
														{
															"key": "serviceInstanceCode",
															"value": "{{baseEntityPrefix}}_SERVICE1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1 again - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f19d81c1-f9f2-4b9c-9bea-7e6613269f17",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service 1 again - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2bf3d493-ec8b-4bdb-9f00-b4408a330bff",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of START_OBJECT token\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": {\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\"quantity\": \"5\",\r\n\t\t\t\"subscriptionDate\": \"2016-12-08\"\r\n\t\t}\r\n\t}\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance by ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1648fe9c-db5d-47b0-b2a5-133d23c94f70",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL&serviceInstanceId={{siid1}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														},
														{
															"key": "serviceInstanceId",
															"value": "{{siid1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service by id1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5966f437-dd5e-414a-8a04-82e3bd078269",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceIds\": [\n        \"{{siid1}}\"\n    ],\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2016-12-31\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription T1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "624d8184-2b6d-4c8c-919f-5868cb68fb9c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f1d91cf4-a80d-4096-9f8a-5c8f7b5013fd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE2\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n    \"terminationReason\": \"TERM_REASON_3\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription T2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8040ccd7-84ed-4281-8e78-19c142f7673a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription workflow",
							"item": [
								{
									"name": "Terminate Subscription",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2131895-ca6a-4c36-918a-953d07357e79",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2016-03-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4bd4ea57-ed48-4259-a4aa-fb7914516140",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-02\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2015-04-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4208894b-2f18-4bd0-b7d7-c3ed0b726a6f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SUB_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1456790400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1422835200000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1427846400000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SUB_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SUB_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "258e5c5b-68e6-4660-8b05-88379ab2dad8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-04-30\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ae295f8-c6d2-496d-ac0c-7ff74c3b7508",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SUB_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1456790400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1422835200000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1427846400000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SUB_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SUB_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28837500-4da1-45df-b2c6-390f1dc7cfaa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\"\r\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c60ad278-bc22-4e91-a978-2f54f3232d66",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{today}}\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b35fa859-d45a-41b7-9834-900ddfc862b8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.renewalRule.initialTermType).to.eql(\"RECURRING\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4344eac0-2ffc-4c82-af82-4e8df2a52dad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{terminationDate}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - future termination 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f9fbed15-40ba-4ea5-98ec-d701465f8023",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.subscribedTillDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
															"    pm.expect(jsonData.subscription.renewalRule.endOfTermAction).to.eql(\"TERMINATE\");",
															"    pm.expect(jsonData.subscription.renewalRule.terminationReasonCode).to.eql(\"TERM_REASON_1\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - in-between-days termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2a4467db-1b5f-4685-982e-2e834ada538e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{10daysBefore}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services - in-between-days termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d432d1b-a32c-4cad-b997-8c84433ced05",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"{{5daysBefore}}\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"{{2daysBefore}}\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - in-between-days termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5df2f4f1-e640-4852-96bf-efe2ae3f8daf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription - in-between-days termination - before Subscription's subscription date -KO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7bb7770b-c705-415e-9045-ed6417267618",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Termination date can not be before the subscription date\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{20daysBefore}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription - in-between-days termination - on Subscription's subscription date - OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53fc4855-c776-47dd-a5ea-000020cd794d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{10daysBefore}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - in-between-days termination 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ccd0497-1ada-48ab-b6c2-fcf8b92cd220",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].terminationDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - in-between-days 2 termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9539614-9fb7-4524-959c-92f5db436a94",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{10daysBefore}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services - in-between-days 2 termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "24cb27b0-ca63-455b-9235-73957137fce2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{5daysBefore}}\"\n            },\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{2daysBefore}}\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - in-between-days 2 termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6177db31-c0e1-4052-8bc4-4694f1446e81",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_2_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription - in-between-days 2 termination - inbetween service's subscription date - OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b896c53-95ff-4113-b424-3f8f85085b85",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{3daysBefore}}\"\r\n}\r\n\t",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - in-between-days 2 termination 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1ed2591-c5aa-48e5-b0f8-a660a83da811",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_2_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"3daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(new Date(pm.globals.get(\"3daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].terminationDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - future termination 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f417c4b-ed20-4b77-a9da-8859d8400f2e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\",\r\n    \"terminationDate\": \"{{terminationDate}}\",\r\n    \"terminationReason\": \"TERM_REASON_1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - future termination 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6262770-6ee5-44d4-9606-89dada8215b9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION_3\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - future termination 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "52413a6c-a3ef-4223-bfe1-6ab3ead5d32d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services - future termination 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c8a4a1b6-4061-47f6-bd97-aaf234c5c1e1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{today}}\"\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update subscription - future termination 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9d886131-bc52-421b-a4ec-eac6ea53ff3e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\",\r\n    \"terminationDate\": \"{{terminationDate}}\",\r\n    \"terminationReason\": \"TERM_REASON_1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - future termination 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36e744e9-4cca-48d7-ae77-342d650f94b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION_4\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.subscribedTillDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
															"    pm.expect(jsonData.subscription.renewalRule.initialTermType).to.eql(\"FIXED\");",
															"    pm.expect(jsonData.subscription.renewalRule.autoRenew).to.eql(false);",
															"    pm.expect(jsonData.subscription.renewalRule.endOfTermAction).to.eql(\"TERMINATE\");",
															"    pm.expect(jsonData.subscription.renewalRule.terminationReasonCode).to.eql(\"TERM_REASON_1\");",
															"    pm.expect(jsonData.subscription.renewalRule.extendAgreementPeriodToSubscribedTillDate).to.eql(false);",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "ApplyOneShotChargeInstance",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6777b9ee-7ace-4112-bf10-3f2b2418303c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2016-03-01\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "83932769-c22f-4e3f-bde6-67498f0da55f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-02\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2015-04-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "applyOneShotChargeInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2d3f9e79-135a-4074-8a6a-417fa745f3f1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"oneShotCharge\": \"{{baseEntityPrefix}}_OS1\",\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\n    \"createWallet\": false,\n    \"operationDate\": \"2016-04-06\",\n    \"quantity\": \"1\",\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description\",\n    \"amountWithoutTax\": \"11\",\n    \"amountWithTax\": \"13\",\n    \"criteria1\": \"criteria1\",\n    \"criteria2\": \"criteria2\",\n    \"criteria3\": \"criteria3\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/applyOneShotChargeInstance",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"applyOneShotChargeInstance"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscription instantiate/activate service NOT in Offer and modify offer in subscription",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ea0ee13-c106-4549-a71a-33566be07855",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create service with min req Vals",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "81a40e93-c9a7-447c-ae50-27f21445836e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n    \"invoicingCalendar\": \"Multi period\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services with service not in Offer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1870fb95-5d87-4767-9a26-654d28ebc191",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Service \"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SERVICE is not associated with Offer\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services with service not in Offer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e0edac2f-8247-42be-a7f1-67e583532a1e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"No offerServiceTemplate corresponds to \"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SERVICE\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2016-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update subscription with another offer - ok",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f1b1552f-59fb-4429-a655-a077d7950601",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "02285b0c-02b7-495c-9cd7-11973a02db85",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2016-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update subscription with another offer - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b1d0335b-efeb-4f96-ad13-b026f6b30956",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Cannot change the offer of subscription once the services are instantiated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Apply Product",
									"item": [
										{
											"name": "Create CFT Product 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "533836ba-4629-43d2-b63f-ac5510228df7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ProductInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT Product 101",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "039d9095-9853-4bb3-b90e-5e3a9b3b33e1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ProductInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product charge100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fbf0419-4a5a-437a-a3e1-1e239fc34d9c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": false,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit 100 Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\":\"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da4e7f07-c669-4d77-8edf-866798586b8e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"description\": \"{{baseEntityPrefix}}_PRODUCT2 DESC\",\r\n    \"name\": \"{{baseEntityPrefix}}_PRODUCT100 NAME\",\r\n    \"productChargeTemplate\": [\r\n        {\r\n            \"code\": \"{{baseEntityPrefix}}_PC100\",\r\n            \"invoiceSubCategory\": \"SUB_DATA\",\r\n            \"disabled\": false\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan product 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fc9a2507-1e0b-493a-a9d3-a5c5f0d0402e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC100_PP\",\r\n    \"description\": \"price plan product 100\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"amountWithoutTax\": \"5\",\r\n    \"amountWithTax\": \"6\",\r\n    \"priority\": \"1\",\r\n    \"amountWithoutTaxEL\": \"#{mv:getInheritedCFValue(productInstance,'{{entityPrefix}}_{{index}}_CF_PROD_PRICE100')}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "03df1a80-5685-4ad6-b942-8d829a416980",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 2 to UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "543dca1b-e295-4dab-8f87-9fbf62c2b7f0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 2 to UA_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "68d333c4-c6b8-4299-b663-9373d33318ab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 2 to SUB_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4b06917c-d09e-4ec0-8e4b-b35127e351d8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_SUB\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 100 to UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f850719-0717-4c0d-9cac-487722028994",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"101.1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 100 to SUB_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "19a8d5eb-5468-47ca-9938-489ce6387a38",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_SUB\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"101.2\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT Product 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "db6098e1-5a9b-40fb-aaf8-8c31bdbba564",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_PROD_PRICE100/ProductInstance",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100",
														"ProductInstance"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT Product 101",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1cace5a3-a55f-439f-b1a2-3a13864e1a86",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_PROD_PRICE101/ProductInstance",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101",
														"ProductInstance"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "328f4a68-74cb-4d0d-81c1-e5003236f42a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var body = ",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_PROD\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
															"    pm.expect(jsonData.subscription.productInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_PRODUCT2\");",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_PROD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_PROD"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Update service instance",
									"item": [
										{
											"name": "Create CFT ServiceInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aae643b9-1a1f-45f9-9fa1-b7e9c30ac2c4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ServiceInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ee5ffb52-61e9-4913-b7ee-60b22d79b01e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2017-03-15\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b90addf5-19df-4098-aaf8-75c0c7f6df58",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c7555cca-4597-441c-95af-ff71f63a0bec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_UPD_SERV_100\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "757b0a40-503b-485b-83e3-840356f10515",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"endAgreementDate\": \"2017-03-29\",\n            \"customFields\": {\n                \"customField\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                        \"doubleValue\": \"201\"\n                    }\n                ]\n            }\n        },\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n            \"endAgreementDate\": \"2017-03-30\",\n            \"customFields\": {\n                \"customField\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                        \"doubleValue\": \"202\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/updateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"updateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription-Updated",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f34fc07-7112-4e0e-90bf-fa68ad75ee59",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_UPD_SERV_100\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(jsonBody.services.serviceInstance[0].quantity);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(jsonBody.services.serviceInstance[1].quantity);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
															"    ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"services\": {\n        \"serviceInstance\": [\n            {\n                \"quantity\": 1,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 201\n                        }\n                    ]\n                }\n            },\n            {\n                \"quantity\": 2,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 202\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update services - change quantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9d251a6-a490-4459-b71e-6c645cf357c4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"quantity\": \"5\"\n        },\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n            \"quantity\": \"7\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/updateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"updateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - Updated quantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d6aa686-5eeb-4b0d-bc6e-f569938e98d7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.subscription.code).to.eql(jsonBody.code);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(jsonBody.services.serviceInstance[0].quantity);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(jsonBody.services.serviceInstance[1].quantity);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
															"    ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"services\": {\n        \"serviceInstance\": [\n            {\n                \"quantity\": 5,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 201\n                        }\n                    ]\n                }\n            },\n            {\n                \"quantity\": 7,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 202\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CFT ServiceInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0fb96923-1957-4cae-82eb-e7968618cf4e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_SERV_UPD_100/ServiceInstance",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100",
														"ServiceInstance"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update services - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "524975b5-48a5-4c36-8779-8d79c36a21fe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "6c2641d1-7cff-49bd-b4a5-fbd463d2d5bb",
														"exec": [
															"var today = new Date();\r",
															"var terminationDate = new Date();\r",
															"terminationDate.setMonth(today.getMonth() + 5);\r",
															"\r",
															"\r",
															"pm.globals.set(\"testCase.terminationDate\", terminationDate.toISOString().slice(0, 10));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"terminationDate\": \"{{testCase.terminationDate}}\",\n            \"terminationReason\": \"TERM_REASON_1\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/updateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"updateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ba22c00-9b08-4366-8b97-5b9482a768fe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.serviceInstances[0].code).to.eql(jsonBody.serviceInstances[0].code);",
															"    pm.expect(jsonData.serviceInstances[0].quantity).to.eql(jsonBody.serviceInstances[0].quantity);",
															"    pm.expect(jsonData.serviceInstances[0].subscriptionDate).to.eql(jsonBody.serviceInstances[0].subscriptionDate);",
															"    pm.expect(jsonData.serviceInstances[0].terminationDate).to.eql(new Date(pm.globals.get(\"testCase.terminationDate\")).getTime());",
															"    pm.expect(jsonData.serviceInstances[0].serviceRenewal).to.eql(jsonBody.serviceInstances[0].serviceRenewal);",
															"    ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"actionStatus\": {\n        \"status\": \"SUCCESS\"\n    },\n    \"serviceInstances\": [\n        {\n            \"id\": 30,\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"description\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"subscriptionDate\": 1489536000000,\n            \"quantity\": 5,\n            \"serviceRenewal\": {\n                \"initialTermType\": \"FIXED\",\n                \"renewalTermType\": null,\n                \"initialyActiveFor\": null,\n                \"initialyActiveForUnit\": null,\n                \"calendarInitialyActiveFor\": null,\n                \"autoRenew\": false,\n                \"daysNotifyRenewal\": null,\n                \"endOfTermAction\": \"TERMINATE\",\n                \"terminationReasonCode\": \"TERM_REASON_1\",\n                \"renewFor\": null,\n                \"calendarRenewFor\": null,\n                \"renewForUnit\": null,\n                \"extendAgreementPeriodToSubscribedTillDate\": false\n            }\n        }\n    ]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstances?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstances"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
														},
														{
															"key": "serviceInstanceCode",
															"value": "{{baseEntityPrefix}}_SERVICE1"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscribe to disable offer",
									"item": [
										{
											"name": "Disable Offer3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a382c065-6a7b-44d0-9582-3966850945d5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{baseEntityPrefix}}_OFFER3/disable",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{baseEntityPrefix}}_OFFER3",
														"disable"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6819e78b-3c1d-4756-aa4d-d0e3d6f0bde3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Cannot subscribe to disabled offer\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Enable Offer3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "807dbe57-6b5a-4914-ba42-fdfcbc1f87e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{baseEntityPrefix}}_OFFER3/enable",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{baseEntityPrefix}}_OFFER3",
														"enable"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Due date delay",
									"item": [
										{
											"name": "Find due date delay - bc",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53a2f735-6ecf-4c10-a5b4-313e1e56e5dc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData).to.deep.equal(jsonBody);",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"actionStatus\": {\r\n        \"status\": \"SUCCESS\"\r\n    },\r\n    \"dueDateDelay\": {\r\n        \"delayOrigin\": \"BC\",\r\n        \"computedDelay\": 2,\r\n        \"delayEL\": null\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/dueDateDelay?subscriptionCode={{baseEntityPrefix}}_SUB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"dueDateDelay"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{baseEntityPrefix}}_SUB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d97b5e02-55b2-45d5-9ed1-c08a9aa4a5c9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"CA_DELAY_{{index}}\",\r\n    \"description\": \"CA_DELAY_{{index}}\",\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"currency\": \"USD\",\r\n    \"language\": \"ENG\",\r\n    \"creditCategory\": \"PRO\",\r\n    \"dueDateDelayEL\": \"#{ba.customerAccount.auditable.created.date}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "43a2b8ad-776d-4ee3-93ff-6241b7e3242d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"BA_DELAY_{{index}}\",\r\n    \"description\": \"BA_DELAY_{{index}}\",\r\n    \"customerAccount\": \"CA_DELAY_{{index}}\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"US\",\r\n    \"language\": \"ENG\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2e14170a-a63e-4555-bd88-966447a313f5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"UA_DELAY_{{index}}\",\r\n    \"description\": \"UA_DELAY_{{index}}\",\r\n    \"billingAccount\": \"BA_DELAY_{{index}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eadcf5a6-ec0a-44a7-9d75-c3fd44524980",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DELAY_SUB_{{index}}\",\r\n    \"description\": \"DELAY_SUB_{{index}}\",\r\n    \"userAccount\": \"UA_DELAY_{{index}}\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"subscriptionDate\": \"2017-01-07\",\r\n    \"endAgreementDate\": \"2017-01-07\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find due date delay - ca",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9ce83f70-e77a-47e0-9fae-df556b3c111b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.dueDateDelay.delayOrigin).to.deep.equal(jsonBody.delayOrigin);",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"delayOrigin\": \"CA\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/dueDateDelay?subscriptionCode=DELAY_SUB_{{index}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"dueDateDelay"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "DELAY_SUB_{{index}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8176c296-2d6a-4d36-8462-3d0a923b6178",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"DELAY_SUB_{{index}}\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n                \"quantity\": \"5\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n                \"quantity\": \"10\",\r\n                \"subscriptionDate\": \"2017-05-15\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscription age",
									"item": [
										{
											"name": "Create recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2634832c-81d0-44a5-8c1e-e536240a68f4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC1\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Subscription Age\"\r\n        }\r\n    ],\r\n    \"calendar\": \"MONTHLY\",\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"durationTermInMonth\": \"4\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\":\"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4ca91e0-61f2-49b2-814d-e026cc7140cf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n    \"invoicingCalendar\": \"MONTHLY\",\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1b224a3b-0991-4090-9f51-f054f14db564",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"disabled\": false,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate ",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate "
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan recurring 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "297614bd-4fd8-4d9a-bf48-d14634d1c01d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE2\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"5\",\r\n    \"amountWithTax\": \"10\",\r\n    \"priority\": \"1\",\r\n    \"minSubscriptionAgeInMonth\": \"5\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan recurring 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82453c19-86e3-474f-9a99-d6d1dd3dd00f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE2\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"15\",\r\n    \"amountWithTax\": \"30\",\r\n    \"priority\": \"1\",\r\n    \"maxSubscriptionAgeInMonth\": \"3\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b129558a-4709-4ef7-a085-fa4cc0342296",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE1\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"2\",\r\n    \"amountWithTax\": \"4\",\r\n    \"priority\": \"2\",\r\n    \"minSubscriptionAgeInMonth\": \"1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0031f122-d057-4cd5-ba20-1a3698574fe6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"subscriptionDate\": \"2017-03-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5cb327f1-8a79-447f-9cbd-65bb04ed45d1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1885ab7-3638-4504-a10e-c3cec522b70d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2017-12-01\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8659607c-9d48-4e50-a801-f3cee4668de8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"subscriptionDate\": \"2017-07-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc2ebd0d-6841-4417-b6bd-b77553d7a9eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-07-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "911ce98e-0aed-4223-b125-66e65da67c04",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2017-09-01\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Activate Subscription",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f9586d5-4227-401c-adb6-ca55526ebefb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "359b31e9-2a8e-478e-b2bd-e0c870afaa84",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b8442a48-038f-4bf8-9635-e9e64bb533d3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cfebab9d-e1ed-46c8-a015-6b43bfe3555a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            },\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6084fde6-255e-4084-a067-9e06402db44c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{entityPrefix}}_{{index}}_SUB_ACTIVATION",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5ef90714-5f93-42d5-9511-a808034d1954",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{entityPrefix}}_{{index}}_SUB_ACTIVATION2",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscription status notification",
									"item": [
										{
											"name": "Create script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "78f2f15e-737b-4437-bcf5-58db1789a2e4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"org.meveo.service.script.SubscriptionStatusUpdatedScript\",\r\n    \"description\": \"rating script\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\n\\nimport org.meveo.admin.exception.BusinessException;\\nimport org.meveo.model.billing.Subscription;\\nimport org.meveo.model.billing.SubscriptionStatusEnum;\\nimport org.meveo.service.billing.impl.SubscriptionService;\\nimport org.meveo.service.script.Script;\\n\\nimport java.util.Map;\\n\\npublic class SubscriptionStatusUpdatedScript extends Script {\\n\\n    private SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface(\\\"SubscriptionService\\\");\\n\\n    @Override\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\n        log.info(\\\"<<<<<<< SubscriptionStatusUpdatedScript >>>>>>>>>>\\\");\\n        Subscription subscription = (Subscription) methodContext.get(\\\"subscription\\\");\\n        SubscriptionStatusEnum previousState = (SubscriptionStatusEnum) methodContext.get(\\\"previousState\\\");\\n        SubscriptionStatusEnum currentState = (SubscriptionStatusEnum) methodContext.get(\\\"currentState\\\");\\n        log.info(\\\"subscription.getCode() : \\\" + subscription.getCode());\\n        log.info(\\\"currentState : \\\" + currentState.name());\\n        log.info(\\\"previousState : \\\" + previousState.name());\\n        subscription.setDescription(\\\"from_\\\" + previousState + \\\"_to_\\\" + currentState);\\n        subscriptionService.update(subscription);\\n    }\\n} \"\r\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6bd9d29b-084a-4ff3-b1f6-9b8e78d19a6e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification\",\r\n    \"classNameFilter\": \"org.meveo.model.billing.Subscription\",\r\n    \"eventTypeFilter\": \"STATUS_UPDATED\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.SubscriptionStatusUpdatedScript\",\r\n    \"scriptParams\": {\r\n        \"subscription\": \"#{event.entity}\",\r\n        \"previousState\": \"#{event.previousState}\",\r\n        \"currentState\": \"#{event.currentState}\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cf74db99-a5b5-4eac-b658-aa6949286510",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c8b743ba-85ff-493c-a9b1-783d2cfa74c9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "419a92ed-6d2b-4929-ba96-e67dcaf58ab3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "def0ace7-a515-48dc-b1e6-9040e9ee0ac0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.subscription.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.subscription.description).to.deep.equal(jsonBody.description);",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\n    \"description\": \"from_CREATED_to_ACTIVE\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Notification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e6113763-cdd7-4051-8b57-fc23f8553748",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/notification/{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "740e125b-37d9-4f26-82a1-a72441bae527",
										"type": "text/javascript",
										"exec": [
											"var today = new Date();",
											"var terminationDate = new Date();",
											"var days20before = new Date();",
											"var days10before = new Date();",
											"var days5before = new Date();",
											"var days3before = new Date();",
											"var days2before = new Date();",
											"terminationDate.setDate(today.getDate() + 1);",
											"days20before.setDate(today.getDate() - 20);",
											"days10before.setDate(today.getDate() - 10);",
											"days5before.setDate(today.getDate() - 5);",
											"days3before.setDate(today.getDate() - 3);",
											"days2before.setDate(today.getDate() - 2);",
											"",
											"pm.globals.set(\"index\", 192);",
											"pm.globals.set(\"today\", today.toISOString().slice(0, 10));",
											"pm.globals.set(\"terminationDate\", terminationDate.toISOString().slice(0, 10));",
											"pm.globals.set(\"20daysBefore\", days20before.toISOString().slice(0, 10));",
											"pm.globals.set(\"10daysBefore\", days10before.toISOString().slice(0, 10));",
											"pm.globals.set(\"5daysBefore\", days5before.toISOString().slice(0, 10));",
											"pm.globals.set(\"3daysBefore\", days3before.toISOString().slice(0, 10));",
											"pm.globals.set(\"2daysBefore\", days2before.toISOString().slice(0, 10));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f3bee2ef-fb7e-40c4-b0a6-87912e9f5bdf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription with Inherited CF",
							"item": [
								{
									"name": "Tests",
									"item": [
										{
											"name": "Create CFT for User Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a65d1d6f-fe98-47fd-856e-3bfe88cbc4e1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"UserAccount\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"userAccountCF\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06b63efb-6c92-4b5a-b0d5-210b712cf362",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Subscription\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"subscriptionCF\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for Subscription - Not Inherited",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "73dff4f2-b0e0-4745-b376-f576519de433",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Subscription\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"subscriptionCFNotInherited\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account 3 - Temp",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "467a5a75-84bf-4515-9394-1f3667b58fce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_3\",\n    \"externalRef1\": \"EXTREF1\",\n    \"externalRef2\": \"EXTREF2\",\n    \"name\": {\n        \"title\": \"MR\",\n        \"firstName\": \"Edward\",\n        \"lastName\": \"Legaspi\"\n    },\n    \"address\": {\n        \"address1\": \"adress1\",\n        \"address3\": \"adress3\",\n        \"zipCode\": \"21000\",\n        \"city\": \"Dijon\",\n        \"country\": \"France\"\n    },\n    \"subscriptionDate\": \"2016-03-10\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"stringValue\": \"UA_INHERITED\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "055080ae-2e54-4192-acaa-b306b6a5f150",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"userAccount\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"subscriptionDate\": \"2015-02-01\",\n    \"endAgreementDate\": \"2015-05-01\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"stringValue\": \"SUB_INHERITED\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "851dda4d-f466-4928-8a97-774f9bc44318",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_InheritedCF\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
															"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_UA_3_InheritedCF\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1422748800000);",
															"    pm.expect(jsonData.subscription.endAgreementDate).to.eql(1430438400000);",
															"    pm.expect(jsonData.subscription.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_NOT_INHERITED\");",
															"    pm.expect(jsonData.subscription.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_NOT_INHERITED\");",
															"    pm.expect(jsonData.subscription.customFields.customField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.subscription.customFields.customField[0].stringValue).to.eql(\"subscriptionCFNotInherited\");",
															"    pm.expect(jsonData.subscription.customFields.customField[1].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_INHERITED\");",
															"    pm.expect(jsonData.subscription.customFields.customField[1].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_INHERITED\");",
															"    pm.expect(jsonData.subscription.customFields.customField[1].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.subscription.customFields.customField[1].stringValue).to.eql(\"SUB_INHERITED\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"userAccount\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"subscriptionCFNotInherited\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"SUB_INHERITED\"\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"UA_INHERITED\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_InheritedCF",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_InheritedCF"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "afd85ca4-dfc6-43ba-b847-dd17970a762b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_UA_CF_INHERITED/UserAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_UA_CF_INHERITED",
														"UserAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT SUB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d79e908-63fc-4979-9f40-80fb576adb12",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_SUB_CF_INHERITED/Subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_SUB_CF_INHERITED",
														"Subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT SUB 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f9d1d9a0-4bb8-4964-a50b-bde18ba90921",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_SUB_CF_NOT_INHERITED/Subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_SUB_CF_NOT_INHERITED",
														"Subscription"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Inherited CF in Account",
									"item": [
										{
											"name": "Create CFT for CUST",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f48dac63-8e09-4a19-892c-71c41cf244e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Customer\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for BA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "45aab969-9f95-4ba5-ac63-4d91f7bc9c18",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"BillingAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for CA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a3c05c59-04d3-442a-ba9a-4b2087c79f8d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"CustomerAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "766eaaae-8a4b-4083-9bce-fb989a111c1d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"UserAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create AccountHierarchy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "55f7a435-15c9-4307-9284-5b319b6ba5c5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{entityPrefix}}_432@manaty.net\",\n    \"paymentMethod\": \"2\",\n    \"customerId\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"sellerCode\": \"SELLER_FR\",\n    \"customerBrandCode\": \"DEFAULT\",\n    \"customerCategoryCode\": \"CLIENT\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"billingCycleCode\": \"CYC_INV_MT_1\",\n    \"titleCode\": \"MR\",\n    \"firstName\": \"firstName\",\n    \"lastName\": \"lastName\",\n    \"phoneNumber\": \"+102354749\",\n    \"address1\": \"Address1\",\n    \"address2\": \"Address2\",\n    \"zipCode\": \"75001\",\n    \"city\": \"Tunis\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4eb5da0e-aaa1-494f-a5fb-5da920920ef7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"customerCategory\": \"CLIENT\",\n    \"seller\": \"SELLER_FR\",\n    \"customerBrand\": \"DEFAULT\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueC1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueC2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create customer account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1897c94e-f0b9-49e9-97a4-c938a6c6155b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"customer\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"currency\": \"EUR\",\n    \"language\": \"FRA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueCA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueCA2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create billing account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "685ca8c1-2b7e-4d3c-8198-ce6a9703e528",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2016-04-01\",\r\n    \"subscriptionDate\": \"2016-01-01\",\r\n    \"electronicBilling\": true,\r\n    \"status\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}@manaty.net\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueBA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueBA2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create user account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a3e2a43c-4ba5-4923-937f-f47db25f2991",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_UA\",\r\n    \"billingAccount\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"address1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"address3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\",\r\n    \"status\": \"ACTIVE\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueUA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueUA2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find customer account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e6bc8baf-8774-4c26-8765-77838f17a06a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueCA1\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueCA2\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"",
															"    ",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueC1\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueC2\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\r\n                \"fieldType\": \"STRING\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueCA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueCA2\"\r\n                    },\r\n                    \"key\": {\r\n                        \"value\": \"MAT_1/MAT_2\"\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        \"inheritedCustomField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\r\n                \"fieldType\": \"STRING\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueC1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueC2\"\r\n                    },\r\n                    \"key\": {\r\n                        \"value\": \"MAT_1/MAT_2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CUST1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find billing account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0cd1cc9-6e25-4402-923a-bad6285f2abc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
															"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_BA\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueBA1\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueBA2\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"",
															"    ",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueCA1\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueCA2\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_BA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueBA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueBA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueCA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueCA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CUST1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find user account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "550ebaf7-f356-4c39-85fb-a5d28b266f67",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
															"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_UA\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueUA1\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueUA2\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"",
															"    ",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueBA1\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueBA2\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_UA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n            },\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueUA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueUA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueBA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueBA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CUST1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e5ba8cba-7ea8-4d40-855d-da748e6ab9d4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/{{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"{{entityPrefix}}_{{index}}_CUST1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Billing Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "49ed7bec-6a1f-4a61-bf3b-3f223983074a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/{{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"{{entityPrefix}}_{{index}}_CUST1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerAccount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8ddbb4f-48dd-4682-b9ce-e8df2b21b662",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/{{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"{{entityPrefix}}_{{index}}_CUST1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef6ac946-c821-478e-b477-8a367f28ef03",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{entityPrefix}}_{{index}}_CUST1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f970658f-7d1e-4c15-a549-40c380dbc5e1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/UserAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
														"UserAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT BA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3b0c4443-fdb9-4945-a01d-07f7a5cd01cc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/BillingAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
														"BillingAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT CA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dd463aa6-24f5-4bb2-bd67-af398bcec2a6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/CustomerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
														"CustomerAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT CUST",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d017cc1-eab8-42fe-8db1-ce6ebf2868b1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/Customer",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
														"Customer"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21aa8372-8028-489e-8dd5-27fb37059edd",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 460);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1f1ff376-8d32-4fa2-8ddb-d9e0e48eaebb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "EL expression tests",
							"item": [
								{
									"name": "Calling script from EL",
									"item": [
										{
											"name": "Create script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1de10951-a7d8-4274-9055-1fe5d0a77b11",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;           \\n            import java.util.Map;\\n            import java.math.BigDecimal;\\n            import org.meveo.admin.exception.BusinessException;\\n            import org.meveo.model.admin.User;\\n            import org.meveo.model.crm.Provider;\\n            import org.meveo.model.BusinessEntity;\\n            import org.slf4j.Logger;\\n            import org.slf4j.LoggerFactory;\\n            public class The{{baseEntityPrefix}}_ScriptEL extends Script {\\n                private static final Logger log = LoggerFactory.getLogger(The{{baseEntityPrefix}}_ScriptEL.class);\\n                public void execute(Map<String,Object> context) throws BusinessException{\\n                    log.debug(\\\"The{{baseEntityPrefix}}_ScriptEL called\\\");\\n                    context.put(Script.RESULT_VALUE, ((BusinessEntity)context.get(Script.CONTEXT_ENTITY)).getCode()!=null && ((BusinessEntity)context.get(Script.CONTEXT_ENTITY)).getCode().startsWith(\\\"EL_\\\"));                 \\n                }\\n            }\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT on Charge",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "90a88e6c-c0b8-4344-a196-7f1e824ee307",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_CFT_EL_SCRIPT\",\n    \"description\": \"Field visible on entities with code starting 'EL_'\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ChargeTemplate\",\n    \"defaultValue\": \"KUKU\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": true,\n    \"applicableOnEl\": \"#{mv:executeScript(entity,'org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL', null, entity.auditable.creator)}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recuring Charge OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "891ed5fd-ff99-480d-b512-69d6f1cede27",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC1\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"calendar\": \"MONTHLY\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate ",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate "
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fe4a7ddd-d8d1-42c7-abfa-c05d229a46e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customFieldTemplateCode\": \"{{baseEntityPrefix}}_CFT_EL_SCRIPT\",\n    \"appliesTo\": \"ChargeTemplate\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{baseEntityPrefix}}_CFT_EL_SCRIPT/ChargeTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{baseEntityPrefix}}_CFT_EL_SCRIPT",
														"ChargeTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Script Instance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f9ad886-8d3b-4ecf-ba98-dd2ca8d578fc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"removeScriptInstanceRequest\": \"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Charge filter expression",
									"item": [
										{
											"name": "Update recurring 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "610fe4d3-62ac-4309-acc3-cb1d9f996ff0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC3\",\n    \"description\": \"{{baseEntityPrefix}}_REC3\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"disabled\": false,\n    \"amountEditable\": false,\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\n        }\n    ],\n    \"calendar\": \"MONTHLY\",\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"inputUnitDescription\": \"1\",\n    \"ratingUnitDescription\": \"1\",\n    \"unitMultiplicator\": \"1\",\n    \"unitNbDecimal\": \"2\",\n    \"durationTermInMonth\": \"4\",\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": {\n        \"triggeredEdr\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\n            }\n        ]\n    },\n    \"filterExpression\": false\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26746347-fdda-4a90-916d-3525a5a96a51",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_2\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\n    \"subscriptionDate\": \"2018-01-01\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "daab7c15-4d86-4e8d-890e-5c025754ad3e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\n                \"quantity\": \"2\",\n                \"subscriptionDate\": \"2018-01-01\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6a36c8e1-fd73-4c64-94c0-34e993c5bc68",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_CHARGE_FILTER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_CHARGE_FILTER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update recurring 3 - restore",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "335d9458-8b5f-4463-9b3c-d924cf850743",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC3\",\n    \"description\": \"{{baseEntityPrefix}}_REC3\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"disabled\": false,\n    \"amountEditable\": false,\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\n        }\n    ],\n    \"calendar\": \"MONTHLY\",\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"inputUnitDescription\": \"1\",\n    \"ratingUnitDescription\": \"1\",\n    \"unitMultiplicator\": \"1\",\n    \"unitNbDecimal\": \"2\",\n    \"durationTermInMonth\": \"4\",\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": {\n        \"triggeredEdr\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "InvoiceType - EL AO",
									"item": [
										{
											"name": "Create Service1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de0b9cc2-255f-4800-9f55-d265eac723d0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n    \"description\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_USAGE1\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "304bfc6b-a7cd-40c3-957e-5ce5a6fe58d0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"description\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"name\": \"{{baseEntityPrefix}}_EL_INV_OFFER1\",\n    \"disabled\": false,\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\"\n            }\n        }\n    ],\n    \"lifeCycleStatus\": \"ACTIVE\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InvoiceType - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d2040842-ff54-43da-8d37-6640298c577e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_InvTypeElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_Description_Created\",\n    \"occTemplateCode\": \"INV_REB\",\n    \"occTemplateNegativeCode\": \"PAY_TIP\",\n    \"sequenceDto\": {\n        \"prefixEL\": \"Fact_\",\n        \"sequenceSize\": \"2\",\n        \"currentInvoiceNb\": \"1\"\n    },\n    \"sellerSequence\": {\n        \"SELLER_FR\": {\n            \"prefixEL\": \"SellFact_\",\n            \"sequenceSize\": \"9\",\n            \"currentInvoiceNb\": \"9\"\n        }\n    },\n    \"appliesTo\": [\n        \"COM\"\n    ],\n    \"matchingAuto\": false,\n    \"billingTemplateName\": \"BTN\",\n    \"billingTemplateNameEL\": \"DEMO_#{invoice.id}\",\n    \"occTemplateCodeEl\": \"#{invoice.invoiceNumber.startsWith(\\\"Fact_\\\")?\\\"INV_STD\\\":\\\"INV_REB\\\"}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate ",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate "
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BillingCycle - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4229fc7-45d3-456e-995d-0d567543467c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"dueDateDelay\": \"1\",\n    \"calendar\": \"MONTHLY\",\n    \"invoiceDateDelay\": \"1\",\n    \"invoiceTypeCode\": \"{{entityPrefix}}_{{index}}_InvTypeElAO\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create AccountHierarchy - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a23b6344-17ef-4f5f-8fcb-c81cde1227c5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{entityPrefix}}_43@manaty.net\",\n    \"customerId\": \"{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"sellerCode\": \"SELLER_US\",\n    \"customerBrandCode\": \"DEFAULT\",\n    \"customerCategoryCode\": \"CLIENT\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"billingCycleCode\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"titleCode\": \"MR\",\n    \"firstName\": \"toto\",\n    \"lastName\": \"toc\",\n    \"phoneNumber\": \"+102354749\",\n    \"address1\": \"Address1\",\n    \"address2\": \"Address2\",\n    \"zipCode\": \"4050\",\n    \"city\": \"Los Banana\",\n    \"methodOfPayment\": [\n        {\n            \"paymentMethodType\": \"DIRECTDEBIT\",\n            \"bankCoordinates\": {\n                \"bankCode\": \"12456\",\n                \"branchCode\": \"23456\",\n                \"accountNumber\": \"34589324756\",\n                \"key\": \"45\",\n                \"iban\": \"1212\",\n                \"bic\": \"67789456\",\n                \"accountOwner\": \"Me and co\",\n                \"bankName\": \"Some bank\",\n                \"bankId\": \"78946\",\n                \"issuerNumber\": \"46789\",\n                \"issuerName\": \"Some issuer\",\n                \"ics\": \"5587\"\n            }\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d54cce6-374b-4986-ac71-e42fb59c47e8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"userAccount\": \"UA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"offerTemplate\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"subscriptionDate\": \"2050-10-13\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create access - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fcd465b6-b2f4-46ed-a166-94a1c1b16aae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_INV_SUB_ACCESS_ElAO\",\n    \"subscription\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/access/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"access",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eec04d32-fb7d-4181-95d3-21bbc89e02f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2050-10-13\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Charge CDR - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "51b4f644-8b32-444a-952d-367d4456f6c7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "2050-10-13T00:00:00.000Z;1;{{entityPrefix}}_{{index}}_INV_SUB_ACCESS_ElAO;USAGE",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/mediation/chargeCdr",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"mediation",
														"chargeCdr"
													]
												}
											},
											"response": []
										},
										{
											"name": "Generate invoice - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c8a316a-2eac-46e0-9a40-a9d6b33b00e6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetCode\": \"BA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"targetType\": \"BILLINGACCOUNT\",\n    \"invoicingDate\": \"2050-10-15\",\n    \"firstTransactionDate\": \"2050-10-01\",\n    \"lastTransactionDate\": \"2050-10-31\",\n    \"generatePDF\": false\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoice/generateInvoice",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoice",
														"generateInvoice"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create DDRequestLotOp - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "52e03ce9-ee7f-42d9-bf3d-08dd8c9bada3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"fromDueDate\": \"2050-01-01T00:00:00Z\",\n    \"toDueDate\": \"2051-01-01T00:00:00Z\",\n    \"ddrequestOp\": \"CREATE\",\n    \"status\": \"WAIT\",\n    \"ddRequestBuilderCode\": \"SEPA_STD\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "AO Job - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "75fd311b-f7a5-4e6e-bf09-f1634deaa996",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"AO_Job\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/job/execute",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"job",
														"execute"
													]
												}
											},
											"response": []
										},
										{
											"name": "List Account operations - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6bd7325e-aefe-4dfa-a68f-68e36732cd1e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"actionStatus\": {\r\n        \"status\": \"SUCCESS\"\r\n    },\r\n    \"paging\": {\r\n        \"fullTextFilter\": null,\r\n        \"filters\": {\r\n            \"customerAccount.code\": \"CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\"\r\n        },\r\n        \"fields\": null,\r\n        \"offset\": null,\r\n        \"limit\": null,\r\n        \"sortBy\": \"id\",\r\n        \"sortOrder\": \"DESCENDING\",\r\n        \"totalNumberOfRecords\": 2,\r\n        \"loadReferenceDepth\": 0\r\n    },\r\n    \"accountOperations\": {\r\n        \"accountOperation\": [\r\n            {\r\n                \"id\": 2,\r\n                \"dueDate\": 2549491200000,\r\n                \"type\": \"I\",\r\n                \"transactionDate\": 2549404800000,\r\n                \"transactionCategory\": \"DEBIT\",\r\n                \"reference\": \"Fact_03\",\r\n                \"accountCode\": \"411000000\",\r\n                \"accountingCode\": \"411000000\",\r\n                \"accountCodeClientSide\": \"445510000\",\r\n                \"amount\": 21.240000000000,\r\n                \"amountWithoutTax\": 18.000000000000,\r\n                \"taxAmount\": 3.240000000000,\r\n                \"matchingAmount\": 0E-12,\r\n                \"unMatchingAmount\": 21.240000000000,\r\n                \"matchingStatus\": \"O\",\r\n                \"code\": \"INV_STD\",\r\n                \"description\": \"Standard invoice sub-item\",\r\n                \"excludedFromDunning\": false,\r\n                \"orderNumber\": \"\",\r\n                \"paymentMethod\": \"DIRECTDEBIT\"\r\n            },\r\n            {\r\n                \"id\": 1,\r\n                \"dueDate\": 2549491200000,\r\n                \"type\": \"I\",\r\n                \"transactionDate\": 2549404800000,\r\n                \"transactionCategory\": \"DEBIT\",\r\n                \"reference\": \"Fact_02\",\r\n                \"accountCode\": \"411000000\",\r\n                \"accountingCode\": \"411000000\",\r\n                \"accountCodeClientSide\": \"445510000\",\r\n                \"amount\": 10.620000000000,\r\n                \"amountWithoutTax\": 9.000000000000,\r\n                \"taxAmount\": 1.620000000000,\r\n                \"matchingAmount\": 0E-12,\r\n                \"unMatchingAmount\": 10.620000000000,\r\n                \"matchingStatus\": \"O\",\r\n                \"code\": \"INV_STD\",\r\n                \"description\": \"Standard invoice sub-item\",\r\n                \"excludedFromDunning\": false,\r\n                \"orderNumber\": \"\",\r\n                \"paymentMethod\": \"DIRECTDEBIT\"\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/accountOperation/list?customerAccountCode=CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"accountOperation",
														"list"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "446dad81-b224-4081-82ac-f00b4bdad636",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 73);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4f6d469c-d771-47ac-95cb-b977f26b7d79",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Entity Customization",
							"item": [
								{
									"name": "Reference Entity",
									"item": [
										{
											"name": "Create CFT with reference entity",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "62345660-fd2b-4f8c-bf3d-aff2d909c401",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_RCF100\",\n    \"fieldType\": \"ENTITY\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"entityClazz\": \"org.meveo.model.crm.Customer\",\n    \"storageType\": \"SINGLE\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get reference entities - no wildcard",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86d8ebb2-8da5-489e-a91c-2bc841524906",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/listBusinessEntityForCFVByCode/?code={{entityPrefix}}_{{index}}_RCF100",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"listBusinessEntityForCFVByCode",
														""
													],
													"query": [
														{
															"key": "code",
															"value": "{{entityPrefix}}_{{index}}_RCF100"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get reference entities - with wildcard",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f9c2282-0c15-4534-9062-a89b306179e5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/listBusinessEntityForCFVByCode/?code={{entityPrefix}}_{{index}}_RCF100&wildcode=2",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"listBusinessEntityForCFVByCode",
														""
													],
													"query": [
														{
															"key": "code",
															"value": "{{entityPrefix}}_{{index}}_RCF100"
														},
														{
															"key": "wildcode",
															"value": "2"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "List per entity instance - el evaluated",
									"item": [
										{
											"name": "Create CFT Offer visible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f2712ffc-581d-44d9-9d14-071cf1110cf8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"VISIBLE\",\n    \"applicableOnEl\": \"#{entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT Offer hidden",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "729512f9-6da7-4e1c-8845-150ed67c06da",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_HIDDEN_100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_HIDDEN_100\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"HIDDEN\",\n    \"applicableOnEl\": \"#{!entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Query visible CFT",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc06b892-6ba8-4912-84c4-44407e43ef95",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.entityCustomization.field[0].code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.entityCustomization.field[0].description).to.deep.equal(jsonBody.description);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\":\"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"description\":\"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/entity/listELFiltered?appliesTo=OfferTemplate&entityCode={{baseEntityPrefix}}_OFFER1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"entity",
														"listELFiltered"
													],
													"query": [
														{
															"key": "appliesTo",
															"value": "OfferTemplate"
														},
														{
															"key": "entityCode",
															"value": "{{baseEntityPrefix}}_OFFER1"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "List entity action",
									"item": [
										{
											"name": "Create script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b02c8550-08f2-4378-92d8-77d02ed36652",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"executeAction\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;\\n    \\n    import java.util.Map;\\n    import java.math.BigDecimal;\\n    import org.meveo.admin.exception.BusinessException;\\n    import org.meveo.model.admin.User;\\n    import org.meveo.model.crm.Provider;\\n    import org.slf4j.Logger;\\n    import org.slf4j.LoggerFactory;\\n    import org.meveo.service.catalog.impl.OfferTemplateService;\\n    import org.meveo.model.catalog.OfferTemplate;\\n    \\n    public class ExecuteCustomAction_{{index}}_Script extends Script {\\n      \\n        private static final Logger log = LoggerFactory.getLogger(ExecuteCustomAction_{{index}}_Script.class);\\n        private OfferTemplateService offerTemplateService = (OfferTemplateService)getServiceInterface(\\\"OfferTemplateService\\\");\\n    \\n        public void execute(Map<String,Object> context) throws BusinessException{\\n            OfferTemplate offerTemplate = (OfferTemplate) context.get(Script.CONTEXT_ENTITY);\\n            offerTemplate.setDescription(\\\"action executed\\\");\\n        }\\n    }\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create custom action hidden",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7ff6e43b-b3ea-4c8a-892a-0a1eadccbca3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_HIDDEN\",\n    \"description\": \"ExecuteCustomAction_{{index}}_HIDDEN\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    },\n    \"applicableOnEl\": \"#{!entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create custom action visible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac43dcea-59f9-4699-b74d-174e3331cba1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"description\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    },\n    \"applicableOnEl\": \"#{entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "List visible CA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d923390-f2db-4ea3-8f58-333f4e38b3ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.entityCustomization.action[0].code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.entityCustomization.action[0].description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.entityCustomization.action[0].appliesTo).to.deep.equal(jsonBody.appliesTo);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"description\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"appliesTo\": \"OfferTemplate\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/entity/listELFiltered?appliesTo=OfferTemplate&entityCode={{baseEntityPrefix}}_OFFER1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"entity",
														"listELFiltered"
													],
													"query": [
														{
															"key": "appliesTo",
															"value": "OfferTemplate"
														},
														{
															"key": "entityCode",
															"value": "{{baseEntityPrefix}}_OFFER1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete custom action hidden",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d2957b28-417f-4e91-a610-0be433045944",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}_HIDDEN/OfferTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"ExecuteCustomAction_{{index}}_HIDDEN",
														"OfferTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete custom action visible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05a6c0b4-62ff-49a1-b3a4-4c868b810d61",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}_VISIBLE/OfferTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"ExecuteCustomAction_{{index}}_VISIBLE",
														"OfferTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ab8c347-8dee-4cb7-b117-7d6d07c40227",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.ExecuteCustomAction_{{index}}_Script",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Execute entity action",
									"item": [
										{
											"name": "Create script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2460b42d-9a2f-4440-9b80-26d10c886aba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"executeAction\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;\\n    \\n    import java.util.Map;\\n    import java.math.BigDecimal;\\n    import org.meveo.admin.exception.BusinessException;\\n    import org.meveo.model.admin.User;\\n    import org.meveo.model.crm.Provider;\\n    import org.slf4j.Logger;\\n    import org.slf4j.LoggerFactory;\\n    import org.meveo.service.catalog.impl.OfferTemplateService;\\n    import org.meveo.model.catalog.OfferTemplate;\\n    \\n    public class ExecuteCustomAction_{{index}}_Script extends Script {\\n      \\n        private static final Logger log = LoggerFactory.getLogger(ExecuteCustomAction_{{index}}_Script.class);\\n        private OfferTemplateService offerTemplateService = (OfferTemplateService)getServiceInterface(\\\"OfferTemplateService\\\");\\n    \\n        public void execute(Map<String,Object> context) throws BusinessException{\\n            OfferTemplate offerTemplate = (OfferTemplate) context.get(Script.CONTEXT_ENTITY);\\n            offerTemplate.setDescription(\\\"action executed\\\");\\n        }\\n    }\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create custom action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d904329-990b-414e-b5f7-a729d246970f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}\",\n    \"description\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f68e6039-0c95-4853-bb17-d58fee3ab4a0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"actionCode\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"entityCode\": \"{{baseEntityPrefix}}_OFFER3\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/entity/action/execute/ExecuteCustomAction_{{index}}/OfferTemplate/{{baseEntityPrefix}}_OFFER3",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"entity",
														"action",
														"execute",
														"ExecuteCustomAction_{{index}}",
														"OfferTemplate",
														"{{baseEntityPrefix}}_OFFER3"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da071b93-2475-4e4b-8bdf-eae4a85625d2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"    pm.expect(jsonData.offerTemplate.description).to.deep.equal(jsonBody.description);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"action executed\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{baseEntityPrefix}}_OFFER3",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{baseEntityPrefix}}_OFFER3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete custom action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99cd0570-d763-4117-85ba-0b8ccd2379da",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"actionCode\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}/OfferTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"ExecuteCustomAction_{{index}}",
														"OfferTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "424b2162-3ee6-4568-acdf-ea2ced2a93bf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"removeScriptInstanceRequest\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.ExecuteCustomAction_{{index}}_Script ",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script "
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "96ee2902-6b8d-4814-bf0f-ad70cb3cafa5",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 461);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90732701-0f80-48e1-a4e8-74a6b28aeee5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Entity Security",
							"item": [
								{
									"name": "Setup Data",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7095ea3a-5457-405b-a90d-43c29b3f0e5c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "04357c95-df82-4181-956f-2c2da06d0b6e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4a605b9-701c-442c-b68f-976296330dd0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af93635c-f8a7-4c5d-b073-47074be4fe06",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "819fd9a5-85ce-4300-b2f2-54897398e8b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SELLER_C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "12fa6369-fd24-409b-bc0d-7bff0fd1fca1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Account Hierarchy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ffdb991-bdd1-4673-af55-9379e9c6b900",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellers\": {\n        \"seller\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n                \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n                \"currencyCode\": \"EUR\",\n                \"countryCode\": \"FR\",\n                \"languageCode\": \"FRA\",\n                \"parentSeller\": \"MAIN_SELLER\",\n                \"customers\": {\n                    \"customer\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n                            \"externalRef1\": \"1\",\n                            \"externalRef2\": \"1\",\n                            \"name\": {\n                                \"title\": \"MR\",\n                                \"firstName\": \"firstName\",\n                                \"lastName\": \"lastName\"\n                            },\n                            \"address\": {\n                                \"address1\": \"address1\",\n                                \"address2\": \"address2\",\n                                \"address3\": \"address3\",\n                                \"zipCode\": \"75001\",\n                                \"city\": \"Tunis\",\n                                \"country\": \"TN\"\n                            },\n                            \"customerCategory\": \"CLIENT\",\n                            \"customerBrand\": \"DEFAULT\",\n                            \"mandateIdentification\": \"M1\",\n                            \"mandateDate\": \"2016-02-28\",\n                            \"contactInformation\": {\n                                \"email\": \"{{entityPrefix}}@manaty.net\",\n                                \"phone\": \"1234\",\n                                \"mobile\": \"092152154716\",\n                                \"fax\": \"1234\"\n                            },\n                            \"customerAccounts\": {\n                                \"customerAccount\": [\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA1\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA2\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA3\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA2\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA2\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA4\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA4\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA5\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA5\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA6\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA6\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA3\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA3\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA7\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA7\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA8\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA8\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA9\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA9\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA2\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA2\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA4\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA4\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA11\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA11\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA12\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA12\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA13\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA13\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA5\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA5\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA14\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA14\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA15\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA15\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA16\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA16\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA6\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA6\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA17\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA17\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA18\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA18\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA19\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA19\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA3\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA3\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA7\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA7\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA21\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA21\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA22\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA22\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA23\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA23\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA8\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA8\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA24\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA24\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA25\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA25\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA26\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA26\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA9\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA9\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA27\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA27\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA28\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA28\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA29\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA29\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n                \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n                \"currencyCode\": \"USD\",\n                \"countryCode\": \"US\",\n                \"languageCode\": \"ENG\",\n                \"parentSeller\": \"MAIN_SELLER\",\n                \"customers\": {\n                    \"customer\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n                            \"externalRef1\": \"1\",\n                            \"externalRef2\": \"1\",\n                            \"name\": {\n                                \"title\": \"MR\",\n                                \"firstName\": \"firstName\",\n                                \"lastName\": \"lastName\"\n                            },\n                            \"address\": {\n                                \"address1\": \"address1\",\n                                \"address2\": \"address2\",\n                                \"address3\": \"address3\",\n                                \"zipCode\": \"75001\",\n                                \"city\": \"Tunis\",\n                                \"country\": \"TN\"\n                            },\n                            \"customerCategory\": \"CLIENT\",\n                            \"customerBrand\": \"DEFAULT\",\n                            \"mandateIdentification\": \"M1\",\n                            \"mandateDate\": \"2016-02-28\",\n                            \"contactInformation\": {\n                                \"email\": \"{{entityPrefix}}@manaty.net\",\n                                \"phone\": \"1234\",\n                                \"mobile\": \"092152154716\",\n                                \"fax\": \"1234\"\n                            },\n                            \"customerAccounts\": {\n                                \"customerAccount\": [\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB1\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB2\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB3\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB2\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB2\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB4\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB4\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB5\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB5\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB6\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB6\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB3\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB3\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB7\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB7\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB8\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB8\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB9\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB9\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB2\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB2\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB4\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB4\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB11\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB11\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB12\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB12\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB13\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB13\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB5\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB5\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB14\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB14\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB15\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB15\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB16\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB16\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB6\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB6\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB17\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB17\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB18\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB18\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB19\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB19\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB3\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB3\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB7\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB7\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB21\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB21\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB22\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB22\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB23\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB23\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB8\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB8\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB24\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB24\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB25\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB25\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB26\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB26\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB9\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB9\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB27\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB27\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB28\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB28\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB29\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB29\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/customerHierarchyUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"customerHierarchyUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create UserHierarchyLevels",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c28536a5-b71e-4397-831c-4cf3a2d368e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_Description1\",\n    \"orderLevel\": \"1\",\n    \"userHierarchyLevel\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2\",\n            \"description\": \"{{entityPrefix}}_{{index}}_Description 2\",\n            \"orderLevel\": \"1\",\n            \"userHierarchyLevel\": [\n                {\n                    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2_1\",\n                    \"description\": \"{{entityPrefix}}_{{index}}_Description 21\",\n                    \"orderLevel\": \"1\"\n                },\n                {\n                    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2_2\",\n                    \"description\": \"{{entityPrefix}}_{{index}}_Description 22\",\n                    \"orderLevel\": \"2\"\n                }\n            ]\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_3\",\n            \"description\": \"{{entityPrefix}}_{{index}}_Description 3\",\n            \"orderLevel\": \"2\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/hierarchy/userGroupLevel",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"hierarchy",
														"userGroupLevel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d50f43f-ab73-4765-af15-33446dbe962d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level1\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 1\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_1\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de0880ae-5c36-443b-8823-a1707c64977e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level2\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 2.1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0fd73c32-293f-40ac-b7b9-a68a6d232340",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level21\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2.1\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2_1\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 2.2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4d4c337-c2f6-4acd-a37b-8116635fa1ff",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level22\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2.2\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2_2\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "04e5cd17-eda8-4396-8918-c01871ead95d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level3\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n      \"administrateur\"\n    ],\n    \"firstName\": \"Level 3\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_3\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create UserRole with userSelfManagement permission",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26772f76-c7fa-4ab0-a624-f70b67df2b56",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{entityPrefix}}_{{index}}_ROLE_SELF_USER\",\n    \"description\": \"{{entityPrefix}}_{{index}}_ROLE_SELF_USER\",\n    \"permission\": [\n      {\n        \"permission\": \"userSelfManagement\",\n        \"name\": \"User Self Management\"\n      }\n    ]\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - no seller",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "19310604-a9bf-4e60-99ce-7e29366ec39b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - seller A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c3a6e74-05fa-43fb-8f1f-26ac37019f3b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_A\"\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - seller B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a90f547-831b-4702-8cda-b8a9e96e8b04",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_B\"\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - seller C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b15826c4-ede6-4bd8-bb74-d87baee2c5df",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_C\"\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - seller A,B,C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3d27c79-3969-4eb3-b138-44a63382ae53",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_D\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_A\",\n        \"{{entityPrefix}}_{{index}}_SELLER_B\",\n        \"{{entityPrefix}}_{{index}}_SELLER_C\"\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set securedEntities=true - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a241370c-1eb6-4c2a-9c15-b4bcbb66062a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"property\": \"secured.entities.enabled\",\n    \"value\": \"true\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Seller Tests",
									"item": [
										{
											"name": "Restore User to default.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a5a0d578-27ee-4835-8a1a-f798557fe954",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "51613381-02d1-4ad1-b925-7e82272d5d21",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82869c4f-c42e-4fa0-b1e8-fab30773c5d2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to MAIN_SELLER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2d57edb2-7866-423b-97e4-7470a9d7fa96",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"MAIN_SELLER\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f3a053d-5f1b-4161-aec6-eba3ac2fe799",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d165641-0af6-4d04-a889-f25008e50a31",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "17c1b900-fece-40b7-983a-c49b080da9c1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still accessible.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "351fae62-98ec-4954-b329-0c67e5506801",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c87abe5-7a3d-44a7-9766-24d2b067c2c3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller MAIN_SELLER not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7bd83c62-ee74-46e6-b646-dd8a3e8aa895",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode=MAIN_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "MAIN_SELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "17585a1c-fc9a-447a-9b73-94a9650e1984",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9489d4a2-a933-4e16-93ae-e41b2b5b0f4b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"-description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f712ff71-609f-4401-9f6c-8fd86ced1722",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller MAIN_SELLER still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1e087feb-0dd9-4c57-ae2c-8f2f12b6337c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode=MAIN_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "MAIN_SELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "52f36e3c-47d1-4752-9ad0-44f030e3d153",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "373307d5-0ab3-4d84-aaa6-1addac9bab6f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fecbbae3-b7c2-4ddf-8edd-7dc7006eb360",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cdc36078-9287-4c03-a8e3-c79e62e053f4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7caaa39b-7bbc-4f1a-ae2d-9e94f1e19ee7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\n        \n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6fd4b1ac-6197-4b9e-81b9-c177c593b837",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff112257-241e-4159-a277-036aca566bc9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Customer with Filter CUSTA is accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ce1e6869-f40e-446f-8c46-835eb09274f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(1);",
															"    pm.expect(jsonData.customers.customer[0].code).to.deep.equal(jsonBody.customer[0].code);",
															"    pm.expect(jsonData.customers.customer[0].description).to.deep.equal(jsonBody.customer[0].description);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customer\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"customerAccounts\": {\n                \"customerAccount\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTA|seller:{{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"list"
													],
													"query": [
														{
															"key": "query",
															"value": "code:{{entityPrefix}}_{{index}}_CUSTA|seller:{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Customer with Filter CUSTB not accessible.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f61f9d7-1ff5-409f-aed2-e65518b94b38",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customer\": [\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"list"
													],
													"query": [
														{
															"key": "query",
															"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7ec213ce-eb1f-438c-8722-a9042e3f4bc9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_A\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47ec846a-30f0-4810-b392-6eaa6f46d6fd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTB only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "316791f6-9570-4949-b732-45f5b06c43cd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a63a118f-042b-4319-a23b-7ee13ad5fee8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d721fe3-21d6-46e3-aa80-3f0638684f0c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ab21bf1-fef3-47f4-9303-a1ac919e017b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_A\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ce07a61b-fe0d-4b1d-b151-e0ca4d29a705",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Customer with Filter CUSTA not accessible.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6348af7e-ff88-461c-bede-d2f8b73ee37f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customer\": [\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"list"
													],
													"query": [
														{
															"key": "query",
															"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Customer with Filter CUSTB is accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ad73818-b18f-4f5f-8529-88fccd0eff59",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(1);",
															"    pm.expect(jsonData.customers.customer[0].code).to.deep.equal(jsonBody.customer[0].code);",
															"    pm.expect(jsonData.customers.customer[0].description).to.deep.equal(jsonBody.customer[0].description);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customer\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"customerAccounts\": {\n                \"customerAccount\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"list"
													],
													"query": [
														{
															"key": "query",
															"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a55115aa-d4a1-46f0-bb21-2f6b542d24e8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer Account Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "560aab7a-ed0c-4b0b-af7a-1338e5b46fa6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2bfe8302-40ab-4d6e-9c73-d2762dfe7b8c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "31c436ca-c51f-441c-b9fb-332ab1bda0ec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8e6ce2ab-c19e-4d73-ac09-b35f67086943",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a085f6e4-8efd-4e72-a8ab-5d675ee4bf02",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d58e66f-10fc-4903-9b4c-364291a077c7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c53b1dd7-39f2-4088-a3d1-31e26704617d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47e73bbc-a4d6-4d5c-a54e-32a67176c006",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a038d07d-62e2-4b9d-b890-b277abe3bd81",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06f9e1e8-b39b-44be-85cf-a1fc3c076eba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8dd3126-4d0b-4d1e-9af2-424e65f40979",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9acaac3f-256f-47ef-9a33-8e4857435915",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53097259-3caf-4bc0-a13a-a9cf7bfff0bd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c41fd067-116e-421b-ade9-28f9f7d2e63c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "59d23839-cb78-4008-83a2-537c4cee2f5d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4ce93b4-1b55-4fca-96c0-84a3680c04f3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTB only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa78401b-d6ca-4996-a905-d6135ad7d598",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ea6606a-2926-47a0-b150-7c913f08a693",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "159ff11c-6e32-41d0-b61e-07b79bc0396f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "19ac42e0-c57b-4b46-bb98-eb36f241df95",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "047f6e6b-5dee-475a-b1fd-f64fa7c8daf9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "282821df-6932-4629-8301-4a77a6719d3b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a9f94df9-6779-482f-8aec-b3e55bd96f7b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac8ca325-ed9e-492a-a128-7b52359331ef",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d13f2d90-0a34-4040-aae3-a59e9f9fb8bd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4a4a55f-5148-4513-830b-6238e871789d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "368be330-7e56-4aeb-b9d6-08c2d92316b2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3219e00-59ef-4f3c-ba17-7750f13b9b14",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87e89129-201a-4867-ad98-3f8505548a23",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de4ed647-3e64-4419-b2aa-e39eefb505da",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b710871-48dd-455e-b7a6-34df89c5ac7f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b9d658b-f047-434d-9b51-369bc3ec9111",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "76f50aa3-7340-43d2-bca4-39dc76082be6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA and CAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aff295c7-2fab-4f29-95f3-b0a7c509206f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f09b63d4-c322-4996-aaa3-f9041164e087",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA with all its CustomerAccounts included",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "826605bf-e891-4f29-922f-bd03aa7b886e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a7f4ca95-2e03-4c52-9b2d-1829261ba9c4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Billing Account Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b18e55a2-edbf-496e-a016-aea21b8fdeaf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4eda6def-37d1-4ba0-99eb-aa0ca6b4aa31",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "399e8950-3672-46f5-90d2-ef7696ec8e6c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1678c150-f9f8-43cb-94d9-092a838dda56",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5170146d-3aaa-41f3-8a6f-19f68b206d9a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86de8af8-e915-4e15-8b84-290929e3a687",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e996d36c-64b5-4369-a200-00900426d297",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8bd5069-08f6-46e8-82db-bd6174ae68ec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cf2290ae-333d-4e0d-893b-0a71b2058205",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30514859-95fa-4db8-b37b-e9cf232b261a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09934b59-61f6-4925-b265-fcd506ace404",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "caeba3ab-d0d4-44e3-bc44-ceba25a3e8e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTB only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cb477732-c96a-48c8-b6f4-564d9f272d09",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "71619111-ffac-4d5a-9e84-9edece3eca68",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c2bcba8d-4925-499a-97c8-a438c5126b42",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14bf9de4-9edf-469b-b6ca-585312a5ed80",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ca4fc223-5e15-491b-907e-c5eb5d952909",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "102c09c9-cb09-4b4d-9815-e3fe5fae341e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ce4d6a7e-2c4b-47db-ad2c-63276f354f36",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c06bb770-7002-4bee-939f-2e2da3c19ab9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3de1e31-7c94-4323-83cb-a2b603154827",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "79220f8f-d403-48e6-83e8-25c3477d160e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "77d79818-425c-4078-abc4-9a1ba85e6c9e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "16e36f96-d1d3-4cf1-b220-fed01fe68556",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e973e5e4-a5c4-47b6-86ac-fbc1ea3df8b8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "32d4d201-7031-4a5a-9248-6135b258ce22",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "11e2f053-24f9-496c-9954-9a3ccc1a813e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5416b42f-69d2-45fb-bace-0311a775cb4c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "69e98b6e-4566-4315-8c73-1ae4e77f8043",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99bc423f-e1a7-4705-bb2c-701193e87ae2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15c16722-af97-4ed7-9b09-fed2d6abb4db",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33e854b7-89f8-4ff8-93ff-0765242d9f49",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d14b4bbe-7213-4d02-a4df-d1a9923ad03c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3982128d-afe3-485c-85e4-82e1faa8ef6f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8dd6e3a0-e464-4bd3-b0f9-82ee507d0731",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f31c6699-45ba-49e5-93ff-a03583a1e2f4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "663d9673-306e-448d-9eb1-1242f1350925",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b1087fb6-1337-4404-95e6-b5d16182cded",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "abfc9ac5-96ea-40ac-b626-3c2f333d3635",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 and BAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e57b0ab0-ddae-4849-9238-ecf437ff36aa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 with all its BillingAccounts included",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "27836275-6de8-4f7f-b147-8f207adc2c66",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a9b01eb-d566-4d00-832c-a4256931faa2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "User Account Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2cecb98a-f05a-4091-a46a-a9f518328908",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d5ad1f53-7d91-4b35-85c0-c28bea961f0a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3d6d22d3-acf8-4785-b86d-38b185b1becc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82f77aaa-39f1-4824-a1c8-c559792be2ee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53347dcf-b370-4f6c-a1f7-acb90a48ed1b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ec437da5-a345-45b6-8b04-7bffa130c8c7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c60e05bc-5fed-4ae1-b101-0b3c2a06abe4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f8c1c7a-9aea-4484-bfc3-56febfb2821e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0e8ea112-46f0-4d1c-8a25-7e864778bf57",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8a7eadba-194e-404d-b99b-9ab0a29892b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1a3ee476-4f32-4049-aa70-f8a9c5a1d217",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8421d454-c8d6-4401-98f9-4de0996073e6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTB only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "80fc3566-cfc1-407f-b1c3-a373c5402b17",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "24f22984-4856-4410-9a16-63dccbd19c54",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e52c7f80-2fa9-452c-8312-9e2a05244e7c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3fa52f77-7fe2-4f71-a815-a96278f9c84f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cd7bd949-0883-4e14-8cab-fb86bc3465ef",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8340e14-6a25-4ff0-b0f3-83fa411b7da3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 only Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e28b58c9-8e59-4fb8-a1aa-c1fa888080ac",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "46090197-1c66-4b90-8554-446e88e935c5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bc22258c-73ae-4bce-8aad-07653f063a1c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d6f2c97-64fa-4201-9304-2a2c078c6682",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e9dc236-aa80-4960-a10d-8aba2c602933",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06958d1a-5f53-4159-93a1-10f34424944b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ce4af4d1-c9b9-4119-869a-29b7bda56136",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c58e1a3f-b9f8-47e1-811e-bfb4afbba6d0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c148d644-0b1a-4e3f-96f0-b594cdaa5261",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to UAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "78053f21-3545-4581-be11-76af4ec77a07",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 now accessible again...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fe1bef68-5361-4b1e-b96e-d924ac5b65a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible again...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d362e1d6-40ef-4617-943a-51357481f763",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ef999f0-5732-4952-8de6-b4d55cc565f9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7cf67691-13ce-49d7-b1de-3942fa6e7aa6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f3f200d-6c9b-400d-8c25-d0bbec8006d9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c20cd406-9de5-49b2-b265-d5be2bf0484e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "79506520-75cd-43ac-8741-11787665507b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3d078e1-7fbc-4cb6-9ae2-d5019c55e7bf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c6bcba84-895f-49f0-a872-a3036eb540b1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "54db6533-23ce-4930-a78a-81af646b1bc2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to UAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8ae70d7d-897b-42f1-a09b-23cf5e8f1097",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible again...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e51ce4f3-7f9e-422f-b3df-9c445a4c15ec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible again...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41015cca-0023-4686-949e-125ccf51714f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "55eede2b-72c0-441d-b178-711f103e53b9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fff84b54-a5cf-477d-b6ae-f14652b2141d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "961133ca-5214-405d-8266-0ed6b6e5ddfe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89f79af2-879f-4bb9-8d61-97a4e79c4af2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e1afd34b-68dd-4edd-a031-05783062eaed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cb6781e3-36e5-4ab8-8daa-720636276919",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e1147388-8681-48ed-b38b-dad5d953f38d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14a25d1a-160b-4ff9-8161-ddce61f28e73",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAA1 and UAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "468e0154-478c-4b72-9bc3-4dd090cf9260",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 with all its UserAccounts included",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7df24a02-ac90-401d-99b3-7891d68963e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c81d160c-095c-45f0-b0e9-f9667b4f1276",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "AccountHierarchy API Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "84301a8c-e11a-448b-999c-ae7c4a926381",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4edc5687-9417-4728-b92f-7629a6e22794",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CRMAccountHierarchy fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bb45c4cf-eea8-455d-a11c-18e89dcf81db",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33fa6b04-3244-42df-98fa-8497009fc373",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CRMAccountHierarchy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "005939e7-deb4-4d00-b062-181fb938c397",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eabc819d-a955-4dc2-b949-fe7d02bc5784",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find CRMAccountHierarchy fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ed10dcfd-b0ba-4c81-b66d-a3606660435c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d71a2a65-8d5b-4596-ad7b-78012d7199c6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find CRMAccountHierarchy.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7b600218-cb97-4965-996d-eaf0e8adef0f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].billingAccounts.billingAccount[0].userAccounts.userAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"customerAccounts\": {\r\n        \"customerAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n                \"billingAccounts\": {\r\n                    \"billingAccount\": [\r\n                        {\r\n                            \"userAccounts\": {\r\n                                \"userAccount\": [\r\n                                    {\r\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6086e517-ff44-4d90-a33a-ae6585633db6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CRMAccountHierarchy fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eff0add1-b7d2-4863-b034-22674494b223",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"updateCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3a9c8d4-84f3-471d-8b45-60719de16ac2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CRMAccountHierarchy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2122226b-1781-466c-b99e-4fe5c4c487c2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"updateCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dcee14f4-03a1-4757-a0a4-d192a37b9f45",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find CRMAccountHierarchy fail.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "97ca1f35-00cc-4398-9f64-89b66cd10b46",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b7d46a21-2548-4f66-abd8-ded79ee8cef1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find CRMAccountHierarchy..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc5d9a1c-e9f6-41d0-913b-a11408a83837",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].billingAccounts.billingAccount[0].userAccounts.userAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"customerAccounts\": {\r\n        \"customerAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n                \"billingAccounts\": {\r\n                    \"billingAccount\": [\r\n                        {\r\n                            \"userAccounts\": {\r\n                                \"userAccount\": [\r\n                                    {\r\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CRM-CUST only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7533fbeb-3b77-498b-ac6c-17badb3f045f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CRMAccountHierarchy.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bac0f69a-6237-42a1-ad98-9508896a7b8a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"updateCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer CRM_CUST",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eabe2995-b150-4233-98c5-80cbb8a68b6d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"M\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_18@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_18@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{entityPrefix}}_{{index}}_CRM-CUST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b77c81de-e661-49e2-a203-b55ab9787baf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Offer templates",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6333d33-ec23-4144-8704-84e0baf97ef5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates - show all",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2b7b7e4b-3bdf-4b0b-9f2f-35cc222c6e41",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													],
													"query": [
														{
															"key": "limit",
															"value": "500"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33658661-47b6-4aee-a6b6-7fdc47654472",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates - show A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6a19e6a6-fdbc-4cd1-b6a5-c324a4a2a2bc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													],
													"query": [
														{
															"key": "limit",
															"value": "500"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - no seller",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8cd17bf4-3229-4d8d-a311-57b01a1fefd8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\",\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_NOSELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_NOSELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff27dd4a-c0db-4e50-90cb-666b1198f2f5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\",\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - B fails",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d1b734aa-9183-4a7c-9824-f73b2f74c517",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "505fbc95-ae6c-4d2d-acd9-854dbe00a9b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates - show B and C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "471840c2-1cfd-4967-aa71-c21ae454a6d0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													],
													"query": [
														{
															"key": "limit",
															"value": "500"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - B 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9ecfc39-c5c8-4589-9446-2748a417f44e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1f8228cb-affe-4e53-859d-2c2e241485eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - A  fails",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "43eb4fcf-280d-4d33-944d-d75a074a6024",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_C only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47cc5c0c-7ffc-40aa-bb3d-cd65c720f3c2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates - show C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8bddf8a-b658-4d05-a666-c5ec7d627b16",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													],
													"query": [
														{
															"key": "limit",
															"value": "500"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - C 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e42b1673-e61d-45f4-ac06-3dedf56add83",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - A  fails 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4c09a21-1828-4d02-8bf9-2f5291818836",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - B fails 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "63a9a578-458d-4df4-a14f-7bd156a1a7c6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d64b07c-3841-452e-8022-712d19cf3cf3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates by filter - show only C and A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "27e3e206-db1b-4124-8016-155679ff9c56",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    var jsonData = pm.response.json();",
															"",
															"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(3);",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_D\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"filters\": {\r\n        \"inList sellers\": \"{{entityPrefix}}_{{index}}_SELLER_A,{{entityPrefix}}_{{index}}_SELLER_C\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates by filter - do not show C and A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "78a55473-55a2-4975-9d6f-69bbe72a81cd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    var jsonData = pm.response.json();",
															"",
															"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(2);",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_D\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filters\": {\n        \"not-inList sellers\": \"{{entityPrefix}}_{{index}}_SELLER_A,{{entityPrefix}}_{{index}}_SELLER_C\",\n        \"like code\": \"{{entityPrefix}}_{{index}}_*\"\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Cleanup Data",
									"item": [
										{
											"name": "Set securedEntities=false",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c64ab03-ce33-40bd-834c-e68c30f9ae43",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"property\": \"secured.entities.enabled\",\n    \"value\": \"false\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer CUSTA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "60722d26-be2e-4565-bcfd-9b565cb73116",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{entityPrefix}}_{{index}}_CUSTA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Deleted Customer CUSTA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "93b37b03-4f3e-4a6d-9753-ab3b2f151520",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Customer with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUSTA does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer CUSTB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6cfdc1ad-0899-434f-b8e5-976e0d79c45b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{entityPrefix}}_{{index}}_CUSTB"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Deleted Customer CUSTB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f4663d5b-9756-4a2f-81e4-0a8b7a7cc5cc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Customer with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUSTB does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - no seller",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "331c7013-1527-4ab9-8500-fb025a654735",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_NOSELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_NOSELLER"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d413759-5165-48ee-bd9c-b1ac01972cd3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f5af15b2-ad6f-4386-8ae8-eee6fdf6171c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2e6325e3-c854-4ce1-9cd8-3369923238b0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - D",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2a00aa83-32d5-45b2-b920-d18ff7a59895",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_D",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_SELLER_D"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "80838c41-8291-4908-817f-92b9d537f147",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{entityPrefix}}_{{index}}_SELLER_A"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find deleted Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38cb582a-10c0-4aa7-b1dc-0ad117bcd88a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_A does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller SELLER_C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "714bebae-bda3-418d-9740-c7511cc8dba4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{entityPrefix}}_{{index}}_SELLER_C"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "44ea05f5-e8c0-45d0-8c67-bd45189719f1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{entityPrefix}}_{{index}}_SELLER_B"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find deleted Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8fb8960b-c7d4-4d2b-9a50-818e75da186c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_B does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find deleted Seller SELLER_C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2327ac4-bf27-49c1-9a8a-1891c72906bc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_C does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ef6d9e2-a133-44bb-b809-4570ce455ae3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b8537809-c5da-4591-9562-6aa32a018dbc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level1\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "102db74b-3a6e-4e86-95c2-ca85ac6292f9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level2\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level2",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level2"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 2.1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c65bf04c-f1ad-4c47-8e45-2a748b7a715b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql()",
															"    ;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level21\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level21",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level21"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 2.2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1601877-096f-436c-855a-d41f4524c56d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level22\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level22",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level22"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2be8bb0a-7e83-44d1-bcbc-d9b017091d8b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level3\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level3",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level3"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove UserHierarchyLevel 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6dc44833-4072-47be-83d3-9de85b272e99",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hierarchyLevelCode\": \"{{entityPrefix}}_{{index}}_LEVEL_1\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/hierarchy/userGroupLevel/{{entityPrefix}}_{{index}}_LEVEL_1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"hierarchy",
														"userGroupLevel",
														"{{entityPrefix}}_{{index}}_LEVEL_1"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3cfbbefc-ba28-41ec-8b96-7c7bd663ef78",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 34);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8b8ac33a-1cb6-44eb-bc5a-84abcf276850",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Workflow executions",
							"item": [
								{
									"name": "Test data",
									"item": [
										{
											"name": "Create customer account for WF",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e567a8e1-9d2d-41e0-9c79-60c8db4126ae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"description\": \"testWF_CA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}@manaty.net\",\r\n        \"phone\": \"00123456789\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"mandateIdentification\": \"1234569548\",\r\n    \"mandateDate\": \"2016-03-10\",\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"status\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ScriptInstance for Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9042ad5-3f31-4cbd-af9f-bb8920fd7685",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"org.meveo.service.script.TheAction\",\r\n    \"description\": \"The Action Script\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\nimport java.util.Map;\\nimport java.math.BigDecimal;\\nimport org.meveo.admin.exception.BusinessException;\\nimport org.meveo.model.admin.User;\\nimport org.meveo.model.crm.Provider;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\npublic class TheAction extends Script {  \\n  private static final Logger log = LoggerFactory.getLogger(TheAction.class);\\npublic void execute(Map<String,Object> context) throws BusinessException{\\nlog.debug(\\\"\\\\nTheAction Execution\\\\n\\\");\\ncontext.put(Script.RESULT_VALUE, \\\"A string response\\\");\\n}\\n}\",\r\n    \"executionRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ],\r\n    \"sourcingRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Dunning WFType Script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87e470e4-17d2-401e-acdc-0f82538dba53",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"org.meveo.service.script.DunningWFTypeScript\",\r\n    \"description\": \"DunningWFTypeScript\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\n\\nimport java.util.ArrayList;\\nimport java.util.Date;\\nimport java.util.List;\\n\\nimport org.meveo.model.admin.User;\\nimport org.meveo.model.payments.CustomerAccount;\\nimport org.meveo.model.payments.DunningLevelEnum;\\nimport org.meveo.service.script.wf.WFTypeScript;\\n\\n\\npublic class DunningWFTypeScript extends WFTypeScript<CustomerAccount>{\\n\\n  public DunningWFTypeScript() {    \\n  }\\n  \\n  public DunningWFTypeScript(CustomerAccount e) {\\n    super(e);\\n  }\\n  @Override\\n  public List<String> getStatusList() {    \\n    List<String> values = new ArrayList<String>();\\n    for (DunningLevelEnum dunningLevelEnum : DunningLevelEnum.values()) {\\n      values.add(dunningLevelEnum.name());\\n    }\\n    return values;\\n  }\\n\\n  @Override\\n  public void changeStatus(String newStatus) {\\n    entity.setDunningLevel(DunningLevelEnum.valueOf(newStatus));\\n    entity.setDateDunningLevel(new Date());\\n  }\\n\\n  @Override\\n  public String getActualStatus() {    \\n    return entity.getDunningLevel().name();\\n  }\\n}\",\r\n    \"executionRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ],\r\n    \"sourcingRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Workflow with natif WFType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b553a5d2-17e4-4afc-9794-6993866cba39",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_DunningWorkflow\",\r\n    \"description\": \"Dunning workflow from class\",\r\n    \"enableHistory\": \"true\",\r\n    \"targetEntityClass\": \"org.meveo.admin.wf.types.DunningWF\",\r\n    \"initStatus\": \"R0\",\r\n    \"transition\": [\r\n        {\r\n            \"fromStatus\": \"R0\",\r\n            \"toStatus\": \"R1\",\r\n            \"conditionEl\": \"#{true}\",\r\n            \"description\": \"DESCRIPTION to R1\",\r\n            \"actionScriptCode\": \"#{mv:executeScript(entity,\\\"org.meveo.service.script.TheAction\\\",null)}\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Workflow with runTime WFType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "804370ce-3873-44ba-ad4c-af418a5c8e14",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_DunningRunTimeWF\",\r\n    \"description\": \"Dunning workflow from script\",\r\n    \"enableHistory\": \"true\",\r\n    \"targetEntityClass\": \"org.meveo.service.script.DunningWFTypeScript\",\r\n    \"initStatus\": \"R0\",\r\n    \"transition\": [\r\n        {\r\n            \"fromStatus\": \"R1\",\r\n            \"toStatus\": \"R2\",\r\n            \"conditionEl\": \"#{true}\",\r\n            \"description\": \"DESCRIPTION to R2\",\r\n            \"actionScriptCode\": \"#{mv:executeScript(entity,\\\"org.meveo.service.script.TheAction\\\",null)}\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "find & execute",
									"item": [
										{
											"name": "find workflow by entity",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7de96a5d-8cdd-4965-a2d3-ad64e24590cb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/findByEntity?baseEntityName=org.meveo.model.payments.CustomerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"findByEntity"
													],
													"query": [
														{
															"key": "baseEntityName",
															"value": "org.meveo.model.payments.CustomerAccount"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute WF - NatitType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "71f71ab9-25d4-4518-88cf-ecca4c082241",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"baseEntityName\": \"org.meveo.model.payments.CustomerAccount\",\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"workflowCode\": \"{{baseEntityPrefix}}_DunningWorkflow\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/execute?baseEntityName=org.meveo.model.payments.CustomerAccount&entityInstanceCode=RS_FULL_{{index}}_WF_CA&workflowCode={{entityPrefix}}_DunningWorkflow",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"execute"
													],
													"query": [
														{
															"key": "baseEntityName",
															"value": "org.meveo.model.payments.CustomerAccount"
														},
														{
															"key": "entityInstanceCode",
															"value": "RS_FULL_{{index}}_WF_CA"
														},
														{
															"key": "workflowCode",
															"value": "{{entityPrefix}}_DunningWorkflow"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute WF - scriptType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c605c38-9b13-4d33-968b-c26e5755e4f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"baseEntityName\": \"org.meveo.model.payments.CustomerAccount\",\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"workflowCode\": \"{{baseEntityPrefix}}_DunningRunTimeWF\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/execute?baseEntityName=org.meveo.model.payments.CustomerAccount&entityInstanceCode=RS_FULL_{{index}}_WF_CA&workflowCode={{entityPrefix}}_DunningRunTimeWF",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"execute"
													],
													"query": [
														{
															"key": "baseEntityName",
															"value": "org.meveo.model.payments.CustomerAccount"
														},
														{
															"key": "entityInstanceCode",
															"value": "RS_FULL_{{index}}_WF_CA"
														},
														{
															"key": "workflowCode",
															"value": "{{entityPrefix}}_DunningRunTimeWF"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "wf history",
									"item": [
										{
											"name": "findHistory-no criteria",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1044d2a9-ff5d-4730-8c60-d32f7468535e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/history",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"history"
													]
												}
											},
											"response": []
										},
										{
											"name": "findHistory-with criteria",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "24cb435f-fbbd-42ab-9718-09bf7cfd84f8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"fromStatus\": \"R1\",\r\n    \"toStatus\": \"R2\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode=RS_FULL_{{index}}_WF_CA&fromStatus=R1&toStatus=R2",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"history"
													],
													"query": [
														{
															"key": "entityInstanceCode",
															"value": "RS_FULL_{{index}}_WF_CA"
														},
														{
															"key": "fromStatus",
															"value": "R1"
														},
														{
															"key": "toStatus",
															"value": "R2"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "10c4bc57-1c94-4832-ac60-f6a48b5aa2f1",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 34);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "175f6a29-2228-4382-9656-cbd989a8b825",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"description": "# FullCRUD\r\n\r\nHere are migrated scenarios from Soap FullCRUD.\r\n\r\n## Table\r\n\r\n| Scenarios                        | State       |\r\n|----------------------------------|-------------|\r\n| Setup base data                  | OK          |\r\n| Service workflow                 | OK          |\r\n| Subscription workflow            | OK          |\r\n| Subscription with Inherited CF   | OK          |\r\n| EL expression tests              | OK          |\r\n| Custom Fields in Filters         | todo        |\r\n| Entity Customization             | OK          |\r\n| Entity Security                  | OK          |\r\n| Workflow executions              | OK          |\r\n| Filter search and invoicing      | todo        |\r\n| Inbound Request Tests            | todo        |\r\n| Jobs                             | todo        |\r\n| Reporting                        | todo        |\r\n| GDPR Erasure                     | todo        |\r\n| Remove base data                 | todo        |\r\n| Banking Calendar and Date status | todo        |",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b11d2592-158c-4964-9c99-904a41087b74",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "046537db-9506-44ec-a878-e1fe3911d5fc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "In Progress",
			"item": [
				{
					"name": "Scenarios",
					"item": [
						{
							"name": "Custom Fields in Filters",
							"item": [
								{
									"name": "Setup Test Data",
									"item": [
										{
											"name": "Create Test Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fbd70f1c-7cb3-407f-b763-fae4d268c695",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#baseEntityPrefix}_TEST_SUB\",\n    \"-description\": \"${#Project#baseEntityPrefix}_TEST_SUB\",\n    \"userAccount\": \"${#Project#baseEntityPrefix}_UA\",\n    \"offerTemplate\": \"${#Project#baseEntityPrefix}_OFFER1\",\n    \"subscriptionDate\": \"2016-06-01\",\n    \"endAgreementDate\": \"2016-06-30\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2f16046a-9faa-43f4-a7f4-af9aab00d81a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#baseEntityPrefix}_TEST_ACCP\",\n    \"subscription\": \"${#Project#baseEntityPrefix}_TEST_SUB\",\n    \"startDate\": \"2016-06-01\",\n    \"endDate\": \"2016-06-30\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3871baf8-a391-4332-9478-a8a7386f29a6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#baseEntityPrefix}_TEST_BA\",\n    \"-description\": \"${#Project#baseEntityPrefix}_TEST_BA\",\n    \"externalRef1\": \"EXTREF1\",\n    \"externalRef2\": \"EXTREF2\",\n    \"name\": {\n      \"title\": \"MR\",\n      \"firstName\": \"ABC123\",\n      \"lastName\": \"DEF456\"\n    },\n    \"address\": {\n      \"address1\": \"adress1\",\n      \"address2\": \"address2\",\n      \"address3\": \"adress3\",\n      \"zipCode\": \"21000\",\n      \"city\": \"Dijon\",\n      \"country\": \"FR\"\n    },\n    \"customerAccount\": \"${#Project#baseEntityPrefix}_CA\",\n    \"billingCycle\": \"CYC_INV_MT_1\",\n    \"country\": \"FR\",\n    \"language\": \"FRA\",\n    \"nextInvoiceDate\": \"2015-04-01\",\n    \"subscriptionDate\": \"2015-01-01\",\n    \"electronicBilling\": \"true\",\n    \"email\": \"ABC123@manaty.net\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a7f69cb5-69cb-4d62-9010-eb3109e7fe85",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#baseEntityPrefix}_TEST_REC1\",\n    \"-description\": \"${#Project#baseEntityPrefix}_TEST_REC1\",\n    \"eventCode\": \"${#Project#baseEntityPrefix}_REC1\",\n    \"amountWithoutTax\": \"10\",\n    \"amountWithTax\": \"12\",\n    \"startRatingDate\": \"2016-06-01\",\n    \"endRatingDate\": \"2016-06-30\",\n    \"priority\": \"1\",\n    \"minSubscriptionAgeInMonth\": \"6\",\n    \"maxSubscriptionAgeInMonth\": \"12\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan OneShot",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5ff79602-fef6-4b64-9734-0bb80570fe95",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#baseEntityPrefix}_TEST_OS1\",\n    \"-description\": \"${#Project#baseEntityPrefix}_TEST_OS1\",\n    \"eventCode\": \"${#Project#baseEntityPrefix}_OS1\",\n    \"amountWithoutTax\": \"11\",\n    \"amountWithTax\": \"15\",\n    \"startRatingDate\": \"2016-06-01\",\n    \"endRatingDate\": \"2016-06-15\",\n    \"priority\": \"1\",\n    \"minSubscriptionAgeInMonth\": \"6\",\n    \"maxSubscriptionAgeInMonth\": \"12\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan usage",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fc8d4bb-4e21-426d-83b1-a83442c1ac85",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#baseEntityPrefix}_TEST_USAGE1\",\n    \"-description\": \"${#Project#baseEntityPrefix}_TEST_USAGE1\",\n    \"eventCode\": \"${#Project#baseEntityPrefix}_USAGE1\",\n    \"amountWithoutTax\": \"9\",\n    \"amountWithTax\": \"14\",\n    \"startRatingDate\": \"2016-06-15\",\n    \"endRatingDate\": \"2016-06-30\",\n    \"priority\": \"1\",\n    \"minSubscriptionAgeInMonth\": \"12\",\n    \"maxSubscriptionAgeInMonth\": \"24\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create recurring charge template",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b5799890-5db7-4d3f-93ca-ebc2a6d7830e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_REC100\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"calendar\": \"MONTHLY\",\n    \"durationTermInMonth\": \"10\",\n    \"taxClassCode\": \"${#Project#baseEntityPrefix}_taxClass\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Filters",
									"item": [
										{
											"name": "Create Access Filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c09fb371-7d62-4967-aac6-edfc20eb5852",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_Access\",\n    \"-description\": \"Subscription with Start and End Date\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.mediation.Access</targetEntity>\n\t\t\t    <alias>a</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>startDate</field>\n\t\t\t      <field>endDate</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>startDate</fieldName>\n\t\t\t\t\t\t        <operator>>=</operator>\n\t\t\t\t\t\t        <operand>cfDate:ACCESS_START_DATE</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t\t<primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>endDate</fieldName>\n\t\t\t\t\t\t        <operator><![CDATA[<=]]></operator>\n\t\t\t\t\t\t        <operand>cfDate:ACCESS_END_DATE</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>subscription</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfEntity:ACCESS_SUBSCRIPTION</operand>\n\t\t\t\t\t\t        <className>org.meveo.model.billing.Subscription</className>\n\t\t\t\t\t\t        <label>Subscription</label>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Filter - Rating date",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "07adde6e-c324-45cd-a339-f821f5b04e64",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_PricePlanMatrix\",\n    \"-description\": \"Start and End Rating Dates\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.catalog.PricePlanMatrix</targetEntity>\n\t\t\t    <alias>p</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>eventCode</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>startRatingDate</fieldName>\n\t\t\t\t\t\t        <operator>>=</operator>\n\t\t\t\t\t\t        <operand>cfDate:PRICE_PLAN_START_RATING_DATE</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t\t<primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>endRatingDate</fieldName>\n\t\t\t\t\t\t        <operator><![CDATA[<=]]></operator>\n\t\t\t\t\t\t        <operand>cfDate:PRICE_PLAN_END_RATING_DATE</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Filter by Code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86daec62-a37f-4cc6-89f9-c980189ce9e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_PricePlanMatrix_Code\",\n    \"-description\": \"Priceplan by code\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.catalog.PricePlanMatrix</targetEntity>\n\t\t\t    <alias>p</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>eventCode</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>code</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfString:PRICE_PLAN_CODE</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\t\t\t\t\t\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Filter by Amount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08269cbd-7b2d-4a81-80bf-8735aac5f1fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_PricePlanMatrix_Amount\",\n    \"-description\": \"Priceplan by code\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.catalog.PricePlanMatrix</targetEntity>\n\t\t\t    <alias>p</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>eventCode</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>amountWithoutTax</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfDecimal:AMOUNT</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\t\t\t\t\t\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Filter Age",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "63740e7a-7c08-4899-88ad-a02bf138a07e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_PricePlanMatrix_Age\",\n    \"-description\": \"PP by Age\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.catalog.PricePlanMatrix</targetEntity>\n\t\t\t    <alias>p</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>eventCode</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>minSubscriptionAgeInMonth</fieldName>\n\t\t\t\t\t\t        <operator>>=</operator>\n\t\t\t\t\t\t        <operand>cfLong:MIN_SUBSCR_AGE</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t\t<primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>maxSubscriptionAgeInMonth</fieldName>\n\t\t\t\t\t\t        <operator><![CDATA[<=]]></operator>\n\t\t\t\t\t\t        <operand>cfLong:MAX_SUBSCR_AGE</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account Filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0da09d0-b6ce-4583-8b21-bf350312e979",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_Billing_Account\",\n    \"-description\": \"Multi Fields\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.billing.BillingAccount</targetEntity>\n\t\t\t    <alias>ba</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>statusDate</field>\n\t\t\t      <field>email</field>\n                  <field>nextInvoiceDate</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"orCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_OR</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>statusDate</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfDate:BILLING_ACCOUNT_STATUS_DATE</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n                    \t<filterCondition class=\\\"orCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_OR</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t\t<primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>email</fieldName>\n\t\t\t\t\t\t        <operator>LIKE</operator>\n\t\t\t\t\t\t        <operand>cfString:BILLING_ACCOUNT_EMAIL</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t\t<filterCondition class=\\\"orCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_OR</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>customerAccount</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfEntity:BILLING_ACCOUNT_CUSTOMER_ACCOUNT</operand>\n\t\t\t\t\t\t        <className>org.meveo.model.payments.CustomerAccount</className>\n\t\t\t\t\t\t        <label>Customer Account</label>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n                    \t<filterCondition class=\\\"orCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_OR</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>brAmountWithTax</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfDecimal:BILLING_ACCOUNT_AMOUNT_WITH_TAX</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account Filter enum",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f0a2515-77d8-494d-8858-2995553b9dd0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_Billing_Account_Enum\",\n    \"-description\": \"Multi Fields\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.billing.BillingAccount</targetEntity>\n\t\t\t    <alias>ba</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>statusDate</field>\n\t\t\t      <field>email</field>\n                  <field>nextInvoiceDate</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"orCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_OR</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>paymentTerm</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfDate:PAYMENT_TERMS</operand>\n\t\t\t\t\t\t        <className>org.meveo.model.payments.PaymentTermEnum</className>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>                    \t\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring charge template Filter by Duration",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0560a021-54a6-4ef5-95cd-cc68e4b83a30",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_RCT_Duration\",\n    \"-description\": \"RCT by duration\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.catalog.RecurringChargeTemplate</targetEntity>\n\t\t\t    <alias>p</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>eventCode</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>durationTermInMonth</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfInteger:DURATION</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\t\t\t\t\t\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring charge template Filter by Prorata",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b2c06a18-feff-45ef-918f-ce6dbed65d4a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_RCT_Prorata\",\n    \"-description\": \"RCT by Prorata\",\n    \"shared\": \"false\",\n    \"inputXml\": \"<filter>\n            \t<primarySelector>\n\t\t\t    <targetEntity>org.meveo.model.catalog.RecurringChargeTemplate</targetEntity>\n\t\t\t    <alias>p</alias>\n\t\t\t    <displayFields>\n\t\t\t      <field>code</field>\n\t\t\t      <field>eventCode</field>\n\t\t\t    </displayFields>\n\t\t\t    <exportFields/>\n\t\t\t    <ignoreIfNotFoundForeignKeys/>\n\t\t\t  </primarySelector>\n\t\t\t  <secondarySelectors/>\n\t\t\t  <disabled>false</disabled>\n\t\t\t  <appendGeneratedCode>false</appendGeneratedCode>\n\t\t\t  <filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t    <filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t    <filterConditions>\n\t\t\t\t\t<filterCondition class=\\\"andCompositeFilterCondition\\\">\n\t\t\t\t\t\t<filterConditionType>COMPOSITE_AND</filterConditionType>\n\t\t\t\t\t\t<filterConditions>\n\t\t\t\t\t\t      <primitiveFilterCondition>\n\t\t\t\t\t\t        <filterConditionType>PRIMITIVE</filterConditionType>\n\t\t\t\t\t\t        <fieldName>subscriptionProrata</fieldName>\n\t\t\t\t\t\t        <operator>=</operator>\n\t\t\t\t\t\t        <operand>cfBoolean:SUBSCRIPTION_PRORATA</operand>\n\t\t\t\t\t\t      </primitiveFilterCondition>\n\t\t\t\t\t\t</filterConditions>\n\t\t\t\t\t</filterCondition>\t\t\t\t\t\n\t\t\t\t</filterConditions>\n\t\t\t  </filterCondition>\n\t\t  </filter>\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Search with Filters",
									"item": [
										{
											"name": "Search PP by date - date",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "83725901-a8cd-4ceb-b210-0bd964ec56ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_PricePlanMatrix\",\n    \"parsererror\": {\n      \"-style\": \"display: block; white-space: pre; border: 2px solid #c77; padding: 0 1em 0 1em; margin: 1em; background-color: #fdd; color: black\",\n      \"h3\": [\n        \"This page contains the following errors:\",\n        \"Below is a rendering of the page up to the first error.\"\n      ],\n      \"div\": {\n        \"-style\": \"font-family:monospace;font-size:12px\",\n        \"#text\": \"error on line 3 at column 10: Extra content at the end of the document\n\"\n      }\n    }\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search PP by code - string",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "69d7ab6d-e249-4ba0-a4a5-f2e03ffbd902",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_PricePlanMatrix_Code\",\n    \"parsererror\": {\n      \"-style\": \"display: block; white-space: pre; border: 2px solid #c77; padding: 0 1em 0 1em; margin: 1em; background-color: #fdd; color: black\",\n      \"h3\": [\n        \"This page contains the following errors:\",\n        \"Below is a rendering of the page up to the first error.\"\n      ],\n      \"div\": {\n        \"-style\": \"font-family:monospace;font-size:12px\",\n        \"#text\": \"error on line 3 at column 10: Extra content at the end of the document\n\"\n      }\n    }\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search PP by amount - decimal",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "255d9e91-48cb-48b6-89e2-fcc277aaa6e8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"${#Project#entityPrefix}_${#TestSuite#index}_FilterCustomFields_PricePlanMatrix_Amount\",\n    \"parsererror\": {\n      \"-style\": \"display: block; white-space: pre; border: 2px solid #c77; padding: 0 1em 0 1em; margin: 1em; background-color: #fdd; color: black\",\n      \"h3\": [\n        \"This page contains the following errors:\",\n        \"Below is a rendering of the page up to the first error.\"\n      ],\n      \"div\": {\n        \"-style\": \"font-family:monospace;font-size:12px\",\n        \"#text\": \"error on line 3 at column 10: Extra content at the end of the document\n\"\n      }\n    }\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search PP by age - long",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "57e50387-79bb-4493-aed8-2969c857c559",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search RCT by duration - integer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "381464da-a0c9-4f80-a6e4-5e802ef9af94",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search RCT by prorata - boolean",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b3bdaf5-2f00-4405-80f6-29dc66137193",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Test Data Cleanup",
									"item": [
										{
											"name": "Remove recurring charge template",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08c9c8ec-502a-4f93-af68-1d31e35ca8f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d27090c-91f5-4fdf-8d72-167072e14825",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Billing Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "49e6efaf-8ca7-4963-89ef-4bcfa6c63950",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove priceplan recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13f21ea0-38ea-4996-9491-98909229b3b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove priceplan OneShot",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6bdda676-1e7b-4497-b63c-9b8ccd9faa21",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove priceplan usage",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "600be748-64da-4a53-af7f-68783e14d8d2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Filter search and invoicing",
							"item": [
								{
									"name": "Data model",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "77b192e3-aa2b-434b-825e-b4c3541751c6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4bda067-79e5-43d1-b13f-ee4bd9071285",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create RatedTransactions Filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df0fd858-f119-41a5-8e87-14d5b23fca79",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Rated Transaction Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b6077fb3-baec-49d4-8061-ab545d405ebf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Search",
									"item": [
										{
											"name": "Search from filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f15ad3ba-a091-45de-9f50-08e887a90389",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Inbound Request Tests",
							"item": [
								{
									"name": "Inbound 1",
									"item": [
										{
											"name": "Create ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2bf97595-7fb9-4e91-9006-0d06bf06eb3a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38b152be-0750-4a77-867a-7ca634986b1e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Fired=true",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b08e2b8-80d9-4aab-b3ce-4927888aed19",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Fired - change return status to 230",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1931fc89-cb9f-4eb1-8d69-671801a56d28",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Fired=false",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4330f657-01cd-446d-b17c-1d7ddc1b3385",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "List notification history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "417da7d9-a1e6-4912-b749-2fab31bf3966",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Jobs",
							"item": [
								{
									"name": "Job Reporting",
									"item": [
										{
											"name": "Execute 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b1b73d8-4d7d-4cd5-ba1c-9304c7e1d792",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa5f4b52-c585-42ee-bfb5-0c1f7a771c64",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find by code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "61f15986-e99a-44fa-a015-1d183c25de06",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find by id",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eebec82f-58f5-42f4-935f-0b0bc1a57f3d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Reporting",
							"item": [
								{
									"name": "ReportExtract",
									"item": [
										{
											"name": "Create ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d3bf5d4f-dae7-4a64-a011-efc41f492d99",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate - SQL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dcd5d391-bce1-4fcd-b087-6120bb144075",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate - JAVA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "befdbff0-2d04-4724-9a0d-a11b64b2535c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run - SQL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ba89ef0-d42f-40eb-ac76-a513fcb19f9c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run - JAVA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e967ffd-77bc-40a8-bbe2-5e639356ff41",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find - SQL 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8471081d-bffb-48c9-9191-5d9f978cc81d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find - JAVA 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d52f7189-f5d4-4288-a5ba-5f8d637205e3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove - SQL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ed013aa-c410-4399-9148-50f1f2ce45b5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove - JAVA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ca194260-4db1-481f-ac6c-48bcd31265d7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find - SQL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0803b30d-3749-439c-9dc0-1ddff6b48a14",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find - JAVA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6e795f0c-098b-4f54-8f39-e7b6466c1385",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "60fa9dab-eeb8-4ed0-bf0d-fe80d0a46fe1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c233ca90-dc82-4b5e-831e-e1a6449ad8ca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c761e00-35d7-454f-bd51-048437a8f1c7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "GDPR Erasure",
							"item": [
								{
									"name": "Account operations",
									"item": [
										{
											"name": "Create BillingCycle",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "692023ba-4677-48ff-a7bb-907f19834858",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "11d08c20-5572-4450-b636-122d4351f4eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Created sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "058e9772-df37-43a3-a6a6-8d38102d47ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8358aba3-b42c-410e-9008-c09640697835",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run RT",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "18ee76d0-d699-45cb-b56a-c02a3cc23c21",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Generate Previous Invoice old",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "623430bb-07ae-45cf-bca1-7272d4f1f149",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Payment for Invoice old",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "42e945ed-c44a-4f50-8166-785bdbd44330",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Created sub 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "653ac9ec-0a6e-42a5-8af0-666c1db11284",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "31ef058e-3e2d-499a-b2db-61fc83c3c448",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run RT 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7e32f2e0-3ae5-4d85-991e-3abd974e1b26",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Generate Previous Invoice new",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "37393f8c-c0e4-46c5-9665-9d9d293d02b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Payment for Invoice new",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1a1e6d68-ce21-4c6a-97bd-9c28aef872e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Undue payment 50",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5a3c7cec-28f2-4b1d-a484-33f1d8fdd100",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Refund 50",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36268fbd-6fbd-49b2-b088-ddcca26f9092",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Match Undue payment and Refund",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1116efe8-10f6-4c5d-974f-191ba6f3e19b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscription",
									"item": [
										{
											"name": "Created sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "466f7735-cd75-449f-9785-b97237cf340d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Active sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "76f8c19c-2fda-4aad-839c-7054b1cce604",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "65cd7625-aaf6-4c40-9115-7ca63989bfe2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Suspended sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c9b50cfd-6b88-43b6-bad5-07dc5a643995",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create access to suspended sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c3c4a0b-b4b4-40a3-929a-8304b9203e13",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Suspend sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f84effeb-4011-461d-82bd-42c723ac5279",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Resiliated sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d14a81fb-90e2-48d3-a05a-2305c938326d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service - Resiliated",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "778c643f-b024-4b31-a7fd-479217eab2e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Resiliate sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e531f141-7f02-40e8-be52-eb5af5946d0b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Order",
									"item": [
										{
											"name": "Create old order",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e3b8108a-abae-4fd7-9f90-6a61ee3eb844",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new order",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb6d8893-580b-4024-8117-42b0a698bc7e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice",
									"item": [
										{
											"name": "Create BillingCycle",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4ff9f8f3-a170-4d25-b7f2-5ce4417324fc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InvoiceType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0808ddd7-31c9-43f8-b676-9fe16160b36a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3750a9a0-1520-4a51-a10f-524a528ab16d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6494023b-7fb6-4bd7-a646-93b754bca255",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Created sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eae38c45-a99f-448d-a2eb-ff7ad9d4a2ee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply one shot",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47a0fd21-af27-4e4c-ad45-af38c4c4939b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run RT",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "492db22f-ba09-4509-bda7-49b66aa8e1a6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f989515-e96b-49c2-94f1-62c344ad6b3a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Invoicing Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b08f8479-b4e1-4406-96fb-5196de8969e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Validate BR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05cb2114-4f3b-434a-9164-f054742766ac",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create invoice",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b1e8dd8-4992-4d82-9e80-4ef871241da4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "GDPR",
									"item": [
										{
											"name": "Create GPDR Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7ad856cc-3b70-4bc7-a166-25c4cd3d22dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run GDPR Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39dffb77-a04b-492a-918d-e32187c3d26a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Remove base data",
							"item": [
								{
									"name": "Remove Administration",
									"item": [
										{
											"name": "find BarChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f9de112-8de1-4a24-8dd1-20f8e1b5e772",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find PieChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f889424-5736-43c1-b720-77e4d53ba62e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find LineChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82bc05b3-6a7a-4dbd-87e8-b7c26459d2a4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c4be79b6-217a-4910-b416-97939a6727c0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find Notification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "abfa9504-0f12-409c-9050-1391b11b2aeb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find WebHookNotification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "85139376-15ad-4350-9b21-85ed68f73e70",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find EmailNotifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "44b55cf3-de46-4c52-ab3a-3e58a22d0875",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find Timer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58b388bb-6997-4e3f-935e-b7b3fdac21e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find JobInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e68c3407-842f-42be-84ce-0186a8179a84",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove BarChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4971f0d7-a22b-4d3f-a0f7-f7fcf8346fc9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove PieChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30c15735-aefe-418c-be6d-47f066d06b83",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove LineChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7890d56b-7d4e-46d9-a78e-726e46c88a03",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove Notification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c1be7995-9ef5-486c-9615-2a161d40dc66",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove WebHookNotification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "195a7ab7-bfb8-4b55-b14c-2058d688bcab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove EmailNotifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cd66c33d-9dc5-4200-88d2-e01f758b72a0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove JobInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1b46794f-e572-4253-88e7-62aa81dfa61d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove Timer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d7342ccd-7966-4f89-93c2-abf09a0171cf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Remove Catalog",
									"item": [
										{
											"name": "findRecurringChargeTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9b93e19a-9897-448b-8bd2-7ddcf0e7a5eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find RecurringCHargeTemplate with Calendar",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff30e681-b467-4d03-a95d-3f3cdebaeeef",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findOneShotChargeTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c72e0ef6-343b-43fc-9020-6ca6955b32e8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findUsageChargeTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "737dc6b2-edd8-4e99-8120-15a3d5093864",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findServiceTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8bf148b2-1f90-4b1b-8374-b6209fe78c04",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findOfferTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87eb5913-15d9-4085-acf5-03820063ffce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findPricePlanRec",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c9a6d6a3-d474-49e3-9e1c-0a802dd9e70b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findPricePlanOS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9b1a6c5-c2da-4a91-b8d4-113faec2a014",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findPricePlanUC",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "490b4574-88ef-4fcd-b31e-9fc349027219",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "removeRecurringChargeTemplate 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c2e5e80-437c-4a6d-8cf3-ffbd1ff55bc9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "removeOneShotChargeTemplate 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d2ff50f6-62de-476e-94b6-6a003f350d13",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "removeUsageChargeTemplate 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c67ea9f-a025-4a31-934e-fe793788158c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Remove Customer accounts, subsription, access",
									"item": [
										{
											"name": "find Customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "660cf4a2-9fdd-4c2b-b92b-1e9224531ff2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find CustomerAccount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fdd18a2-2354-4ecd-87e3-471c581397ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find BillingAccount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c1daa40f-8465-4d54-9156-66a301712df2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find UserAccount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30b6e7e2-3232-4d4b-8329-360bc4f89bf2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "20d19a67-4c01-4136-9fac-1f4dd926d2a1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff54fc5c-8bd9-4cdf-b46d-d02edb1710f2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d866fa2c-68db-41e2-a712-7583c3eca5e7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Remove Script BOM, BSM, BAM",
									"item": [],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Banking Calendar and Date status",
							"item": [
								{
									"name": "Create 2017 Banking Calendar",
									"item": [
										{
											"name": "Create 2017 Banking Calendar with All Vals",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ffb130b0-2e9e-4f8d-a25e-b3a99c3f4452",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Date status",
									"item": [
										{
											"name": "Saturday Date Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ed78a69-8ddb-4b34-a1b9-58949376ed7f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Sunday Date Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1b47840-bd26-4a4b-afee-8d3fa65472e8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Monday Date Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bdb5c3ca-a592-45d1-aacb-2af237fe7cab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "New Year's Day Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "44eeba5d-5f36-48ac-8da1-f35ec8a7ff8e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Labor Day Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0732223b-3d09-4f91-9bbc-1edd3a205199",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Simple Working Date Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b5368a80-2993-49c8-b2dc-445fd9ca14de",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "blank",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1b0937b3-d818-41ce-972a-001bdfca29df",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}