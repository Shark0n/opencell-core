{
	"info": {
		"_postman_id": "ee00606b-24dc-47cd-a88f-722bf60a024f",
		"name": "Opencell",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "OK",
			"item": [
				{
					"name": "API",
					"item": [
						{
							"name": "Accounting",
							"item": [
								{
									"name": "Account Code",
									"item": [
										{
											"name": "CreateOrUpdate Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d86ba96c-befe-41c9-8683-e86a45186fc3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1b717d55-a719-4b25-b48e-0816a02e9296",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.accountingCode.code).to.eql(pm.environment.get(\"testCode\"));",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.accountingCode.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode?accountingCode={{testCode}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													],
													"query": [
														{
															"key": "accountingCode",
															"value": "{{testCode}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Accounting Code ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6efb75cc-b349-4571-ba3a-bea07511a560",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=\"+pm.environment.get(\"testCode\")+\" already exists.\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Accounting Code ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f8a9bbe-303c-40c0-a96e-18610793745c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=NOT_EXIST does not exists.\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"chartOfAccountTypeEnum\": \"ASSETS\",\r\n    \"chartOfAccountViewTypeEnum\": \"REGULAR\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f3d93e0-eae6-48be-8a45-8ff25bca6ba8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"disabled\": false,\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\",\r\n\t\"migrated\": false\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ec9d73b-af5c-4f5f-82fd-f7ba49769dd0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"disabled\": false,\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULAR\",\r\n\t\"migrated\": false\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a5be0bda-1599-484d-8866-76c0a23b0b6d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.accountingCode.code).to.eql(pm.environment.get(\"testCode\"));",
															"});",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.accountingCode.description).to.eql(pm.environment.get(\"testDescription\")+ \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode?accountingCode={{testCode}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode"
													],
													"query": [
														{
															"key": "accountingCode",
															"value": "{{testCode}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Accounting Code MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa3bb4b0-09d6-49ac-9218-ae5a494bfdae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Accounting Code INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "894d56d5-b3cf-4976-a57c-fc0ef4c36723",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.billing.ChartOfAccountViewTypeEnum`\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "OCC Template",
									"item": [
										{
											"name": "CreateOrUpdate OCC Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9cefd7d6-87b0-4c26-9d4d-f11e612df4fc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OCC Template ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a873527c-8ec0-4448-9923-5fc495ac2cc2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=\"+pm.environment.get(\"testCode\")+\" already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update OCC Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "72aff326-79f4-4393-838c-911d146d04e4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"NOT_EXIST\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"occCategory\": \"DEBIT\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update OCC Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "49688a86-95e8-44f6-bd0d-fa6ef85e8463",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"occCategory\": \"DEBIT\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate OCC Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd757129-f941-42b5-9cce-c5900a35014e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"accountingCode\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"occCategory\": \"DEBIT\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate OCC Template MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "beccbd5f-6c16-4894-861c-d81dcc092ce7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: accountCode / accountingCode.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_Missing\",\r\n  \"description\": \"{{testDescription}} missing\",\r\n  \"occCategory\": \"DEBIT\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate OCC Template INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9dde2130-99d8-439e-88bc-79055f176771",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.payments.OperationCategoryEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clear Data",
									"item": [
										{
											"name": "Delete Accounting Code GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e790fedf-0202-427a-ae58-f124b5559f0b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"is still referenced from table\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/TEST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"TEST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete OCC Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b01610b2-e7f6-4bbb-92f3-37336042a876",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/{{testCode}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"{{testCode}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete OCC Template FAIL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bc2eba8-3263-493d-9c2d-3c3953d190a8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=\"+pm.environment.get(\"testCode\")+\" does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}\",\r\n  \"description\": \"{{testDescription}} invalid\",\r\n  \"occCategory\": \"INVALID\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/occTemplate/{{testCode}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"occTemplate",
														"{{testCode}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Accounting Code SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "32704f0f-4588-4da8-b96d-32dd159b36f3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/TEST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"TEST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Accounting Code FAIL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28356062-73fd-40b0-9c11-a880d8f96572",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=\"+pm.environment.get(\"testCode\")+\" does not exists.\");",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"123\",\r\n\t\"chartOfAccountTypeEnum\": \"ASSETS\",\r\n\t\"chartOfAccountViewTypeEnum\": \"REGULARXX\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/accountingCode/TEST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"accountingCode",
														"TEST"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Accounts",
							"item": [
								{
									"name": "BillingCycle",
									"item": [
										{
											"name": "CreateOrUpdate Billing Cylcle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "95be94cf-1a83-45ad-a8f4-9569e352e775",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BTN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ec58779-6d52-4fe7-ad3b-f0bda038cd3d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingCycle with code=\"+pm.environment.get(\"testCode\")+\"_BC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BTN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1981b851-2f31-4391-90ea-1d362d90a093",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingCycle.code).to.eql(pm.environment.get(\"testCode\")+\"_BC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingCycle.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle?billingCycleCode={{testCode}}_BC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													],
													"query": [
														{
															"key": "billingCycleCode",
															"value": "{{testCode}}_BC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c75a52d-39cd-4982-8280-8192244d1b8c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingCycle with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"NOT_EXIST\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"billingTemplateName\": \"{{testCode}}_BtN\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "64b08229-77e8-46ce-a28c-25cb8261cd81",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"billingTemplateName\": \"TEST\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "780c4ef8-10bb-457e-afe7-5a5a78b68173",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}} updated\",\r\n  \"billingTemplateName\": \"TEST\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"transactionDateDelay\": \"0\",\r\n  \"invoicingThreshold\": 0.01,\r\n  \"calendar\": \"MONTHLY\",\r\n  \"invoiceTypeCode\": \"ADJ\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cc1a3f65-9281-433d-a908-e9e0936abde8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingCycle.code).to.eql(pm.environment.get(\"testCode\")+\"_BC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingCycle.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle?billingCycleCode={{testCode}}_BC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle"
													],
													"query": [
														{
															"key": "billingCycleCode",
															"value": "{{testCode}}_BC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Billing Cycle MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5ca0cf78-6044-40ce-9cb3-6b29c61836aa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: invoiceDateDelay.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"MISSING\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"calendar\": \"MONTHLY\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3342b2af-7ed7-4cb6-8274-1c1db6774714",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_BC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceDateDelay\": \"0\",\r\n  \"dueDateDelay\": \"30\",\r\n  \"invoiceDateProductionDelay\": \"0\",\r\n  \"calendar\": \"NOT_EXIST\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Seller",
									"item": [
										{
											"name": "CreateOrUpdate Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8f450ad-935e-4712-9a8a-27ac39bf849b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7a341447-556d-42ce-8b3a-2b8d45d90ea1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=\"+pm.environment.get(\"testCode\")+\"_SELLER already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "78677457-7ea1-4b87-badd-2f8d239c82d7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.seller.code).to.eql(pm.environment.get(\"testCode\")+\"_SELLER\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.seller.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{testCode}}_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{testCode}}_SELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fc4a558d-042d-4fbb-9937-8f5e553eaf78",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7a64fb32-c1fe-4a68-bc95-a3710e5ce169",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f5f1216-2c4f-4870-b631-dfa2a85b1e7b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{   \r\n    \"code\":\"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"parentSeller\":\"SELLER_FR\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "78927ae5-3bb2-477c-afb9-329a7f458aa0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.seller.code).to.eql(pm.environment.get(\"testCode\")+\"_SELLER\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.seller.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{testCode}}_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{testCode}}_SELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f7a0c10-cf3a-4dcf-a3e2-ae7ad294e10f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SELLER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"parentSeller\": \"NOT_EXIST\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "CustomerBrand",
									"item": [
										{
											"name": "CreateOrUpdate CustomerBrand SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "17232cce-c15a-49cc-9117-c300dd4e07bf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CustomerBrand ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e0ff8de5-43e6-4847-bf91-0343a8e5a1d8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CustomerBrand ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35bb5843-8792-4335-9270-c45801ed61be",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/updateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"updateBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CustomerBrand SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "249e7cbc-d6f9-40b4-b0d8-5752eb018e0e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/updateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"updateBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerBrand SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fe154278-6273-4bee-b06f-a97940041867",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CB\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateBrand"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerBrand MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2f93e231-5060-44dc-8583-377f702ba90e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateBrand",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateBrand"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer Category",
									"item": [
										{
											"name": "CreateOrUpdate Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "abadec7d-1754-4300-b5ae-37afb315d41a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b833dc42-e50c-4a43-beb6-1d8d66f43733",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_CC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/category/{{testCode}}_CC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"category",
														"{{testCode}}_CC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer Category ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3340d08d-be52-43af-8553-6a6f7eabfd26",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=\"+pm.environment.get(\"testCode\")+\"_CC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Customer Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6a99f088-5627-46f8-a611-eeaba953c1c2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/updateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"updateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eab3130f-ce37-4f8d-bc3f-61696d4be0a6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/updateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"updateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "56868923-e2c9-41c7-bc7f-24edeb5ecf14",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Customer Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4366ee04-eef3-4bdc-adf7-1da80386b3b0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_CC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/category/{{testCode}}_CC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"category",
														"{{testCode}}_CC"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer Category MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "55ba0dc5-f677-41ab-a1bc-161bf41b3f90",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testCode}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab86ffe1-b387-4b1e-b982-bebea7efe5bc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"true\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\",\r\n    \"accountingCode\": \"NOT_EXIST\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer Category INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aa2684d2-3388-41cd-a419-5ba67a1377be",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"exoneratedFromTaxes\": \"INVALID\",\r\n    \"exonerationTaxEl\": \"exoneration Tax El\",\r\n    \"exonerationTaxElSpark\": \"exoneration Tax El Spark\",\r\n    \"exonerationReason\": \"exoneration Reason\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdateCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdateCategory"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer",
									"item": [
										{
											"name": "CreateOrUpdate Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ea839cc-8c66-4b73-aa5c-90515238465f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0bc7a64-e404-430c-b2a4-b9b4b0d89248",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_C\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{testCode}}_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b521661c-d525-4a66-b348-33d3ba632653",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_C already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ffaf47cd-6e05-47ed-9268-41c141eb4321",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "97712886-4022-4f99-be8f-09d174d1020a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e1335423-aa66-4587-aa0c-2ecea3b6bcc2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6632da7e-eb8b-4f62-8154-9cf62d20d093",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_C\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{testCode}}_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "352073fc-b5c9-4e72-bf52-36c7bd27dcdf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: customerCategory.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f41e731c-821e-44c0-a8ba-4583ebd09d0a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateDate\": \"INVALID\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1f502e43-074e-42dd-8fe0-53b329ebe283",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"NOT_EXIST\",\r\n    \"mandateIdentification\": \"\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c7d6746e-466f-4243-bcde-cfcb0f7e3ea0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"NOT_EXIST\",\r\n    \"customerBrand\": \"{{testCode}}_CB\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a1b7ae7-5fd8-4fb0-bf48-6a459763c60c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"{{testCode}}_CC\",\r\n    \"customerBrand\": \"NOT_EXIST\",\r\n    \"seller\": \"{{testCode}}_SELLER\",\r\n    \"mandateIdentification\": \"\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "CustomerAccount",
									"item": [
										{
											"name": "CreateOrUpdate CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9c23c9d-95fe-4f18-9fc6-c2cb9ba9b7d2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c6c7d0f2-f1e4-4a1f-944e-71a907c5bdcd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_CA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{testCode}}_CA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{testCode}}_CA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CustomerAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "257ea398-a5ab-4208-af3c-a47a8d3abae8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=\"+pm.environment.get(\"testCode\")+\"_CA already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "380e2454-ef78-484c-b807-559d04b00ef5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "162c8652-9cf3-4a01-b1e4-9e86881eefa3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9287cfa7-e000-466c-a61f-c9b56db94832",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "29f87243-eeb6-49ab-ad33-bdde169d5eca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_CA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{testCode}}_CA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{testCode}}_CA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerAccount MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3323624f-d276-4140-893b-76aebcad41a8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: currency, language.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerAccount INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "18d3469a-87d4-48bf-bfc1-0614eaf181fd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CA\",\r\n    \"customer\": \"{{testCode}}_C\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"mandateDate\": \"INVALID\"\r\n}\r\n\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a03abb49-67c5-4fef-8959-129222d3131b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_C\",\r\n    \"customer\": \"NOT_EXIST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "BillingAccount",
									"item": [
										{
											"name": "CreateOrUpdate BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a65a771b-ded8-49cf-926d-6e520bd3cd1e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9631e23e-14c8-4b17-8847-e055250fd3b2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_BA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{testCode}}_BA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{testCode}}_BA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BillingAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c5c2cc2-7ac9-4a4b-932f-9c2b0a20d104",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=\"+pm.environment.get(\"testCode\")+\"_BA already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update BillingAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f2b2f6b-3173-4d11-980e-931031ba47ae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c5ac6b03-6501-4073-bc7e-1f2e2639b534",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3b45d17d-0766-4b82-8cc1-59f88c2f0111",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "edf5e34c-c2f7-47ec-b292-4aa47d243ff3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_BA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{testCode}}_BA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{testCode}}_BA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate BillingAccount MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9498649-4d75-4b47-b32a-ea7fe79cae05",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: country, language.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"MISSING\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate BillingAccount INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a589699-6f73-4b1c-8218-4d8f343f082a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"{{testCode}}_CA\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\",\r\n    \"subscriptionDate\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate BillingAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b36868fc-e486-4008-abfb-998238393b42",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_BA\",\r\n    \"customerAccount\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"billingCycle\": \"{{testCode}}_BC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "UserAccount",
									"item": [
										{
											"name": "CreateOrUpdate UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "334b1e37-a37f-4f27-8fb7-df8bdc6762bc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\" : \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "282a889d-d36e-451c-80e3-a4963c3a1760",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_UA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{testCode}}_UA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{testCode}}_UA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create UserAccount ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c0adf43-2e2b-4507-8286-50e3da81600e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=\"+pm.environment.get(\"testCode\")+\"_UA already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\" : \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "786978f0-53b9-40a4-a66e-ef220bcb23f6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\",\r\n\t\"terminationReason\": \"TR_NONE\",\r\n\t\"terminationDate\": \"2018-09-14\",\r\n\t\"status\": \"ACTIVE\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b16ffaf5-889c-4cce-aca6-dc6c84f371ab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89578748-b807-46ef-bbfc-a7801bfc328e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_UA\",\r\n\t\"description\": \"{{testDescription}} updated\",\r\n\t\"billingAccount\": \"{{testCode}}_BA\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "92c669cd-f3c8-4f76-aa65-bef6a5e0821c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"testCode\")+\"_UA\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{testCode}}_UA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{testCode}}_UA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate UserAccount MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "19e91b8c-62c3-417c-ac68-a0982305c860",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: billingAccount.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n\t\"code\": \"MISSING\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate UserAccount INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a28a858a-b1b8-49af-b6b4-7234f223c917",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.billing.AccountStatusEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n\t\"code\": \"{{testCode}}_UA\", \r\n\t\"billingAccount\":\"{{testCode}}_BA\",\r\n\t\"terminationReason\":\"TR\",\r\n\t\"terminationDate\":\"2018-09-14\",\r\n\t\"status\" : \"INVALID\" \r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "766a832d-ec38-42d2-ac29-75c9ba164df0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n\t\"code\": \"{{testCode}}_UA\", \r\n\t\"billingAccount\":\"NOT_EXIST\",\r\n\t\"terminationReason\":\"TR\",\r\n\t\"terminationDate\":\"2018-09-14\",\r\n\t\"status\" : \"ACTIVE\" \r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Provider Contact",
									"item": [
										{
											"name": "CreateOrUpdate Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7f8c37b8-b378-4a12-b342-9e8a2e7b235e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f591c323-0952-41d4-82d8-ac84a1bb9419",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.providerContact.code).to.eql(pm.environment.get(\"testCode\")+\"_PC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.providerContact.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact?providerContactCode={{testCode}}_PC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													],
													"query": [
														{
															"key": "providerContactCode",
															"value": "{{testCode}}_PC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Provider Contact ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2c8a8fed-b1d0-42cd-97f2-20766925f468",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ProviderContact with code=\"+pm.environment.get(\"testCode\")+\"_PC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8c41924a-aa99-49b8-a354-48812d74f063",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ProviderContact with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e721f454-833c-4b74-a4a7-d8f2bbd1cdbf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2fb3fd49-a620-4384-b6ba-17633e5fdb4d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "56abd571-540e-494d-b6fb-c6a63e9fd193",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.providerContact.code).to.eql(pm.environment.get(\"testCode\")+\"_PC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.providerContact.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact?providerContactCode={{testCode}}_PC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													],
													"query": [
														{
															"key": "providerContactCode",
															"value": "{{testCode}}_PC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Provider Contact MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bd96c7d-73b9-494d-93ac-87c2fe39ca65",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: description.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Provider Contact INTERNAL_SERVER_ERROR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "74959c7a-b366-4dc6-b6ea-f2e69cdceaee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"At least 1 of the field in Contact Information tab is required [email, genericEmail, phone, mobile].\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Provider Contact INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15a17912-396d-40e5-8c02-01beaa57230c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.account.AddressDto`\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"firstName\": \"Ben\",\r\n    \"lastName\": \"Ohara\",\r\n    \"phone\": \"0123456789\",\r\n    \"mobile\": \"0123456789\",\r\n    \"fax\": \"0123456789\",\r\n    \"email\": \"ben.ohara@opencellsoft.com\",\r\n    \"genericMail\": \"ben.ohara@opencellsoft.com\",\r\n    \"addressDto\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Provider Contact SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a5ea6006-05e5-4d0e-ad83-c7f8ab8f31ee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/{{testCode}}_PC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"{{testCode}}_PC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47e2ccc8-a47f-488f-b72f-8146f08334be",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ProviderContact with code=\"+pm.environment.get(\"testCode\")+\"_PC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/providerContact/{{testCode}}_PC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"providerContact",
														"{{testCode}}_PC"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Account Hierarchy",
									"item": [
										{
											"name": "CreateOrUpdate Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4169f1f3-02fb-42c9-b3e2-f0997d7f9c54",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30b6154d-4f2b-4917-8542-a68115ee9cc7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.name.firstName).to.eql(\"created\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38f7f5bb-7bc6-4db6-a167-130031817c65",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_CH already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"email\": \"test@test.com\",\r\n\t\"customerCode\": \"{{testCode}}_CH\",\r\n\t\"sellerCode\": \"{{testCode}}_SELLER\",\r\n\t\"customerBrandCode\": \"{{testCode}}_CB\",\r\n\t\"customerCategoryCode\": \"{{testCode}}_CC\",\r\n\t\"currencyCode\": \"USD\",\r\n\t\"countryCode\": \"US\",\r\n\t\"languageCode\": \"ENG\",\r\n\t\"billingCycleCode\": \"{{testCode}}_BC\",\r\n\t\"titleCode\": \"MR\",\r\n\t\"firstName\": \"created\",\r\n\t\"lastName\": \"TEST\",\r\n\t\"phoneNumber\": \"+102354749\",\r\n\t\"address1\": \"Address1\",\r\n\t\"address2\": \"Address2\",\r\n\t\"zipCode\": \"4050\",\r\n\t\"city\": \"Los Banos\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "423500bb-d577-4554-95c8-03aef0ddcb9b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code='NOT_EXIST' does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"NOT_EXIST\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c22bf09-f0a9-4c46-8eec-68b6b0c86e0d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f266dafd-315b-41a0-bfc1-85847da90f58",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"SELLER_US\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"updated\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2538e8b3-3f3f-4324-a8ac-8492bb2a0ccd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customer.name.firstName).to.eql(\"updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy MISSING_PARAMETER 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "34f1177c-ce54-44b5-bc90-4fc82c9b1b63",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: customerCode, customerCategoryCode, sellerCode, currencyCode, countryCode, billingCycleCode, languageCode, email.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy MISSING_PARAMETER 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c2ef9c86-3fba-4d3c-bb92-5587c1ee8ea3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: customerCategoryCode, sellerCode, currencyCode, countryCode, billingCycleCode, languageCode, email.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"customerCode\": \"{{testCode}}_CH\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e5af5017-5c7e-4e0c-b8c6-2bbc722b0fde",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Currency with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"NOT_EXIST\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy ENTITY_DOES_NOT_EXISTS_EXCEPTION 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dcf2aad0-732e-4bd4-92ed-94312e2a73fe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"NOT_EXIST\",\r\n    \"customerBrandCode\": \"{{testCode}}_CB\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Hierarchy INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8ec08e0-ef4e-4cab-96d6-fa17bf6619b5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"customerCode\": \"{{testCode}}_CH\",\r\n    \"sellerCode\": \"{{testCode}}_SELLER\",\r\n    \"customerBrandCode\": \"{{testCode}}_BC\",\r\n    \"customerCategoryCode\": \"{{testCode}}_CC\",\r\n    \"currencyCode\": \"USD\",\r\n    \"countryCode\": \"US\",\r\n    \"languageCode\": \"ENG\",\r\n    \"billingCycleCode\": \"{{testCode}}_BC\",\r\n    \"titleCode\": \"MR\",\r\n    \"firstName\": \"created\",\r\n    \"lastName\": \"TEST\",\r\n    \"phoneNumber\": \"+102354749\",\r\n    \"address1\": \"Address1\",\r\n    \"address2\": \"Address2\",\r\n    \"zipCode\": \"4050\",\r\n    \"city\": \"Los Banos\",\r\n    \"birthDate\": \"INVALID\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Account Hierarchy SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fdf3aa50-7c0e-4fc3-8849-ed9b3e777ba9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{testCode}}_CH"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Provider Contact ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1e03a87c-9455-4eb6-a41d-dba678663f59",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_CH does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{testCode}}_CH"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clear Data",
									"item": [
										{
											"name": "Delete UserAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a5d06320-dc64-4e0b-90ea-fb62060b12b8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/{{testCode}}_UA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"{{testCode}}_UA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete UserAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13fddbee-04be-40a6-8c3b-c66effc5493f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=\"+pm.environment.get(\"testCode\")+\"_UA does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/{{testCode}}_UA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"{{testCode}}_UA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerBrand  DELETE_REFERENCED_ENTITY_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "16e9fa6e-2ccd-494f-a417-eed45d57fa3e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"DELETE_REFERENCED_ENTITY_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB is referenced.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"removeBrand",
														"{{testCode}}_CB"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete BillingAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "69842e39-e3e0-4cf2-99f9-d229a7c597e7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/{{testCode}}_BA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"{{testCode}}_BA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete BillingAccount  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6f0be35-9f8a-46b9-bca7-a125acea6b01",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingAccount with code=\"+pm.environment.get(\"testCode\")+\"_BA does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/{{testCode}}_BA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"{{testCode}}_BA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerAccount SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4cd509b4-3a1c-4989-ae64-09efd1d7e643",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/{{testCode}}_CA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"{{testCode}}_CA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerAccount ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6693c18-0ab3-4729-aaab-2f7c5d50ad0c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerAccount with code=\"+pm.environment.get(\"testCode\")+\"_CA does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/{{testCode}}_CA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"{{testCode}}_CA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "46a52669-17de-4fbe-a1a9-d141dfe66c38",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{testCode}}_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{testCode}}_C"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e3723b56-1a06-467c-adec-c5dcebca66ca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Customer with code=\"+pm.environment.get(\"testCode\")+\"_C does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{testCode}}_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{testCode}}_C"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66c71bd0-ea95-4466-9ae3-4f8118a58b8e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{testCode}}_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{testCode}}_SELLER"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01e59353-ee44-4657-ba0a-154bd227fd64",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Seller with code=\"+pm.environment.get(\"testCode\")+\"_SELLER does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{testCode}}_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{testCode}}_SELLER"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Billing Cycle SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2936e272-3908-4537-bdfb-82020b164d1b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/{{testCode}}_BC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"{{testCode}}_BC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Billing Cycle ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f4c55ead-f6d2-40df-a16d-0ef89ad7a6df",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"BillingCycle with code=\"+pm.environment.get(\"testCode\")+\"_BC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Ben\",\r\n        \"lastName\": \"Ohara\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"14 rue Crespin du Gast\",\r\n        \"address2\": null,\r\n        \"address3\": null,\r\n        \"zipCode\": \"75011\",\r\n        \"city\": \"PARIS\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris Area\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"ben.ohara@opencellsoft.com\",\r\n        \"phone\": null,\r\n        \"mobile\": null,\r\n        \"fax\": null\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"CLASSIC\",\r\n    \"seller\": \"CLASSIC\",\r\n    \"mandateIdentification\": \"\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/{{testCode}}_BC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"{{testCode}}_BC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerBrand  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ee0159b-12c5-4b4b-b31a-e22abad3bc0b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"removeBrand",
														"{{testCode}}_CB"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerBrand  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2dab6437-8fc7-41a9-926e-20ed7b9f0417",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CustomerBrand with code=\"+pm.environment.get(\"testCode\")+\"_CB does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/removeBrand/{{testCode}}_CB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"removeBrand",
														"{{testCode}}_CB"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Administration",
							"item": [
								{
									"name": "Module",
									"item": [
										{
											"name": "CreateOrUpdate Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "733e1e74-c6e2-4316-aeef-054abb8423c6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_MOD\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/module/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ba89fce-9c2b-4eb7-b6b8-7a0901b1ebaa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.module.code).to.eql(pm.environment.get(\"testCode\")+\"_MOD\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.module.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/module?code={{testCode}}_MOD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_MOD"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Module ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d3a559fb-1cce-4e9c-9fe2-8f62e21de3fd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"MeveoModule with code=\"+pm.environment.get(\"testCode\")+\"_MOD already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{testCode}}_MOD\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/module",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Module ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15fe050a-8dec-4dcc-8baa-3f1254e98a91",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"MeveoModule with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"license\": \"COM\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/module",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9960a55-5096-4f23-aa53-8c840f673e0b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_MOD\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"license\": \"COM\",\r\n    \"moduleItems\": [\r\n        {\r\n            \"script\": {\r\n                \"code\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"description\": \"Save Ingenico Card\",\r\n                \"script\": \"package org.meveo.service.script;\\\\r\\\\n\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.Client;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.RequestHeader;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.PaymentResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.CardPaymentMethodSpecificOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentReferences;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentStatusOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.token.TokenResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.webhooks.WebhooksEvent;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.InMemorySecretKeyStore;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.SignatureValidationException;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.Webhooks;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.WebhooksHelper;\\\\r\\\\nimport org.apache.commons.collections4.MapUtils;\\\\r\\\\nimport org.json.simple.JSONObject;\\\\r\\\\nimport org.json.simple.parser.JSONParser;\\\\r\\\\nimport org.json.simple.parser.ParseException;\\\\r\\\\nimport org.meveo.admin.exception.BusinessException;\\\\r\\\\nimport org.meveo.commons.utils.StringUtils;\\\\r\\\\nimport org.meveo.model.notification.InboundRequest;\\\\r\\\\nimport org.meveo.model.payments.CardPaymentMethod;\\\\r\\\\nimport org.meveo.model.payments.CreditCardTypeEnum;\\\\r\\\\nimport org.meveo.model.payments.CustomerAccount;\\\\r\\\\nimport org.meveo.model.payments.PaymentGateway;\\\\r\\\\nimport org.meveo.service.payments.impl.CustomerAccountService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentGatewayService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentMethodService;\\\\r\\\\nimport org.slf4j.Logger;\\\\r\\\\nimport org.slf4j.LoggerFactory;\\\\r\\\\n\\\\r\\\\nimport java.util.ArrayList;\\\\r\\\\nimport java.util.HashMap;\\\\r\\\\nimport java.util.List;\\\\r\\\\nimport java.util.Map;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n *\\\\r\\\\n * @author Mounir Bahije\\\\r\\\\n *\\\\r\\\\n *         Script executed to save card enrolled with Ingenico Hosted Checkout\\\\r\\\\n *\\\\r\\\\n */\\\\r\\\\npublic class SaveIngenicoCardScript extends Script {\\\\r\\\\n\\\\r\\\\n    private final static Logger log = LoggerFactory.getLogger(SaveIngenicoCardScript.class);\\\\r\\\\n\\\\r\\\\n    private PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface(\\\\\\\"PaymentMethodService\\\\\\\");\\\\r\\\\n    private CustomerAccountService customerAccountService = (CustomerAccountService) getServiceInterface(\\\\\\\"CustomerAccountService\\\\\\\");\\\\r\\\\n    private PaymentGatewayService paymentGatewayService = (PaymentGatewayService) getServiceInterface(\\\\\\\"PaymentGatewayService\\\\\\\");\\\\r\\\\n\\\\r\\\\n    @Override\\\\r\\\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\\\r\\\\n\\\\r\\\\n        String verification = \\\\\\\"\\\\\\\";\\\\r\\\\n        InboundRequest inReq = (InboundRequest) methodContext.get(\\\\\\\"event\\\\\\\");\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"GET\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            String body = inReq.getBody();\\\\r\\\\n            Map<String, String> headers = inReq.getHeaders();\\\\r\\\\n            for (String headerKey : headers.keySet()) {\\\\r\\\\n                if (\\\\\\\"X-GCS-Webhooks-Endpoint-Verification\\\\\\\".equalsIgnoreCase(headerKey)) {\\\\r\\\\n                    String headerValue = headers.get(headerKey);\\\\r\\\\n                    verification = headerValue;\\\\r\\\\n                    inReq.setResponseBody(verification);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"POST\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            final String reqBody = inReq.getBody();\\\\r\\\\n\\\\r\\\\n            List<RequestHeader> requestHeaders = getWebhookRequestHeaders(inReq.getHeaders());\\\\r\\\\n            String webhooksKeyId = this.getHeaderValue(requestHeaders, \\\\\\\"X-GCS-KeyId\\\\\\\");\\\\r\\\\n\\\\r\\\\n            InMemorySecretKeyStore keyStore = InMemorySecretKeyStore.INSTANCE;\\\\r\\\\n            keyStore.storeSecretKey(webhooksKeyId, getWebhookSecretKey(webhooksKeyId));\\\\r\\\\n\\\\r\\\\n            WebhooksHelper helper = Webhooks.createHelper(keyStore);\\\\r\\\\n            WebhooksEvent webhooksEvent = helper.unmarshal(reqBody, requestHeaders);\\\\r\\\\n\\\\r\\\\n            PaymentResponse payment = webhooksEvent.getPayment();\\\\r\\\\n            if (payment == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentResponse not found on webhooksEvent : [%s]\\\\\\\", webhooksEvent));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentOutput paymentOutput = payment.getPaymentOutput();\\\\r\\\\n            if (paymentOutput == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentReferences paymentReferences = paymentOutput.getReferences();\\\\r\\\\n            if (paymentReferences == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"paymentReferences not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            String merchantReference = paymentReferences.getMerchantReference();\\\\r\\\\n\\\\r\\\\n            if (merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") >= 0) {\\\\r\\\\n\\\\r\\\\n                String longIdCA = merchantReference.substring(merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") + 3);\\\\r\\\\n                CustomerAccount ca = customerAccountService.findById(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                PaymentGateway paymentGateway = paymentGatewayService.getPaymentGateway(ca, null, null);\\\\r\\\\n\\\\r\\\\n                if (paymentGateway == null) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is null\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                if (!webhooksKeyId.equals(paymentGateway.getWebhooksKeyId())) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is not the good one\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                String status = payment.getStatus();\\\\r\\\\n                if (\\\\\\\"PENDING_CAPTURE\\\\\\\".equalsIgnoreCase(status)) {\\\\r\\\\n                    PaymentStatusOutput paymentStatusOutput = payment.getStatusOutput();\\\\r\\\\n                    if (paymentStatusOutput == null) {\\\\r\\\\n                        throw new BusinessException(String.format(\\\\\\\"paymentStatusOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n                    }\\\\r\\\\n                    Boolean isAuthorized = paymentStatusOutput.getIsAuthorized();\\\\r\\\\n\\\\r\\\\n                    if (isAuthorized) {\\\\r\\\\n\\\\r\\\\n                        CardPaymentMethodSpecificOutput cardPaymentMethodSpecificOutput = paymentOutput.getCardPaymentMethodSpecificOutput();\\\\r\\\\n                        if (cardPaymentMethodSpecificOutput == null) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"cardPaymentMethodSpecificOutput not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n                        }\\\\r\\\\n                        Long paymentProductId = Long.valueOf(cardPaymentMethodSpecificOutput.getPaymentProductId());\\\\r\\\\n\\\\r\\\\n                        JSONParser jsonParser = new JSONParser();\\\\r\\\\n                        JSONObject obj = null;\\\\r\\\\n                        try {\\\\r\\\\n                            obj = (JSONObject) jsonParser.parse(reqBody);\\\\r\\\\n                        } catch (ParseException e) {\\\\r\\\\n                            e.printStackTrace();\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String tokenId = (String) ((JSONObject) ((JSONObject) ((JSONObject) obj.get(\\\\\\\"payment\\\\\\\")).get(\\\\\\\"paymentOutput\\\\\\\")).get(\\\\\\\"cardPaymentMethodSpecificOutput\\\\\\\")).get(\\\\\\\"token\\\\\\\");\\\\r\\\\n                        if (StringUtils.isBlank(tokenId)) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"tokenId not found on webhooksEvent.payment.paymentOutput.cardPaymentMethodSpecificOutput : [%s]\\\\\\\", cardPaymentMethodSpecificOutput));\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String merchantId = webhooksEvent.getMerchantId();\\\\r\\\\n\\\\r\\\\n                        try {\\\\r\\\\n\\\\r\\\\n                            CreditCardTypeEnum cardType = fromId(Long.valueOf(paymentProductId).intValue());\\\\r\\\\n\\\\r\\\\n                            Client client = (Client) paymentMethodService.getClient(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                            TokenResponse response = client.merchant(merchantId).tokens().get(tokenId);\\\\r\\\\n\\\\r\\\\n                            String cardNumber = response.getCard().getData().getCardWithoutCvv().getCardNumber();\\\\r\\\\n                            String expiryDate = response.getCard().getData().getCardWithoutCvv().getExpiryDate();\\\\r\\\\n                            String ownerName = response.getCard().getData().getCardWithoutCvv().getCardholderName();\\\\r\\\\n                            CardPaymentMethod paymentMethod = new CardPaymentMethod();\\\\r\\\\n                            paymentMethod.setCardNumber(cardNumber);\\\\r\\\\n                            paymentMethod.setCardType(cardType);\\\\r\\\\n                            paymentMethod.setCustomerAccount(ca);\\\\r\\\\n                            paymentMethod.setPreferred(true);\\\\r\\\\n                            paymentMethod.setMonthExpiration(new Integer(expiryDate.substring(0, 2)));\\\\r\\\\n                            paymentMethod.setYearExpiration(new Integer(expiryDate.substring(2, 4)));\\\\r\\\\n                            paymentMethod.setOwner(ownerName);\\\\r\\\\n                            paymentMethod.setTokenId(tokenId);\\\\r\\\\n                            paymentMethod.setHiddenCardNumber(CardPaymentMethod.hideCardNumber(cardNumber));\\\\r\\\\n                            if (!paymentMethodService.cardTokenExist(paymentMethod)) {\\\\r\\\\n                                paymentMethodService.create(paymentMethod);\\\\r\\\\n                            }\\\\r\\\\n                        } catch (Exception e) {\\\\r\\\\n                            throw new BusinessException(\\\\\\\"Error on SaveIngenicoCardScript : \\\\\\\" + e.getMessage());\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private CreditCardTypeEnum fromId(Integer id) {\\\\r\\\\n        for (CreditCardTypeEnum es : CreditCardTypeEnum.values()) {\\\\r\\\\n            if (es.getId().equals(id)) {\\\\r\\\\n                return es;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        throw new IllegalArgumentException();\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private List<RequestHeader> getWebhookRequestHeaders(Map<String, String> headers) {\\\\r\\\\n        List<RequestHeader> webhookHeaders = new ArrayList<>();\\\\r\\\\n        if (MapUtils.isNotEmpty(headers)) {\\\\r\\\\n            headers.forEach((key, value) -> webhookHeaders.add(new RequestHeader(key, value)) );\\\\r\\\\n        }\\\\r\\\\n        return webhookHeaders;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getHeaderValue(List<RequestHeader> requestHeaders, String headerName) {\\\\r\\\\n        String value = null;\\\\r\\\\n        for (RequestHeader header : requestHeaders) {\\\\r\\\\n            if (headerName.equalsIgnoreCase(header.getName())) {\\\\r\\\\n                if (value == null) {\\\\r\\\\n                    value = header.getValue();\\\\r\\\\n                } else {\\\\r\\\\n                    throw new SignatureValidationException(\\\\\\\"enocuntered multiple occurrences of header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        if (value == null) {\\\\r\\\\n            throw new SignatureValidationException(\\\\\\\"could not find header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n        return value;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getWebhookSecretKey(String webhooksKeyId) throws BusinessException {\\\\r\\\\n        try {\\\\r\\\\n            String query = \\\\\\\"select pg.webhooksSecretKey from PaymentGateway pg where pg.webhooksKeyId=:webhooksKeyId\\\\\\\";\\\\r\\\\n            Map<String, Object> queryParams = new HashMap<>();\\\\r\\\\n            queryParams.put(\\\\\\\"webhooksKeyId\\\\\\\", webhooksKeyId);\\\\r\\\\n            Object result = paymentGatewayService.executeSelectQuery(query, queryParams);\\\\r\\\\n            return ((List<String>)result).get(0);\\\\r\\\\n        } catch (Exception e) {\\\\r\\\\n            throw new BusinessException(String.format(\\\\\\\"Error on getWebhookSecretKey for webhooksKeyId = [%s]\\\\\\\", webhooksKeyId));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\",\r\n                \"type\": \"JAVA\"\r\n            }\r\n        },\r\n        {\r\n            \"notification\": {\r\n                \"updatedCode\": null,\r\n                \"code\": \"SaveIngenicoCardInbound\",\r\n                \"classNameFilter\": \"org.meveo.model.notification.InboundRequest\",\r\n                \"eventTypeFilter\": \"INBOUND_REQ\",\r\n                \"elFilter\": \"#{event.pathInfo.endsWith(\\\\\\\"/ingenico/saveCard\\\\\\\")}\",\r\n                \"scriptInstanceCode\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"scriptParams\": {\r\n                    \"event\": \"#{event}\"\r\n                },\r\n                \"counterTemplate\": null\r\n            }\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/module",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "02cbf420-dbf4-401f-847b-46e2a8bf8fc5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_MOD\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"license\": \"COM\",\r\n    \"moduleItems\": [\r\n        {\r\n            \"script\": {\r\n                \"code\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"description\": \"Save Ingenico Card\",\r\n                \"script\": \"package org.meveo.service.script;\\\\r\\\\n\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.Client;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.RequestHeader;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.PaymentResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.CardPaymentMethodSpecificOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentReferences;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.payment.definitions.PaymentStatusOutput;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.token.TokenResponse;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.domain.webhooks.WebhooksEvent;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.InMemorySecretKeyStore;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.SignatureValidationException;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.Webhooks;\\\\r\\\\nimport com.ingenico.connect.gateway.sdk.java.webhooks.WebhooksHelper;\\\\r\\\\nimport org.apache.commons.collections4.MapUtils;\\\\r\\\\nimport org.json.simple.JSONObject;\\\\r\\\\nimport org.json.simple.parser.JSONParser;\\\\r\\\\nimport org.json.simple.parser.ParseException;\\\\r\\\\nimport org.meveo.admin.exception.BusinessException;\\\\r\\\\nimport org.meveo.commons.utils.StringUtils;\\\\r\\\\nimport org.meveo.model.notification.InboundRequest;\\\\r\\\\nimport org.meveo.model.payments.CardPaymentMethod;\\\\r\\\\nimport org.meveo.model.payments.CreditCardTypeEnum;\\\\r\\\\nimport org.meveo.model.payments.CustomerAccount;\\\\r\\\\nimport org.meveo.model.payments.PaymentGateway;\\\\r\\\\nimport org.meveo.service.payments.impl.CustomerAccountService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentGatewayService;\\\\r\\\\nimport org.meveo.service.payments.impl.PaymentMethodService;\\\\r\\\\nimport org.slf4j.Logger;\\\\r\\\\nimport org.slf4j.LoggerFactory;\\\\r\\\\n\\\\r\\\\nimport java.util.ArrayList;\\\\r\\\\nimport java.util.HashMap;\\\\r\\\\nimport java.util.List;\\\\r\\\\nimport java.util.Map;\\\\r\\\\n\\\\r\\\\n/**\\\\r\\\\n *\\\\r\\\\n * @author Mounir Bahije\\\\r\\\\n *\\\\r\\\\n *         Script executed to save card enrolled with Ingenico Hosted Checkout\\\\r\\\\n *\\\\r\\\\n */\\\\r\\\\npublic class SaveIngenicoCardScript extends Script {\\\\r\\\\n\\\\r\\\\n    private final static Logger log = LoggerFactory.getLogger(SaveIngenicoCardScript.class);\\\\r\\\\n\\\\r\\\\n    private PaymentMethodService paymentMethodService = (PaymentMethodService) getServiceInterface(\\\\\\\"PaymentMethodService\\\\\\\");\\\\r\\\\n    private CustomerAccountService customerAccountService = (CustomerAccountService) getServiceInterface(\\\\\\\"CustomerAccountService\\\\\\\");\\\\r\\\\n    private PaymentGatewayService paymentGatewayService = (PaymentGatewayService) getServiceInterface(\\\\\\\"PaymentGatewayService\\\\\\\");\\\\r\\\\n\\\\r\\\\n    @Override\\\\r\\\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\\\r\\\\n\\\\r\\\\n        String verification = \\\\\\\"\\\\\\\";\\\\r\\\\n        InboundRequest inReq = (InboundRequest) methodContext.get(\\\\\\\"event\\\\\\\");\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"GET\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            String body = inReq.getBody();\\\\r\\\\n            Map<String, String> headers = inReq.getHeaders();\\\\r\\\\n            for (String headerKey : headers.keySet()) {\\\\r\\\\n                if (\\\\\\\"X-GCS-Webhooks-Endpoint-Verification\\\\\\\".equalsIgnoreCase(headerKey)) {\\\\r\\\\n                    String headerValue = headers.get(headerKey);\\\\r\\\\n                    verification = headerValue;\\\\r\\\\n                    inReq.setResponseBody(verification);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if (\\\\\\\"POST\\\\\\\".equalsIgnoreCase(inReq.getMethod())) {\\\\r\\\\n\\\\r\\\\n            final String reqBody = inReq.getBody();\\\\r\\\\n\\\\r\\\\n            List<RequestHeader> requestHeaders = getWebhookRequestHeaders(inReq.getHeaders());\\\\r\\\\n            String webhooksKeyId = this.getHeaderValue(requestHeaders, \\\\\\\"X-GCS-KeyId\\\\\\\");\\\\r\\\\n\\\\r\\\\n            InMemorySecretKeyStore keyStore = InMemorySecretKeyStore.INSTANCE;\\\\r\\\\n            keyStore.storeSecretKey(webhooksKeyId, getWebhookSecretKey(webhooksKeyId));\\\\r\\\\n\\\\r\\\\n            WebhooksHelper helper = Webhooks.createHelper(keyStore);\\\\r\\\\n            WebhooksEvent webhooksEvent = helper.unmarshal(reqBody, requestHeaders);\\\\r\\\\n\\\\r\\\\n            PaymentResponse payment = webhooksEvent.getPayment();\\\\r\\\\n            if (payment == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentResponse not found on webhooksEvent : [%s]\\\\\\\", webhooksEvent));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentOutput paymentOutput = payment.getPaymentOutput();\\\\r\\\\n            if (paymentOutput == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"PaymentOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            PaymentReferences paymentReferences = paymentOutput.getReferences();\\\\r\\\\n            if (paymentReferences == null) {\\\\r\\\\n                throw new BusinessException(String.format(\\\\\\\"paymentReferences not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            String merchantReference = paymentReferences.getMerchantReference();\\\\r\\\\n\\\\r\\\\n            if (merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") >= 0) {\\\\r\\\\n\\\\r\\\\n                String longIdCA = merchantReference.substring(merchantReference.lastIndexOf(\\\\\\\"_-_\\\\\\\") + 3);\\\\r\\\\n                CustomerAccount ca = customerAccountService.findById(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                PaymentGateway paymentGateway = paymentGatewayService.getPaymentGateway(ca, null, null);\\\\r\\\\n\\\\r\\\\n                if (paymentGateway == null) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is null\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                if (!webhooksKeyId.equals(paymentGateway.getWebhooksKeyId())) {\\\\r\\\\n                    throw new BusinessException(\\\\\\\"paymentGateway is not the good one\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                String status = payment.getStatus();\\\\r\\\\n                if (\\\\\\\"PENDING_CAPTURE\\\\\\\".equalsIgnoreCase(status)) {\\\\r\\\\n                    PaymentStatusOutput paymentStatusOutput = payment.getStatusOutput();\\\\r\\\\n                    if (paymentStatusOutput == null) {\\\\r\\\\n                        throw new BusinessException(String.format(\\\\\\\"paymentStatusOutput not found on webhooksEvent.payment : [%s]\\\\\\\", payment));\\\\r\\\\n                    }\\\\r\\\\n                    Boolean isAuthorized = paymentStatusOutput.getIsAuthorized();\\\\r\\\\n\\\\r\\\\n                    if (isAuthorized) {\\\\r\\\\n\\\\r\\\\n                        CardPaymentMethodSpecificOutput cardPaymentMethodSpecificOutput = paymentOutput.getCardPaymentMethodSpecificOutput();\\\\r\\\\n                        if (cardPaymentMethodSpecificOutput == null) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"cardPaymentMethodSpecificOutput not found on webhooksEvent.payment.paymentOutput : [%s]\\\\\\\", paymentOutput));\\\\r\\\\n                        }\\\\r\\\\n                        Long paymentProductId = Long.valueOf(cardPaymentMethodSpecificOutput.getPaymentProductId());\\\\r\\\\n\\\\r\\\\n                        JSONParser jsonParser = new JSONParser();\\\\r\\\\n                        JSONObject obj = null;\\\\r\\\\n                        try {\\\\r\\\\n                            obj = (JSONObject) jsonParser.parse(reqBody);\\\\r\\\\n                        } catch (ParseException e) {\\\\r\\\\n                            e.printStackTrace();\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String tokenId = (String) ((JSONObject) ((JSONObject) ((JSONObject) obj.get(\\\\\\\"payment\\\\\\\")).get(\\\\\\\"paymentOutput\\\\\\\")).get(\\\\\\\"cardPaymentMethodSpecificOutput\\\\\\\")).get(\\\\\\\"token\\\\\\\");\\\\r\\\\n                        if (StringUtils.isBlank(tokenId)) {\\\\r\\\\n                            throw new BusinessException(String.format(\\\\\\\"tokenId not found on webhooksEvent.payment.paymentOutput.cardPaymentMethodSpecificOutput : [%s]\\\\\\\", cardPaymentMethodSpecificOutput));\\\\r\\\\n                        }\\\\r\\\\n\\\\r\\\\n                        String merchantId = webhooksEvent.getMerchantId();\\\\r\\\\n\\\\r\\\\n                        try {\\\\r\\\\n\\\\r\\\\n                            CreditCardTypeEnum cardType = fromId(Long.valueOf(paymentProductId).intValue());\\\\r\\\\n\\\\r\\\\n                            Client client = (Client) paymentMethodService.getClient(Long.valueOf(longIdCA));\\\\r\\\\n\\\\r\\\\n                            TokenResponse response = client.merchant(merchantId).tokens().get(tokenId);\\\\r\\\\n\\\\r\\\\n                            String cardNumber = response.getCard().getData().getCardWithoutCvv().getCardNumber();\\\\r\\\\n                            String expiryDate = response.getCard().getData().getCardWithoutCvv().getExpiryDate();\\\\r\\\\n                            String ownerName = response.getCard().getData().getCardWithoutCvv().getCardholderName();\\\\r\\\\n                            CardPaymentMethod paymentMethod = new CardPaymentMethod();\\\\r\\\\n                            paymentMethod.setCardNumber(cardNumber);\\\\r\\\\n                            paymentMethod.setCardType(cardType);\\\\r\\\\n                            paymentMethod.setCustomerAccount(ca);\\\\r\\\\n                            paymentMethod.setPreferred(true);\\\\r\\\\n                            paymentMethod.setMonthExpiration(new Integer(expiryDate.substring(0, 2)));\\\\r\\\\n                            paymentMethod.setYearExpiration(new Integer(expiryDate.substring(2, 4)));\\\\r\\\\n                            paymentMethod.setOwner(ownerName);\\\\r\\\\n                            paymentMethod.setTokenId(tokenId);\\\\r\\\\n                            paymentMethod.setHiddenCardNumber(CardPaymentMethod.hideCardNumber(cardNumber));\\\\r\\\\n                            if (!paymentMethodService.cardTokenExist(paymentMethod)) {\\\\r\\\\n                                paymentMethodService.create(paymentMethod);\\\\r\\\\n                            }\\\\r\\\\n                        } catch (Exception e) {\\\\r\\\\n                            throw new BusinessException(\\\\\\\"Error on SaveIngenicoCardScript : \\\\\\\" + e.getMessage());\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private CreditCardTypeEnum fromId(Integer id) {\\\\r\\\\n        for (CreditCardTypeEnum es : CreditCardTypeEnum.values()) {\\\\r\\\\n            if (es.getId().equals(id)) {\\\\r\\\\n                return es;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        throw new IllegalArgumentException();\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private List<RequestHeader> getWebhookRequestHeaders(Map<String, String> headers) {\\\\r\\\\n        List<RequestHeader> webhookHeaders = new ArrayList<>();\\\\r\\\\n        if (MapUtils.isNotEmpty(headers)) {\\\\r\\\\n            headers.forEach((key, value) -> webhookHeaders.add(new RequestHeader(key, value)) );\\\\r\\\\n        }\\\\r\\\\n        return webhookHeaders;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getHeaderValue(List<RequestHeader> requestHeaders, String headerName) {\\\\r\\\\n        String value = null;\\\\r\\\\n        for (RequestHeader header : requestHeaders) {\\\\r\\\\n            if (headerName.equalsIgnoreCase(header.getName())) {\\\\r\\\\n                if (value == null) {\\\\r\\\\n                    value = header.getValue();\\\\r\\\\n                } else {\\\\r\\\\n                    throw new SignatureValidationException(\\\\\\\"enocuntered multiple occurrences of header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        if (value == null) {\\\\r\\\\n            throw new SignatureValidationException(\\\\\\\"could not find header '\\\\\\\" + headerName + \\\\\\\"'\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n        return value;\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    private String getWebhookSecretKey(String webhooksKeyId) throws BusinessException {\\\\r\\\\n        try {\\\\r\\\\n            String query = \\\\\\\"select pg.webhooksSecretKey from PaymentGateway pg where pg.webhooksKeyId=:webhooksKeyId\\\\\\\";\\\\r\\\\n            Map<String, Object> queryParams = new HashMap<>();\\\\r\\\\n            queryParams.put(\\\\\\\"webhooksKeyId\\\\\\\", webhooksKeyId);\\\\r\\\\n            Object result = paymentGatewayService.executeSelectQuery(query, queryParams);\\\\r\\\\n            return ((List<String>)result).get(0);\\\\r\\\\n        } catch (Exception e) {\\\\r\\\\n            throw new BusinessException(String.format(\\\\\\\"Error on getWebhookSecretKey for webhooksKeyId = [%s]\\\\\\\", webhooksKeyId));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\",\r\n                \"type\": \"JAVA\"\r\n            }\r\n        },\r\n        {\r\n            \"notification\": {\r\n                \"updatedCode\": null,\r\n                \"code\": \"SaveIngenicoCardInbound\",\r\n                \"classNameFilter\": \"org.meveo.model.notification.InboundRequest\",\r\n                \"eventTypeFilter\": \"INBOUND_REQ\",\r\n                \"elFilter\": \"#{event.pathInfo.endsWith(\\\\\\\"/ingenico/saveCard\\\\\\\")}\",\r\n                \"scriptInstanceCode\": \"org.meveo.service.script.SaveIngenicoCardScript\",\r\n                \"scriptParams\": {\r\n                    \"event\": \"#{event}\"\r\n                },\r\n                \"counterTemplate\": null\r\n            }\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/module/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c549271-172e-4780-b144-d1e7cb0c9f2e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.module.code).to.eql(pm.environment.get(\"testCode\")+\"_MOD\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.module.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/module?code={{testCode}}_MOD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_MOD"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Module SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "385dbf1d-72ae-4827-a5c3-50aca22b4e1d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/module/{{testCode}}_MOD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module",
														"{{testCode}}_MOD"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Module ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "931b42bc-8aaa-4240-a8d8-96cfaef61f2e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"MeveoModule with code=TEST_MOD does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/module/{{testCode}}_MOD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"module",
														"{{testCode}}_MOD"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Job Instance",
									"item": [
										{
											"name": "CreateOrUpdate Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f28d6451-e812-414a-8ce5-e949bb3faca6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "227bcd57-68c8-4b89-903b-63c4ca181627",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.jobInstanceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_JI\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.jobInstanceDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance?jobInstanceCode={{testCode}}_JI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance"
													],
													"query": [
														{
															"key": "jobInstanceCode",
															"value": "{{testCode}}_JI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Job Instance ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "432c189a-e2d2-4065-b137-337ad249a158",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"JobInstance with code=\"+pm.environment.get(\"testCode\")+\"_JI already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/create",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Job Instance ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c0178b1-559d-4a90-a0f5-a5e63efc621e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"JobInstance with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/update",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cd9c97b9-5898-4db1-855a-6aa4116d8abf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/update",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"update"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06949f04-c158-42e8-998c-71ed3dfaca3f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_JI\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d312909-1c71-4988-a998-54277218c44a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.jobInstanceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_JI\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.jobInstanceDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance?jobInstanceCode={{testCode}}_JI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance"
													],
													"query": [
														{
															"key": "jobInstanceCode",
															"value": "{{testCode}}_JI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Job Instance MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d939c0d-0652-4959-bb14-1caee6cfa618",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: SepaJob_ddRequestBuilder.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testDescription}}_JI\",\r\n    \"jobTemplate\": \"SepaDirectDebitJob\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Job Instance ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9ba48de2-67ed-4775-9735-15f6ea9bfe0f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"JobTemplate with code 'NOT_EXIST' doesn't exist.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"jobTemplate\": \"NOT_EXIST\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"SepaJob_ddRequestBuilder\",\r\n                \"entityReferenceValue\": {\r\n                    \"classname\": \"org.meveo.model.payments.DDRequestBuilder\",\r\n                    \"code\": \"Sepa_STD\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f1f1e3ca-a135-4a88-a8ef-fae9c241d3ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/{{testCode}}_JI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"{{testCode}}_JI"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Job Instance SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "479d6667-113a-414f-92fe-1829ddf5729a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"JobInstance with code=\"+pm.environment.get(\"testCode\")+\"_JI does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/{{testCode}}_JI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"{{testCode}}_JI"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Discount Plan",
									"item": [
										{
											"name": "CreateOrUpdate Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a74afcf9-e2cd-4cce-a0ab-a39134bae187",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0926c752-b13f-4028-8056-266223549a4b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.discountPlanDto.code).to.eql(pm.environment.get(\"testCode\")+\"_DP\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.discountPlanDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													],
													"query": [
														{
															"key": "discountPlanCode",
															"value": "{{testCode}}_DP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Discount Plan ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "471be4c4-450e-425e-9aef-1cfced52e791",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"DiscountPlan with code=\"+pm.environment.get(\"testCode\")+\"_DP already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Discount Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "461dc801-cf2c-4935-b844-015a00b8f092",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"DiscountPlan with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"TEST\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d90aa2c-e20d-4d31-982f-b9717d1988fb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "94a0f23a-1b2a-44ce-98b2-b8c797c678f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"2019-03-03\",\r\n    \"endDate\": \"2019-03-04\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6e10e157-8f2e-47a6-9a2a-80a9d1dc8a88",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.discountPlanDto.code).to.eql(pm.environment.get(\"testCode\")+\"_DP\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.discountPlanDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													],
													"query": [
														{
															"key": "discountPlanCode",
															"value": "{{testCode}}_DP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Discount Plan INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c35c57fe-a37c-41e9-b4b7-126ab6c821b9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_DP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"durationUnit\": \"1\",\r\n    \"startDate\": \"INVALID\",\r\n    \"endDate\": \"INVALID\",\r\n    \"defaultDuration\": \"1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Discount Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "59d7626f-1090-45b5-8bf6-03b39c4b046c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													],
													"query": [
														{
															"key": "discountPlanCode",
															"value": "{{testCode}}_DP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Discount Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a80c758f-eca4-4350-8508-191a7579526e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"DiscountPlan with code=\"+pm.environment.get(\"testCode\")+\"_DP does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/discountPlan?discountPlanCode={{testCode}}_DP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"discountPlan"
													],
													"query": [
														{
															"key": "discountPlanCode",
															"value": "{{testCode}}_DP"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Billing",
							"item": [
								{
									"name": "Invoice Category",
									"item": [
										{
											"name": "CreateOrUpdate Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e68fd852-4080-409e-84a3-54e2270ef805",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6a3ea21-1954-49e2-ac96-cc326edc335f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_IC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory?invoiceCategoryCode={{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													],
													"query": [
														{
															"key": "invoiceCategoryCode",
															"value": "{{testCode}}_IC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Invoice Category  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b1cf3e16-76f7-4751-95d5-f54c5b5912fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=\"+pm.environment.get(\"testCode\")+\"_IC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Category  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "95860d48-934c-470c-9a59-77cb60387457",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a40433d2-2b07-47c7-b10a-71ac1ff73612",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8c28d60e-9152-4c81-99fe-653f796cfe1d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35dc02c3-6503-413a-8f64-7db18cd0782a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_IC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory?invoiceCategoryCode={{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory"
													],
													"query": [
														{
															"key": "invoiceCategoryCode",
															"value": "{{testCode}}_IC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Category  MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "769f9b32-ca90-4346-ac08-abbe57a6f280",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Category INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6c461f9-653f-4b29-baaf-ea68db3c4565",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.CustomFieldsDto`\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice SubCategory",
									"item": [
										{
											"name": "CreateOrUpdate Invoice SubCategory  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "464c7548-9233-4f09-a841-440e589558ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_ISC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice SubCategory  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f95e33d7-40e8-401e-b8a9-b688df916da6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSubCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_ISC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSubCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory?invoiceSubCategoryCode={{testCode}}_ISC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													],
													"query": [
														{
															"key": "invoiceSubCategoryCode",
															"value": "{{testCode}}_ISC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Invoice SubCategory  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38c264b3-d2d5-407c-8633-56750def4f9d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=\"+pm.environment.get(\"testCode\")+\"_ISC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_ISC\",\r\n  \"description\": \"{{testDescription}}\",\r\n  \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice SubCategory  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "028e1e84-4063-48d2-a39e-ed707b7b2d5f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice SubCategory  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "877c8cfb-108e-46f3-a9b7-cc96b090e4b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice SubCategory  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "be621b9d-c1d7-4122-960f-927857d6e92a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceCategory\": \"{{testCode}}_IC\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e610c95a-384f-46f3-84c5-5c7587356542",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSubCategory.code).to.eql(pm.environment.get(\"testCode\")+\"_ISC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSubCategory.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory?invoiceSubCategoryCode={{testCode}}_ISC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory"
													],
													"query": [
														{
															"key": "invoiceSubCategoryCode",
															"value": "{{testCode}}_ISC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice SubCategory  MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "10b518af-a0d4-42f4-b8ae-b047feb8cf43",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: invoiceCategory.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice SubCategory INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1aabbfe7-735d-46d4-a338-275efed92172",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot construct instance of `org.meveo.api.dto.CustomFieldsDto`\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice SubCategory ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4309e766-7a5d-4a7b-842c-eaee48c7d9e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ISC\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceCategory\": \"NOT_EXIST\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice Sequence",
									"item": [
										{
											"name": "CreateOrUpdate Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0169799a-1edd-4e47-9001-231c1afb77bd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cca2dd5f-ead1-437e-90f2-70fda6c133b0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSequenceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_IS\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSequenceDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence?invoiceSequenceCode={{testCode}}_IS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													],
													"query": [
														{
															"key": "invoiceSequenceCode",
															"value": "{{testCode}}_IS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Invoice Sequence ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b1eb3fc9-5e8c-47d5-bea2-c15e64393417",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSequence with code=\"+pm.environment.get(\"testCode\")+\"_IS already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Sequence ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9badc347-22b9-460c-9edf-beea1647413c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSequence with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3206a2b5-a4f5-49c6-961e-3c9e8d4e4d03",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9fca96da-2687-45b3-a55f-a91b6da4d136",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"sequenceSize\": \"14\",\r\n    \"currentInvoiceNb\": \"0\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Sequence SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66acf32b-fdea-4c13-ab77-e2a39453d718",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSequenceDto.code).to.eql(pm.environment.get(\"testCode\")+\"_IS\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceSequenceDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence?invoiceSequenceCode={{testCode}}_IS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence"
													],
													"query": [
														{
															"key": "invoiceSequenceCode",
															"value": "{{testCode}}_IS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Sequence MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "888aa5e6-69e5-4fcb-a30e-d75a234ae256",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Sequence INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e1bb3690-268f-4d9c-8e8d-6db4acca1713",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IS\",\r\n    \"sequenceSize\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSequence/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSequence",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clear Data",
									"item": [
										{
											"name": "Delete Invoice Category GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3d87d74-4249-4018-9d17-92f27e43182f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"{{testCode}}_IC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice SubCategory SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bb6aa24-bb8b-42c4-98ad-92a6212f5b98",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/{{testCode}}_ISC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"{{testCode}}_ISC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice SubCategory ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b9f83c93-01d0-405b-a682-fc0f6e4ba3a1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=\"+pm.environment.get(\"testCode\")+\"_ISC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceSubCategory/{{testCode}}_ISC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceSubCategory",
														"{{testCode}}_ISC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "93d69f8b-580a-4509-924b-393a5c39fc39",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"{{testCode}}_IC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4440fac-49c5-427f-aa7e-e3f6949bfbf6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=\"+pm.environment.get(\"testCode\")+\"_IC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceCategory/{{testCode}}_IC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceCategory",
														"{{testCode}}_IC"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Wallet Operation",
									"item": [
										{
											"name": "Create Wallet Operation SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9518dcb5-f160-42cf-8911-4e6ae5cdf45e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"chargeInstance\": \"CH_CLASSIC_REC_FLAT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/operation",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"operation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Wallet Operation ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "95073e89-77cf-4e0a-bbc6-d58c5dbacaf9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"WalletOperation with code=\"+pm.environment.get(\"testCode\")+\"_WLT already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"chargeInstance\": \"CH_CLASSIC_REC_FLAT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/operation",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"operation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Wallet Operation MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "88303904-95b8-4334-bc70-e1182f806b11",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"MISSING\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/operation",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"operation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Wallet Operation INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c2557f0e-4640-4578-8e7e-2fc47f9d89dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_WLT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"subscription\": \"ben.ohara\",\r\n    \"subscriptionDate\": \"INVALID\",\r\n    \"chargeInstance\": \"PR_CLASSIC_DEFAULT\",\r\n    \"currency\": \"EUR\",\r\n    \"taxCode\": \"TAX_CLASSIC_HIGH\",\r\n    \"status\": \"TREATED\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/operation",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"operation"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Offers",
							"item": [
								{
									"name": "Offer Template",
									"item": [
										{
											"name": "CreateOrUpdate  Offer Template  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eb2a69b9-33c6-4850-9fb4-92f0d0231de7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Offer Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d4558195-c2f3-47d1-8e3a-16ff09494ba8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.offerTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_OT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.offerTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{testCode}}_OT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{testCode}}_OT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer Template  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c2ff17f-9093-45e9-b1b7-7f7361ee7ca8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceCategory with code=\" + pm.environment.get(\"testCode\") + \"_OF already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Offer Template  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3b91739f-0fbe-4605-b3f9-24135ad2b45c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OfferTemplate with code=NOT_EXIST /  /  does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Offer Template  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7e305826-cd03-46a9-a8a8-dea9114171f4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Offer Template  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d68d1d3d-1c88-4fbd-9edb-3bedbfbad6b9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"ACTIVE\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Offer Template  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1f0b617d-4565-432d-ab79-b45193842fc3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.offerTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_OT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.offerTemplate.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{testCode}}_OT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{testCode}}_OT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Offer Template INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1611d6d1-5d85-4b10-99c8-045db9be2511",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.catalog.LifeCycleStatusEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_OT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": false,\r\n    \"lifeCycleStatus\": \"INVALID\",\r\n    \"bomCode\": null,\r\n    \"offerTemplateCategoryCode\": null,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"SE_USG_UNIT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"5_SE_CLASSIC_REC_FLAT\",\r\n                \"customFields\": null\r\n            },\r\n            \"mandatory\": false\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Offer Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "414ab5f3-32e4-4b06-8982-b31b4e9c2ac4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{testCode}}_OT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{testCode}}_OT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Offer Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "22a4b30f-8c2f-4870-9843-9c9a782d8553",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OfferTemplate with code=\" + pm.environment.get(\"testCode\") + \"_OT /  /  does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{testCode}}_OT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{testCode}}_OT"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Tax Class",
									"item": [
										{
											"name": "CreateOrUpdate  Tax Class  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b9f7a7a8-e32a-4e90-a9b1-ebb14ce0ebd1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Tax Class SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc8d939c-6dd0-467f-a89e-cf083152eeea",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.dto.code).to.eql(pm.environment.get(\"testCode\") + \"_TC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.dto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass?code={{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_TC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax Class  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4b11f0fe-0e16-43ce-b6f9-e3740e7541b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"TaxClass with code=\" + pm.environment.get(\"testCode\") + \"_TC already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Tax Class  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0405d86-b89d-4d52-b7c8-5e42b666117e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"TaxClass with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testCode}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Tax Class  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e3f049b4-571b-40be-b9b5-d9402f7f503c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax Class  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c9e02c91-317e-4529-8d8b-edb620c9021d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TC\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Tax Class  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0454cafd-60b5-48b6-821e-e57d97ddfd64",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.dto.code).to.eql(pm.environment.get(\"testCode\") + \"_TC\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.dto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass?code={{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_TC"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax Class INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "843ab658-fd9f-45a0-b90d-9226c834a43d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING token\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"INVALID\",\r\n    \"descriptionI18n\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7cbe7cff-4ff6-4471-930c-ed12ea7f8157",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "86a683ea-5eed-4912-a8f3-971684f338c9",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Recurring Charge",
									"item": [
										{
											"name": "CreateOrUpdate  Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7b55c64e-f2e0-4f10-820f-c6ae293cf34e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f82f46a-e381-451c-a47a-cd678decbcf7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.recurringChargeTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_RCT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.recurringChargeTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate?recurringChargeTemplateCode={{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													],
													"query": [
														{
															"key": "recurringChargeTemplateCode",
															"value": "{{testCode}}_RCT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring Charge  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "128edb6d-75ba-49f5-a6d5-7ed0066e5709",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"RecurringChargeTemplate with code=\" + pm.environment.get(\"testCode\") + \"_RCT already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Recurring Charge ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66c1b032-8d6e-4dde-8bae-5b5d39c64672",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"RecurringChargeTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testCode}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Recurring Charge  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c24abe2-b19e-44c2-9173-d6f326179c05",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "209a7478-ec26-4152-a8ae-7577ddbbe905",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"invoiceSubCategory\": \"CLASSIC_USAGE\",\r\n    \"disabled\": false,\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\": \"{{testCode}}_TC\",\r\n    \"calendar\": \"MONTHLY\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f173a5c-e4ef-4e95-bdf5-458602749c5d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.recurringChargeTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_RCT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.recurringChargeTemplate.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate?recurringChargeTemplateCode={{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate"
													],
													"query": [
														{
															"key": "recurringChargeTemplateCode",
															"value": "{{testCode}}_RCT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Recurring Charge MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3257e7d-0fde-4533-aa0b-4112173cb2d1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: invoiceSubCategory, calendar, taxClassCode.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"MISSING\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Recurring Charge INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7af4782a-7398-44ae-bebd-0653b2596cca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_RCT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"invoiceSubCategory\": \"ISCAT_REC\",\r\n    \"disabled\": \"INVAID\",\r\n    \"unitNbDecimal\": 4,\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"calendar\": \"CAL_MONTHLY_1ST\",\r\n    \"durationTermInMonth\": null,\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"triggeredEdrs\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7a7f637c-0267-4ff0-b6a9-8097462b91d5",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "83c9a15f-311f-4af5-8621-2c08ed0b3594",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Price Plan",
									"item": [
										{
											"name": "CreateOrUpdate  Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35a9a9ac-34a8-4328-9a2d-92c8036f3b72",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c52eef12-7b0c-4925-8398-4df0318ebe2e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.pricePlan.code).to.eql(pm.environment.get(\"testCode\") + \"_PP\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.pricePlan.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan?pricePlanCode={{testCode}}_PP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													],
													"query": [
														{
															"key": "pricePlanCode",
															"value": "{{testCode}}_PP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0f48a770-7ed9-4c3c-8406-040ed9e047ee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PricePlanMatrix with code=\" + pm.environment.get(\"testCode\") + \"_PP already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Price Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a84ab464-fe6b-490e-968a-cabbefc3a90a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PricePlanMatrix with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "98a3ab14-7f03-4d49-b022-06ee87c6833f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "517f1716-4754-4207-93b1-bc546581e271",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"eventCode\": \"{{testCode}}_RCT\",\r\n    \"amountWithoutTax\": 100\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "48630cea-2a49-4858-b966-e3cc0de6c2e2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.pricePlan.code).to.eql(pm.environment.get(\"testCode\") + \"_PP\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.pricePlan.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan?pricePlanCode={{testCode}}_PP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan"
													],
													"query": [
														{
															"key": "pricePlanCode",
															"value": "{{testCode}}_PP"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Price Plan MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dd35ff2d-f2fe-4e4d-bf17-1c30703cbaa3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: eventCode, amountWithoutTax.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"MISSING\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Price Plan INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "183e81e7-4904-4a54-aa47-f392c88c8414",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PP\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"eventCode\": \"{{testCode}}_RcT\",\r\n    \"amountWithoutTax\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Price Plan SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36d7c774-1403-4e8f-a614-e067e38a29b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/{{testCode}}_PP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"{{testCode}}_PP"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Price Plan ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab556ae7-b764-4939-aaae-4a42b083f230",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PricePlanMatrix with code=\" + pm.environment.get(\"testCode\") + \"_PP does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/{{testCode}}_PP",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"{{testCode}}_PP"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5e23160e-233d-437e-b36b-fd6ef4c46058",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8ea75aa7-8a9a-4b08-bdde-c560830427c4",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Service Template",
									"item": [
										{
											"name": "CreateOrUpdate  Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "12de026f-2661-4fd0-aaa9-47367fbc5427",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read  Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "337963d1-c84a-49aa-b02c-a77713ce6bcd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_ST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceTemplate.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate?serviceTemplateCode={{testCode}}_ST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													],
													"query": [
														{
															"key": "serviceTemplateCode",
															"value": "{{testCode}}_ST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service Template  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a0e145df-1a87-49a2-8056-f89b40b2acdc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceTemplateService with code=\" + pm.environment.get(\"testCode\") + \"_ST already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Service Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a951138-2148-4f6e-b9f3-e784e4d85d1b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceTemplateService with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35c05393-9997-4755-8a03-295c2aa952cb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a23b1f07-915b-4df1-a5da-cad58d899eef",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": true,\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "74093657-9050-423e-a526-52f800fa4ebf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceTemplate.code).to.eql(pm.environment.get(\"testCode\") + \"_ST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceTemplate.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate?serviceTemplateCode={{testCode}}_ST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													],
													"query": [
														{
															"key": "serviceTemplateCode",
															"value": "{{testCode}}_ST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Service Template MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "56033983-885c-46c5-a877-6cfb03da8aba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Service Template INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bff81aa5-1b23-4fe5-a402-5597c917b05a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_ST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"customFields\": null,\r\n    \"imageBase64\": null,\r\n    \"imagePath\": null,\r\n    \"invoicingCalendar\": null,\r\n    \"longDescription\": null,\r\n    \"mandatory\": \"INVALID\",\r\n    \"serviceChargeTemplateUsages\": null,\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{testCode}}_RCT\",\r\n                \"wallets\": null\r\n            }\r\n        ]\r\n    },\r\n    \"serviceChargeTemplateSubscriptions\": null,\r\n    \"serviceChargeTemplateTerminations\": null,\r\n    \"somCode\": null\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c80defb5-fa40-4056-ad1c-7a5bbc46d136",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "50bb2997-498f-4966-af9f-495cd38ffe27",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clear Data",
									"item": [
										{
											"name": "Delete Tax Class GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d0479de3-cc74-4663-9bbb-a57ef74ec951",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table \\\"billing_tax_class\\\" violates foreign key constraint\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"{{testCode}}_TC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Recurring Charge GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "afc476db-546f-41a0-953e-786a25039272",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: update or delete on table\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"{{testCode}}_RCT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Service Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0731bbb-9ccd-4fdc-bc24-d10b6a891ec7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/{{testCode}}_ST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"{{testCode}}_ST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Service Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2a96867-eb98-495c-9d1b-28afcc4b3e2e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceTemplate with code=\" + pm.environment.get(\"testCode\") + \"_ST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/{{testCode}}_ST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"{{testCode}}_ST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Recurring Charge SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c5bb22d8-4c55-4fd9-b9ba-80b234dc2e36",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"{{testCode}}_RCT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Recurring Charge ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "85b1e208-f9f2-49ca-b5b1-aa41d7dc8086",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"RecurringChargeTemplate with code=\" + pm.environment.get(\"testCode\") + \"_RCT does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/{{testCode}}_RCT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"{{testCode}}_RCT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Tax Class SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "96b76f2a-0348-4433-9767-6a296e7464a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"{{testCode}}_TC"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Tax Class ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "720745be-6efd-4503-9b25-547dcd81f999",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"TaxClass with code=\" + pm.environment.get(\"testCode\") + \"_TC does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/{{testCode}}_TC",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"{{testCode}}_TC"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription",
							"item": [
								{
									"name": "Subscription",
									"item": [
										{
											"name": "CreateOrUpdate Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac3421b8-e54f-4db2-bc3d-d7dfae6d53c0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\t\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b602589b-1018-403b-8797-90a013585310",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"testCode\")+\"_SUB\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{testCode}}_SUB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{testCode}}_SUB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Subscription ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e55f5ce1-0080-4a61-ba8d-6abc366dcb0e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Subscription with code=\"+pm.environment.get(\"testCode\")+\"_SUB already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Subscription ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f155e5bc-07c3-42cf-bb68-995a6201f8b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Subscription with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"NOT_EXIST\",\r\n\t\"description\": \"{{testDescription}}\",\r\n\t\"userAccount\": \"ben.ohara\",\r\n\t\"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n\t\"subscriptionDate\": \"2019-01-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "77afc190-c945-4e2d-a2fd-6047a64d8997",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01276e4e-8d9e-4c7f-9cfc-89260e789630",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Subscription SUCCESS Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6cc3bd4-60ef-4fec-8618-e622a8391b8c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"testCode\")+\"_SUB\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{testCode}}_SUB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{testCode}}_SUB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Subscription ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4b3cecb-d0eb-42ba-994d-a47252ae209e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"UserAccount with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"NOT_EXIST\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Subscription MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6182454d-eca9-44f4-851f-91b0412aa218",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: subscriptionDate.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"ben.ohara\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Subscription INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1350c744-fc0d-4886-988d-389c3f324b7b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.util.Date` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_SUB\",\r\n    \"userAccount\": \"ben.ohara\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6bde5639-93ba-4e4f-bf44-491213246d2d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{testCode}}_SUB\",\r\n    \"terminationReason\" : \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2019-01-01\",\r\n    \"orderItemAction\" : \"DELETE\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription RESILIATED",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a6ab35b-02c5-4e82-a834-3c1f07ac971f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Subscription is already RESILIATED.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{testCode}}_SUB\",\r\n    \"terminationReason\" : \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2019-01-01\",\r\n    \"orderItemAction\" : \"DELETE\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Subscribe and Activate Subscription SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a9f369be-5c1b-4818-8056-52b9468a3165",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"SUB_TEST_1\",\r\n    \"userAccount\": \"DEMO.CLASSIC\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n                \"quantity\": 1\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/subscribeAndActivateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"subscribeAndActivateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Subscribe and Activate Subscription ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3fcb9647-5b77-4e7a-8dae-8f26abcf1670",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Subscription with code=SUB_TEST_1 already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"SUB_TEST_1\",\r\n    \"userAccount\": \"DEMO.CLASSIC\",\r\n    \"offerTemplate\": \"OF_CLASSIC_TEMPLATE\",\r\n    \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"SE_CLASSIC_REC_FLAT\",\r\n                \"subscriptionDate\": \"2019-01-01T22:00:00Z\",\r\n                \"quantity\": 1\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/subscribeAndActivateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"subscribeAndActivateServices"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Settings",
							"item": [
								{
									"name": "Title",
									"item": [
										{
											"name": "CreateOrUpdate Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cb9903e9-e5b7-45f3-80e3-35b74395b73f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da68e266-f7e9-4b85-940c-8b49f1e9b3b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.titleDto.code).to.eql(pm.environment.get(\"testCode\")+\"_TITLE\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.titleDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/title?titleCode={{testCode}}_TITLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													],
													"query": [
														{
															"key": "titleCode",
															"value": "{{testCode}}_TITLE"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Title ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6fe63be3-ff72-4cc2-8184-fc2abd992371",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Title with code=\"+pm.environment.get(\"testCode\")+\"_TITLE already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Title ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a4d463a-5f1a-48c2-abdf-1c4370c2fb57",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Title with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4307103d-2808-46f0-b331-85bf9a79e54e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Account Operation SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2449da29-ccd4-4ff7-9eed-8ff16cd6d52b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TITLE\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eced14b3-e0c5-41b0-9b85-8103b4ea9811",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.titleDto.code).to.eql(pm.environment.get(\"testCode\")+\"_TITLE\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.titleDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/title?titleCode={{testCode}}_TITLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title"
													],
													"query": [
														{
															"key": "titleCode",
															"value": "{{testCode}}_TITLE"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Title MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06518acb-05a5-44c9-9d2a-6fd514d4b1d1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: titleCode.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{testDescription}}\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Title INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3891b4f0-ba1a-48cc-8427-3a17be32de44",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"Test\"\r\n        }\r\n    ],\r\n    \"isCompany\": \"INVALID\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Title SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e0c0704c-8c17-447e-9381-af9e6a00c9ec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/{{testCode}}_TITLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"{{testCode}}_TITLE"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Title ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5c6c3b06-c0db-450f-af90-f11ba0938c4b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Title with code=\"+pm.environment.get(\"testCode\")+\"_TITLE does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/account/title/{{testCode}}_TITLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"title",
														"{{testCode}}_TITLE"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Calendar",
									"item": [
										{
											"name": "CreateOrUpdate Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e66c1cbc-8501-4ff0-84e2-ad550b385273",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "93ddc505-54f6-44cc-969e-1b31cb622fc5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.calendar.code).to.eql(pm.environment.get(\"testCode\")+\"_CAL\");",
															"});",
															"",
															"pm.test(\"Description is equal Monthly (1st of the month)\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.calendar.description).to.eql(\"Monthly (1st of the month)\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/?calendarCode={{testCode}}_CAL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														""
													],
													"query": [
														{
															"key": "calendarCode",
															"value": "{{testCode}}_CAL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Calendar ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf43aa18-11a9-4c2d-8eb2-652982971162",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=\"+pm.environment.get(\"testCode\")+\"_CAL already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Calendar ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "20d2443d-fe08-4d89-a5e3-874429dd32d2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "16de318e-4e2f-444c-9507-8c7a59f6a397",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month) updated\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df6c43bf-58c3-462e-a948-f5b9a3709cc8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month) updated\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "804899a6-cd3a-4128-89fd-94f9bd3c86cb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.calendar.code).to.eql(pm.environment.get(\"testCode\")+\"_CAL\");",
															"});",
															"",
															"pm.test(\"Description is equal Monthly (1st of the month)\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.calendar.description).to.eql(\"Monthly (1st of the month) updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/?calendarCode={{testCode}}_CAL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														""
													],
													"query": [
														{
															"key": "calendarCode",
															"value": "{{testCode}}_CAL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Calendar MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a81e5b2f-ba93-4b31-8471-1b37955ad3ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: calendarType.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Calendar GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "42d50722-595b-433b-870e-8887e45a86ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"query did not return a unique result\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"YEARLY\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Calendar INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b691dc4d-e01d-49df-a2e0-44e11d843d5c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.api.dto.CalendarTypeEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CAL\",\r\n    \"description\": \"Monthly (1st of the month)\",\r\n    \"calendarType\": \"INVALID\",\r\n    \"days\": [\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JANUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"FEBRUARY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MARCH\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"APRIL\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"MAY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JUNE\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"JULY\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"AUGUST\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"SEPTEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"OCTOBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"NOVEMBER\"\r\n        },\r\n        {\r\n            \"day\": \"1\",\r\n            \"month\": \"DECEMBER\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Calendar SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8eac0889-5f7f-4ad8-b46e-29f7f38b7996",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/{{testCode}}_CAL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"{{testCode}}_CAL"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Calendar ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "212ce72e-cd93-4e51-9db6-f483ab6098b4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=\"+pm.environment.get(\"testCode\")+\"_CAL does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/calendar/{{testCode}}_CAL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"calendar",
														"{{testCode}}_CAL"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Channel",
									"item": [
										{
											"name": "CreateOrUpdate Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac56e4ac-3aa0-49f6-b8df-c66554569160",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4e3be05f-a98b-4893-84ad-f3b02f3fed82",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.channel.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.channel.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													],
													"query": [
														{
															"key": "channelCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Channel ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "890f5869-e9cf-45c2-b1d5-c4aab04506d4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Channel with code=\"+pm.environment.get(\"testCode\")+\"_CH already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Channel ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c8cd1ebf-ddad-4c61-827e-795ab7b74522",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Channel with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "79f2efaa-f3c7-461d-8e31-0c35ce793834",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b06df909-bfd5-47b6-9dda-19f6c5e46955",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4f85d52-940a-408b-b989-57bc840931a7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.channel.code).to.eql(pm.environment.get(\"testCode\")+\"_CH\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.channel.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													],
													"query": [
														{
															"key": "channelCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Channel MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6df52e50-91d5-4c11-8da2-f27b0edac156",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Channel INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "62ff3223-9bc7-48c0-a1b9-ce92eff149c5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CH\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"disabled\": \"INVALID\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Channel SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4a7f59fa-5f1b-4b32-8707-072c83fc65ce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													],
													"query": [
														{
															"key": "channelCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Channel ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99cb4640-d0c7-4a6f-bf42-99e626fedf45",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Channel with code=\"+pm.environment.get(\"testCode\")+\"_CH does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel?channelCode={{testCode}}_CH",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel"
													],
													"query": [
														{
															"key": "channelCode",
															"value": "{{testCode}}_CH"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "CountryIso",
									"item": [
										{
											"name": "CreateOrUpdate CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d2d2aba-5d16-42c2-80c5-e41145e58bb0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "164c1a85-b157-410a-8c23-a750cd51173d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TS\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.country.countryCode).to.eql(\"TS\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.country.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso?countryCode=TS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													],
													"query": [
														{
															"key": "countryCode",
															"value": "TS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CountryIso  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a11826c-1683-45d9-8e7a-f4b5be75d35b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Country with code=TS already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7124fe1c-bcc4-4440-b87b-e511b330e18f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Country with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de2ad026-2da1-4b22-94bb-52e0a5bbe7b8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "22f45cc4-76d1-4a62-8c82-444785b95b15",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TS\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ce318408-7e75-4fa7-80e8-2c1d08dcf4e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TS\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.country.countryCode).to.eql(\"TS\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.country.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso?countryCode=TS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso"
													],
													"query": [
														{
															"key": "countryCode",
															"value": "TS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso  MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a275b223-5126-4022-8559-6a9235eb3d6f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: currencyCode.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"MISSING\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9d8b9fe3-eee9-4719-b73f-07093fcd6592",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"INVALID\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\",\r\n    \"languageDescriptions\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fee12435-2981-4495-a5a1-699d0c7e79ab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"countryCode size must be between 0 and 10\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"TOO_LONG_NAME\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"FRA\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05fb90da-ca33-4f9b-abef-84e8913852a9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"countryCode\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"languageCode\": \"NOT_EXIST\",\r\n    \"currencyCode\": \"EUR\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CountryIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d249a97-d829-4161-aeea-6bb0b04ef765",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/TS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"TS"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CountryIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bc58b0d7-4580-4a87-9389-3c4632b7c8a4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Country with code=TS does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/countryIso/TS",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"countryIso",
														"TS"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "CurrencyIso",
									"item": [
										{
											"name": "CreateOrUpdate CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f874da0e-0637-49a1-a59d-493a2358069e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3af915e8-7426-4134-b528-fac111aface4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TST\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.currency.code).to.eql(\"TST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.currency.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso?currencyCode=TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													],
													"query": [
														{
															"key": "currencyCode",
															"value": "TST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CurrencyIso ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ace403b-f307-4637-86d6-3718d09fc9fd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Currency with code=TST already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CurrencyIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05a6d69c-fd27-4147-9f7a-fb6253383227",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Currency with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8dab54f3-3768-4633-8a8d-1985af80eef8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89487c4f-6a59-4a6e-9a79-5f244f3a6f4a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af158e65-0890-4feb-9b94-c08b01026b0e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TST\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.currency.code).to.eql(\"TST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.currency.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso?currencyCode=TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso"
													],
													"query": [
														{
															"key": "currencyCode",
															"value": "TST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CurrencyIso INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "34cb7f2f-b96d-4382-aab2-971e796f6de7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"currencyCode size must be between 0 and 3\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TEST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CurrencyIso  MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c119d0e-1324-4a76-aef6-26e826feb362",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate CurrencyIso  GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "16e8904c-458d-4ecc-87a1-a40a502955b0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: null value in column\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CurrencyIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7e67b65a-8284-4fbc-9637-acd3385cb36f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"TST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CurrencyIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4566fca5-b767-42e6-afdf-4684fe711b9a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Currency with code=TST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/currencyIso/TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"currencyIso",
														"TST"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "LanguageIso",
									"item": [
										{
											"name": "CreateOrUpdate LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "16f27a68-05e3-4f56-8970-ca1b7a5c0648",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n  \"code\": \"TST\",\r\n  \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "55c49600-cd84-4670-88b5-7561133ccea9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TST\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.language.code).to.eql(\"TST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.language.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso?languageCode=TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													],
													"query": [
														{
															"key": "languageCode",
															"value": "TST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create LanguageIso  ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "caff7c6c-a589-450f-b631-a727e1dd9108",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language with code=TST already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update LanguageIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f023597d-3e73-44ac-984c-47cd1f3e8e90",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5c2991bc-fea7-4222-aa25-ed83ade00865",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "245f2074-42e9-490e-b72a-8225533a3703",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5241fb63-b71a-4f9d-b065-7315566efda0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal TST\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.language.code).to.eql(\"TST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.language.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso?languageCode=TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso"
													],
													"query": [
														{
															"key": "languageCode",
															"value": "TST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate LanguageIso INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9ecf9a56-3e6f-4469-a0c4-13f394ecc7b4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"languageCode size must be between 0 and 3\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TEST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate LanguageIso MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6861fb5d-913d-443b-9289-abff218d86d3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate LanguageIso GENERIC_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "137294a6-50f4-477e-a945-433a4a9f9fd8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"GENERIC_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ERROR: null value in column\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TST\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete LanguageIso SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7694b967-1f19-4e62-85ec-ca46abeb22b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"TST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete LanguageIso ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "149b548f-b236-4be3-93e1-24ea99af0091",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language with code=TST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/languageIso/TST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"languageIso",
														"TST"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Provider",
									"item": [
										{
											"name": "Create Provider BUSINESS_API_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "43f9a9e9-0cfd-49b7-85c8-c2b8e69b94d0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"There should already be a provider setup\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eaf59941-3002-492b-b1a5-4d337a82ec36",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Provider SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "64aee28e-2f11-4de4-8b49-e3bdf6617f06",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.provider.code).to.eql(pm.environment.get(\"testCode\")+\"_PROVIDER\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.provider.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5ee38ef7-fb8f-42ae-8c48-dc3330bdeea4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PROVIDER\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"true\",\r\n        \"displayProvider\": \"true\",\r\n        \"displayCfAsXML\": \"true\",\r\n        \"displayPricePlans\": \"true\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayChargesPeriods\": \"true\",\r\n        \"displayFreeTransacInInvoice\": \"false\",\r\n        \"displayBillingCycle\": \"true\",\r\n        \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Provider SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d1f10593-11b8-4320-aea1-89b50ba3d531",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.provider.code).to.eql(pm.environment.get(\"testCode\")+\"_PROVIDER\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.provider.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "78291ed3-12f3-4a10-85fe-2db78096d460",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_PROVIDER\",\r\n  \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"INVALID\",\r\n    \"rounding\": \"5\",\r\n    \"invoiceConfiguration\": {\r\n      \"displaySubscriptions\": \"true\",\r\n      \"displayServices\": \"true\",\r\n      \"displayOffers\": \"true\",\r\n      \"displayEdrs\": \"true\",\r\n      \"displayProvider\": \"true\",\r\n      \"displayCfAsXML\": \"true\",\r\n      \"displayPricePlans\": \"true\",\r\n      \"displayDetail\": \"true\",\r\n      \"displayChargesPeriods\": \"true\",\r\n      \"displayFreeTransacInInvoice\": \"false\",\r\n      \"displayBillingCycle\": \"true\",\r\n      \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Provider INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2fd6b3a3-d674-4a46-851b-7e6c1bcdfd0a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"code\": \"{{testCode}}_PROVIDER\",\r\n  \"description\": \"{{testDescription}}\",\r\n    \"enterprise\": \"true\",\r\n    \"rounding\": \"INVALID\",\r\n    \"invoiceConfiguration\": {\r\n      \"displaySubscriptions\": \"true\",\r\n      \"displayServices\": \"true\",\r\n      \"displayOffers\": \"true\",\r\n      \"displayEdrs\": \"true\",\r\n      \"displayProvider\": \"true\",\r\n      \"displayCfAsXML\": \"true\",\r\n      \"displayPricePlans\": \"true\",\r\n      \"displayDetail\": \"true\",\r\n      \"displayChargesPeriods\": \"true\",\r\n      \"displayFreeTransacInInvoice\": \"false\",\r\n      \"displayBillingCycle\": \"true\",\r\n      \"displayOrders\": \"true\"\r\n    },\r\n    \"bankCoordinates\": {\r\n        \"iban\": \"30004 01234 12345678901 23\",\r\n        \"bic\": \"BNPAFRPPXXX\",\r\n        \"ics\": \"\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "852e2769-b489-4735-9ea8-009a750983de",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bdac7670-2e2f-4fe0-9a76-280bdea65e51",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Role",
									"item": [
										{
											"name": "CreateOrUpdate Role SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9785475-c6b8-4760-a88a-b47a26c0de05",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Role SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3848aa32-7770-4151-99eb-fad663f217ce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\"+pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.roleDto.name).to.eql(pm.environment.get(\"testCode\") + \"_ROLE\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.roleDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/role?roleName={{testCode}}_ROLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													],
													"query": [
														{
															"key": "roleName",
															"value": "{{testCode}}_ROLE"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Role ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1766f120-53b7-45b4-9e92-5117ace10816",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Role with role name=\"+pm.environment.get(\"testCode\")+\"_ROLE already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/role",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a56cf2ee-feec-4b17-9404-03158620fd3a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Role with name=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"cc-module-read\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/role",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Role SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d55491f3-d7be-4547-9349-e3ca7f1d74ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/role",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Role  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d4425e33-525e-440d-8299-aacd6e3e8eba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Role  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a08b41cc-b50b-485c-9785-1890fbd7f9c6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.roleDto.name).to.eql(pm.environment.get(\"testCode\") + \"_ROLE\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.roleDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/role?roleName={{testCode}}_ROLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													],
													"query": [
														{
															"key": "roleName",
															"value": "{{testCode}}_ROLE"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Role INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ba55fa01-741f-4ec2-a495-c809ff26e311",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of VALUE_STRING\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Role MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26c7f3dd-2e7f-47fd-854d-1b4996585ff9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: name.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{ \r\n\t\"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "023d0587-675d-4d6c-83d2-68aad5cef42a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Permission with name=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{testCode}}_ROLE\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"permission\": [\r\n        {\r\n            \"permission\": \"cc-module-read\",\r\n            \"name\": \"NOT_EXIST\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/role/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Role  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "467e61be-15c0-49b7-b22c-81b388bc43ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/role/{{testCode}}_ROLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"{{testCode}}_ROLE"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Role ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "212479df-6e90-4375-aafa-36ccc983a46c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Role with name=\"+pm.environment.get(\"testCode\")+\"_ROLE does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/role/{{testCode}}_ROLE",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role",
														"{{testCode}}_ROLE"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Tax",
									"item": [
										{
											"name": "CreateOrUpdate Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c48cb847-f2e3-466f-a443-fef5090cd15e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "480b45af-8371-4e60-8916-8b9ad8dfb9a0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.tax.code).to.eql(pm.environment.get(\"testCode\") + \"_TAX\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.tax.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/tax?taxCode={{testCode}}_TAX",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													],
													"query": [
														{
															"key": "taxCode",
															"value": "{{testCode}}_TAX"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9947f2d2-607b-4695-b801-cffd1756e202",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Tax with code=\" + pm.environment.get(\"testCode\") + \"_TAX already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Tax  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2c3b5e98-9ec0-4155-ac16-2413f1a77ebc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Tax with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "88a3cdb2-ceda-47ce-b8e9-e82928fe4737",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"percent\": \"30\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 30%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 30%\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef5c96ab-dc7a-43ae-b89b-02b9dd030552",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"percent\": \"30\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 30%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 30%\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Tax   SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "516d5c1d-21ca-4143-b6d4-0dcdff4bef27",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.tax.code).to.eql(pm.environment.get(\"testCode\") + \"_TAX\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.tax.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/tax?taxCode={{testCode}}_TAX",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax"
													],
													"query": [
														{
															"key": "taxCode",
															"value": "{{testCode}}_TAX"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4b1a4dd5-1441-49d7-af73-198f40fd0aeb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ed8fab7f-f88e-453e-9438-b355a937b283",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Language INVALID is not supported by the provider.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": null,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"INVALID\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9488d9d-7d53-4398-9663-e60d614c0ca1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: percent.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"{{testDescription}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Tax ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f232b268-99d2-4777-b2bd-3f633e4bbbfe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"AccountingCode with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_TAX\",\r\n    \"description\": \"TVA 20%\",\r\n    \"percent\": \"20\",\r\n    \"accountingCode\": \"NOT_EXIST\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"TVA 20%\"\r\n        },\r\n        {\r\n            \"languageCode\": \"ENG\",\r\n            \"description\": \"VAT 20%\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/tax/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Tax SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "93052b7d-c315-4c02-9b78-9e021cd04192",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/tax/{{testCode}}_TAX",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"{{testCode}}_TAX"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Tax  ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b74f4704-93e6-415e-9777-5c5c768a011b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Tax with code=\"+pm.environment.get(\"testCode\")+\"_TAX does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/tax/{{testCode}}_TAX",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"tax",
														"{{testCode}}_TAX"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice Type",
									"item": [
										{
											"name": "CreateOrUpdate Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b5154a71-eba8-4823-acaf-396a3aace94d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "637be1f9-76b2-4382-b8d5-1fa5501033c4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceTypeDto.code).to.eql(pm.environment.get(\"testCode\") + \"_IT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceTypeDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType?invoiceTypeCode={{testCode}}_IT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													],
													"query": [
														{
															"key": "invoiceTypeCode",
															"value": "{{testCode}}_IT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Invoice Type ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d7459fc1-901e-4996-b486-a9b17349c8b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=\" + pm.environment.get(\"testCode\") + \"_IT already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1687a35d-10c8-4e73-9c84-4280911aad7c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1b68f8c-bfce-4ebd-b8e5-35a872fb78b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58d0ef82-7700-453b-b63c-8b9ccf79991b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c99edba-2c00-44e2-a272-54a48f6197d7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal\" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceTypeDto.code).to.eql(pm.environment.get(\"testCode\") + \"_IT\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.invoiceTypeDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType?invoiceTypeCode={{testCode}}_IT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													],
													"query": [
														{
															"key": "invoiceTypeCode",
															"value": "{{testCode}}_IT"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7050ed4c-9359-4215-ad89-1d919832abf5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_IT\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": \"INVALID\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41a8b364-1f2e-40e3-ad3c-51b9702c2457",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a56a048d-9d9c-46ef-8841-0489ee2e5f47",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"EmailTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"manual\",\r\n    \"emailTemplateCode\": \"NOT_EXIST\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2e23d8fa-dacc-43db-9648-a54c91306757",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSequence with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"XX\",\r\n        \"invoiceSequenceCode\": \"NOT_EXIST\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"XX\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0361b1b7-1fd5-4a6e-badb-9c7804fb9322",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"NOT_EXIST\",\r\n    \"occTemplateNegativeCode\": \"INV_CRN\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"TMP\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"manual\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cddbc926-59fb-4dff-902b-415bb2ada201",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"OCCTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"occTemplateCode\": \"INV_STD\",\r\n    \"occTemplateNegativeCode\": \"NOT_EXIST\",\r\n    \"sequenceDto\": {\r\n        \"prefixEL\": \"XX\",\r\n        \"invoiceSequenceCode\": \"COM\"\r\n    },\r\n    \"matchingAuto\": false,\r\n    \"mailingType\": \"XX\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice Type SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "644a63ae-86d7-4a2c-9ed6-f584eddd1ee6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/{{testCode}}_IT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"{{testCode}}_IT"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Invoice Type ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a2f28bfe-a683-4545-8572-21a0ddc07ead",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=\"+pm.environment.get(\"testCode\")+\"_IT does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/{{testCode}}_IT",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"{{testCode}}_IT"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Payments",
							"item": [
								{
									"name": "Credit Category",
									"item": [
										{
											"name": "CreateOrUpdate Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b7794528-e467-4989-8a43-3765af1e0427",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Credit Category  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e494ef4-9e0d-423a-990c-69b626d63099",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.creditCategory.code).to.eql(pm.environment.get(\"testCode\") + \"_CrCat\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.creditCategory.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory?creditCategoryCode={{testCode}}_CrCat",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													],
													"query": [
														{
															"key": "creditCategoryCode",
															"value": "{{testCode}}_CrCat"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Credit Category ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "49d11d20-dabe-45d4-9756-d0fe24ef3a14",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=\" + pm.environment.get(\"testCode\") + \"_CrCat already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Credit Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6da644aa-cf53-4b6b-b2b2-e03d51ec0c22",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d979d6f5-fa35-4166-938a-764553c6355e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2178019-76a9-44da-b641-70fe19379576",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_CrCat\",\r\n    \"description\": \"{{testDescription}} updated\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7f48da57-f195-40cb-9d44-75067df24f1e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.creditCategory.code).to.eql(pm.environment.get(\"testCode\") + \"_CrCat\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.creditCategory.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory?creditCategoryCode={{testCode}}_CrCat",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory"
													],
													"query": [
														{
															"key": "creditCategoryCode",
															"value": "{{testCode}}_CrCat"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Credit Category SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a756ea7f-96d6-4ba9-99bd-594969de3135",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory/{{testCode}}_CrCat",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory",
														"{{testCode}}_CrCat"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Credit Category ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b42cebdc-8fbd-4902-ad0b-0e6e03e67511",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"CreditCategory with code=\" + pm.environment.get(\"testCode\") + \"_CrCat does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/creditCategory/{{testCode}}_CrCat",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"creditCategory",
														"{{testCode}}_CrCat"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "490fb928-d96a-4225-be1c-bcfca8a59ea5",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5580db19-6e8b-43d0-b720-eb8bc2d81b8e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Payment Gateway",
									"item": [
										{
											"name": "CreateOrUpdate Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "642f0783-cbda-400e-aedf-a723f693f95f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Payment Gateway  SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36932003-9dda-41dd-a506-c1987b700c63",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentGateway.code).to.eql(pm.environment.get(\"testCode\") + \"_PG\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentGateway.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_PG"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Payment Gateway ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aa22fe32-fe03-434c-8bd4-13aa803c9187",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=\" + pm.environment.get(\"testCode\") + \"_PG already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Payment Gateway ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14d59e65-9641-47a8-b37c-2c0ba36462a1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fde177b6-2371-4a0f-b3d1-93a898343c3c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7e682d97-20fa-475d-a6c7-42cf9405d01b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"type\": \"CUSTOM\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8bb1189d-8e4b-4659-b236-28a35646b026",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentGateway.code).to.eql(pm.environment.get(\"testCode\") + \"_PG\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentGateway.description).to.eql(pm.environment.get(\"testDescription\") + \" updated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_PG"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Gateway MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "901f0d65-1d10-4b60-8eda-eea83f6f066a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code, type, paymentMethodType.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Gateway INVALID_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e7bb317d-b7d0-4af0-a630-b59aa49e06de",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `org.meveo.model.payments.PaymentGatewayTypeEnum` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PG\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"type\": \"INVALID\",\r\n    \"paymentMethodType\": \"CHECK\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Payment Gateway SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d1572ce-d6fd-47ca-a7ee-f6ef72e1bb38",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_PG"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Payment Gateway ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "509f8f82-2ef6-4b7a-865d-1e9b53454428",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentGateway with code=\" + pm.environment.get(\"testCode\") + \"_PG does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentGateway?code={{testCode}}_PG",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentGateway"
													],
													"query": [
														{
															"key": "code",
															"value": "{{testCode}}_PG"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2f5005bc-c103-4797-9acb-3c025d1b8a96",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "fe8a4bc1-dbe0-4b78-af72-4bd33ba83cea",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Payment Schedule Template",
									"item": [
										{
											"name": "CreateOrUpdate Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4ca07c8c-a3cc-45c0-a8e4-65cb19e81707",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"1\");",
															"    pm.globals.set(\"id_PST\", jsonData.message);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b812bfa-8f36-4827-bb9d-b845d34d062b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.code).to.eql(pm.environment.get(\"testCode\") + \"_PST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.description).to.eql(pm.environment.get(\"testDescription\"));",
															"});",
															"pm.test(\"Id is equal \"+pm.globals.get(\"id_PST\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.id+\"\").to.eql(pm.globals.get(\"id_PST\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													],
													"query": [
														{
															"key": "paymentScheduleTemplateCode",
															"value": "{{testCode}}_PST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Payment Schedule Template ENTITY_ALREADY_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c83fb4f3-76cd-413f-aaa6-2717d5f5f42b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(403);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_ALREADY_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=\" + pm.environment.get(\"testCode\") + \"_PST already exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Payment Schedule Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "759539e5-b935-4e12-b993-d859e7dfe353",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"NOT_EXIST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "76f033e9-b6aa-483f-91c0-7d6522d632cc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd7662ae-b16e-473a-9354-6fd753885bba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}} updated\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Read Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "720afd4a-584c-4e60-bd09-90f590131b1e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Code is equal \" + pm.environment.get(\"testCode\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.code).to.eql(pm.environment.get(\"testCode\") + \"_PST\");",
															"});",
															"",
															"pm.test(\"Description is equal \" + pm.environment.get(\"testDescription\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.description).to.eql(pm.environment.get(\"testDescription\")+\" updated\");",
															"});",
															"pm.test(\"Id is equal \"+pm.globals.get(\"id_PST\"), function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.paymentScheduleTemplateDto.id+\"\").to.eql(pm.globals.get(\"id_PST\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													],
													"query": [
														{
															"key": "paymentScheduleTemplateCode",
															"value": "{{testCode}}_PST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template MISSING_PARAMETER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de332fe1-c043-4cd0-a06a-0c7d14e6f182",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"MISSING_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"The following parameters are required or contain invalid values: code, calendarCode, serviceTemplateCode, paymentDayInMonth, amount, paymentLabel, advancePaymentInvoiceTypeCode, advancePaymentInvoiceSubCategoryCode, generateAdvancePaymentInvoice, doPayment.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"{{testDescription}}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_amount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c4d95b78-92d7-4eb5-ab89-1263861603c2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}_PST\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"INVALID\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_doPayment",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "496fb1e8-969d-4238-ad97-e573bca55beb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Boolean` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"INVALID\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_generateAdvancePaymentInvoice",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4cd19e2b-824b-4ef4-a41a-c37507cdb1a2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.math.BigDecimal` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"INVALID\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template INVALID_PARAMETER_paymentDateInMonth",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35e20242-d094-441f-a3d9-4e98d9e8d498",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize value of type `java.lang.Integer` from String\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"INVALID\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_advPaymentInvSubCat",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c08949e-b294-4203-b566-0fc03257a9c5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceSubCategory with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"NOT_EXIST\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_advPaymentInvType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "582110db-c6d6-44d5-a1df-5189625aa336",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"InvoiceType with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"NOT_EXIST\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_calendarCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "02e815b7-4fe1-4b08-871f-83b439497f9f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Calendar with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"NOT_EXIST\",\r\n    \"serviceTemplateCode\": \"SE_REC_FLAT_REBATE\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate Payment Schedule Template ENTITY_DOES_NOT_EXIST_serviceTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "975d761d-7113-4515-b91d-016d7417d3ca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceTemplate with code=NOT_EXIST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{testCode}}\",\r\n    \"description\": \"{{testDescription}}\",\r\n    \"calendarCode\": \"CAL_CLASSIC_MONTHLY_1ST\",\r\n    \"serviceTemplateCode\": \"NOT_EXIST\",\r\n    \"paymentDayInMonth\": \"1\",\r\n    \"amount\": \"100\",\r\n    \"paymentLabel\": \"Test Label\",\r\n    \"advancePaymentInvoiceTypeCode\": \"CLASSIC_ADJ\",\r\n    \"advancePaymentInvoiceSubCategoryCode\": \"CMP_DATA\",\r\n    \"generateAdvancePaymentInvoice\": \"true\",\r\n    \"doPayment\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Payment Schedule Template SUCCESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "43a03a04-93b7-4902-8a2a-d48c98702957",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													],
													"query": [
														{
															"key": "paymentScheduleTemplateCode",
															"value": "{{testCode}}_PST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Payment Schedule Template ENTITY_DOES_NOT_EXISTS_EXCEPTION",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "515acccb-3272-4290-b05d-cd07586ccf30",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"PaymentScheduleTemplate with code=\" + pm.environment.get(\"testCode\") + \"_PST does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/payment/paymentScheduleTemplate?paymentScheduleTemplateCode={{testCode}}_PST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"payment",
														"paymentScheduleTemplate"
													],
													"query": [
														{
															"key": "paymentScheduleTemplateCode",
															"value": "{{testCode}}_PST"
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "dff065ac-3dac-4792-bc66-510ac58f18ca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6c0f8cb7-703c-443a-a6a7-9b337a16f2bb",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Custom",
							"item": [
								{
									"name": "Entity Customization",
									"item": [],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Custom Table",
									"item": [],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Url",
					"item": [
						{
							"name": "Index",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ab9b42c-e972-4e43-ae68-1c013ddc4edd",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/index.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"index.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/providers/providerSelfDetail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9f7c85e-444a-4b8a-937c-a804e38630fe",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/providers/providerSelfDetail.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"providers",
										"providerSelfDetail.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/providerContacts/providerContacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78eb1c34-4b55-40a5-aef2-36bb2f5eac38",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/providerContacts/providerContacts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"providerContacts",
										"providerContacts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/meveoUsers/users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a6e4c45-dfb1-4acf-b07d-96d8f7de19c8",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/meveoUsers/users.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"meveoUsers",
										"users.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/userRoles/userRoles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2922386f-55ce-4f54-bed3-7108da317b03",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/userRoles/userRoles.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"userRoles",
										"userRoles.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/userGroupHierarchy/userGroupHierarchy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "604c6777-0781-4af9-8e19-e8388167488c",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/userGroupHierarchy/userGroupHierarchy.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"userGroupHierarchy",
										"userGroupHierarchy.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/sellers/sellers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "105ac6c5-3f3e-4313-90e6-7f75b8471224",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/sellers/sellers.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"sellers",
										"sellers.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/title/titles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9553ef1-fcbb-48b2-8379-c5812ea72957",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/title/titles.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"title",
										"titles.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/customerBrands/customerBrands",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "32903e24-f899-4905-88b7-0923b0f94091",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/customerBrands/customerBrands.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"customerBrands",
										"customerBrands.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/customerCategories/customerCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c7d8d73-224f-4808-ac12-98aabf4ae14b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/customerCategories/customerCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"customerCategories",
										"customerCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/creditCategories/creditCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e1d5273-5f9c-435e-9d65-be0b90e618bc",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/creditCategories/creditCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"creditCategories",
										"creditCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/occTemplates/occTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df071d61-ecc0-49e9-bdcb-dc7c6b78cd5c",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/occTemplates/occTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"occTemplates",
										"occTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/tradingLanguages/tradingLanguages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3334a3ae-803d-426a-8384-a6860255a713",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/tradingLanguages/tradingLanguages.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"tradingLanguages",
										"tradingLanguages.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/tradingCurrencies/tradingCurrencies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4818a0f4-fc9a-487a-a0cc-023c17a559ca",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/tradingCurrencies/tradingCurrencies.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"tradingCurrencies",
										"tradingCurrencies.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/tradingCountries/tradingCountries",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "867f2ce2-091c-48fa-bceb-6cc32d34db68",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/tradingCountries/tradingCountries.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"tradingCountries",
										"tradingCountries.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/multiLanguageField/multiLanguageFields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae4ddf42-cad6-4586-95c2-9c609fba7db3",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/multiLanguageField/multiLanguageFields.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"multiLanguageField",
										"multiLanguageFields.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/communication/emailTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "796388fc-91f4-4192-9ba4-ef7a37a56975",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/communication/emailTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"communication",
										"emailTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/calendars/calendars",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "24df2c63-9df6-49d1-b8ba-973a381c9015",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/calendars/calendars.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"calendars",
										"calendars.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/billingCycles/billingCycles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51b143f9-46ad-4544-98a9-3b8e0735fe5f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/billingCycles/billingCycles.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"billingCycles",
										"billingCycles.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/taxes/taxes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b86e504-bff0-4119-86a0-0dc447d5a230",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/taxes/taxes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"taxes",
										"taxes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/invoiceCategories/invoiceCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f751f77e-106e-4911-8b43-a235bb43b7fd",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/invoiceCategories/invoiceCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"invoiceCategories",
										"invoiceCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/invoiceSubCategories/invoiceSubCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bbe4b3de-403e-4cfe-b774-869b75a2f35c",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/invoiceSubCategories/invoiceSubCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"invoiceSubCategories",
										"invoiceSubCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoiceTypes/invoiceTypes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c6937c1-61e9-41df-b399-25d1b2edf639",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoiceTypes/invoiceTypes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoiceTypes",
										"invoiceTypes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoiceSequences/invoiceSequences",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d78f92a6-2bb1-4918-8899-ee2246515fb9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoiceSequences/invoiceSequences.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoiceSequences",
										"invoiceSequences.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/terminationReason/terminationReasons",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2796361-297f-4486-a7b6-1e6e7fa7f36d",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/terminationReason/terminationReasons.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"terminationReason",
										"terminationReasons.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/channels/channels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1521537-8ca3-441b-9349-91bf6029fa3b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/channels/channels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"channels",
										"channels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/offerTemplates/offerTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64a6c782-a0cc-48ff-95b1-d16223a364e3",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/offerTemplates/offerTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"offerTemplates",
										"offerTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/offerTemplateCategories/offerTemplateCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "abe75b66-00d5-498a-b041-ef92f18a1797",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/offerTemplateCategories/offerTemplateCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"offerTemplateCategories",
										"offerTemplateCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/serviceTemplates/serviceTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89008c54-1a1a-495e-a40b-f5a542c14693",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/serviceTemplates/serviceTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"serviceTemplates",
										"serviceTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/chargeTemplates/chargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9207635e-70d4-4051-b268-55fce1e7a83b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/chargeTemplates/chargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"chargeTemplates",
										"chargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/recurringChargeTemplates/recurringChargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dff327b5-64d9-4c4c-8ff6-d7c57fe718d2",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/recurringChargeTemplates/recurringChargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"recurringChargeTemplates",
										"recurringChargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/usageChargeTemplates/usageChargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdbfe281-28ce-4baa-9fab-2ffad5ea791a",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/usageChargeTemplates/usageChargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"usageChargeTemplates",
										"usageChargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/oneShotChargeTemplates/oneShotChargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f64d4962-1c34-428e-8c57-cf36ab81fffb",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/oneShotChargeTemplates/oneShotChargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"oneShotChargeTemplates",
										"oneShotChargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/counterTemplates/counterTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2b3ca09b-98a0-4391-b55b-235d05f41583",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/counterTemplates/counterTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"counterTemplates",
										"counterTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/productTemplates/productTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60ec5b52-9ec3-4e03-a2a0-e02965ba61fa",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/productTemplates/productTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"productTemplates",
										"productTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/productChargeTemplates/productChargeTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e09968f-5066-4f25-868d-58e9b6ebffa9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/productChargeTemplates/productChargeTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"productChargeTemplates",
										"productChargeTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/bundleTemplates/bundleTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84d2e646-4051-4b14-bdb3-0eadf47b34c9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/bundleTemplates/bundleTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"bundleTemplates",
										"bundleTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/triggeredEdrTemplates/triggeredEdrTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df2139e3-d01c-4ea1-8073-829abfc25011",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/triggeredEdrTemplates/triggeredEdrTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"triggeredEdrTemplates",
										"triggeredEdrTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/walletTemplates/walletTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fcb04db4-ff2f-427c-976c-d75a1c697b9f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/walletTemplates/walletTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"walletTemplates",
										"walletTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/businessOfferModels/businessOfferModels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d84c895-93b0-4245-a2de-2d308d492238",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/businessOfferModels/businessOfferModels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"businessOfferModels",
										"businessOfferModels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/businessServiceModels/businessServiceModels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4b079e8-fc9a-4e1f-8e92-4d49c97e6df8",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/businessServiceModels/businessServiceModels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"businessServiceModels",
										"businessServiceModels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/businessProductModels/businessProductModels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5eb42b28-627e-4790-944a-0e0a5c589edb",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/businessProductModels/businessProductModels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"businessProductModels",
										"businessProductModels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/pricePlanMatrixes/pricePlanMatrixes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b824b5f8-d85e-4829-9177-37f3c7a69164",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/pricePlanMatrixes/pricePlanMatrixes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"pricePlanMatrixes",
										"pricePlanMatrixes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalog/discountPlans/discountPlans",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38d48a9b-9861-444b-958e-652680f9cc83",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/catalog/discountPlans/discountPlans.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"catalog",
										"discountPlans",
										"discountPlans.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/customers/customerSearch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23cf5595-7604-4252-a80a-901ecf3fef6d",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/customers/customerSearch.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"customers",
										"customerSearch.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/customers/customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5ff80b6-a900-4463-a624-af86e0a5123a",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/customers/customers.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"customers",
										"customers.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/customerAccounts/customerAccounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45ff68e5-6784-4c25-b894-b33344277f2b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/customerAccounts/customerAccounts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"customerAccounts",
										"customerAccounts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/billingAccounts/billingAccounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c1a2bd6-2c3b-4959-88ac-40a8b375d38b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/billingAccounts/billingAccounts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"billingAccounts",
										"billingAccounts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/userAccounts/userAccounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7804bd24-e0aa-44cb-9292-45ebdf9fc974",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/userAccounts/userAccounts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"userAccounts",
										"userAccounts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/crmAccounts/crmAccounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27e73ced-c496-4f04-be35-732276f68df5",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/crmAccounts/crmAccounts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"crmAccounts",
										"crmAccounts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/subscriptions/subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c1467db-4229-45a0-bf84-628c91cdaab6",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/subscriptions/subscriptions.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"subscriptions",
										"subscriptions.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "medina/access/access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "886057f4-e812-440e-b2c3-60a74287f555",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/medina/access/access.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"medina",
										"access",
										"access.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "crm/businessAccountModels/businessAccountModels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3150fadb-26a2-4da8-9a86-0b9c74919dcd",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/crm/businessAccountModels/businessAccountModels.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"crm",
										"businessAccountModels",
										"businessAccountModels.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "quote/quotes/quotes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51fe710c-6d68-4066-bebd-78d33940037f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/quote/quotes/quotes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"quote",
										"quotes",
										"quotes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "order/orders/orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a45267e4-9a3b-45e4-94e1-fa4691b224ce",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/order/orders/orders.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"order",
										"orders",
										"orders.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "rating/edr/edrList",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1eff938b-a03f-41f2-b003-8a8517e3576f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/rating/edr/edrList.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"rating",
										"edr",
										"edrList.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "medina/importedFile/importedFiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8443b967-b72b-44df-9de7-1702641dda9e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/medina/importedFile/importedFiles.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"medina",
										"importedFile",
										"importedFiles.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/walletOperations/walletOperations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "715549a0-7e83-4cd6-8fe0-c123257cae91",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/walletOperations/walletOperations.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"walletOperations",
										"walletOperations.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/ratedTransactions/ratedTransactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3743ed9f-4f67-4b94-9f51-a04706d92697",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/ratedTransactions/ratedTransactions.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"ratedTransactions",
										"ratedTransactions.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoicing/billingRuns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9450a82-e7d2-472a-b8d4-d76b33669cd4",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoicing/billingRuns.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoicing",
										"billingRuns.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoicing/recurringInvoicing",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c2192be-3eff-438d-81ec-e5f8c7032058",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoicing/recurringInvoicing.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoicing",
										"recurringInvoicing.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoicing/exceptionelInvoicing",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a207e44d-4d0a-4db7-89ec-80e4e4272ecc",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoicing/exceptionelInvoicing.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoicing",
										"exceptionelInvoicing.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoices/invoices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e40a23b-1a33-4510-b5ac-a8801aa926a3",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoices/invoices.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoices",
										"invoices.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/invoices/createInvoiceDetail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "18b6d52f-5fc4-4c85-8176-db889702613b",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/invoices/createInvoiceDetail.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"invoices",
										"createInvoiceDetail.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/dDRequestBuilders/dDRequestBuilders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8e5ebf5-59d3-4c8c-9a63-fb59239640bd",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/dDRequestBuilders/dDRequestBuilders.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"dDRequestBuilders",
										"dDRequestBuilders.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/dDRequestBuilders/dDRequestBuilders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "caeebaf0-8e38-400d-993c-dba68d400d93",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/dDRequestBuilders/dDRequestBuilders.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"dDRequestBuilders",
										"dDRequestBuilders.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/ddrequestLotOp/ddrequestLotOps",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3949cbac-2dea-498d-a2c5-6a9ff7783ce6",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/ddrequestLotOp/ddrequestLotOps.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"ddrequestLotOp",
										"ddrequestLotOps.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/ddrequestLot/ddrequestLots",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bee0c176-96b6-4020-b8a4-291b054fd41d",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/ddrequestLot/ddrequestLots.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"ddrequestLot",
										"ddrequestLots.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/paymentGateways/paymentGateways",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "000cef97-724f-493f-8184-2dc966ef69dc",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/paymentGateways/paymentGateways.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"paymentGateways",
										"paymentGateways.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "payments/paymentScheduleTemplates/paymentScheduleTemplates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba479869-d09b-428e-88d0-7e9b9812a6ec",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/payments/paymentScheduleTemplates/paymentScheduleTemplates.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"payments",
										"paymentScheduleTemplates",
										"paymentScheduleTemplates.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/workflow/genericWorkflows",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10186dd9-abeb-423b-80a9-a6de4ce06f8f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/workflow/genericWorkflows.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"workflow",
										"genericWorkflows.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/workflow/workflowInstanceHistories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0cb25e88-516d-4f5d-9605-5b9baa5438ab",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/workflow/workflowInstanceHistories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"workflow",
										"workflowInstanceHistories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/accountingCodes/accountingCodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7dfde96-fd5f-4b7d-8a96-14d7dc28e4a7",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/accountingCodes/accountingCodes.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"accountingCodes",
										"accountingCodes.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "billing/generalLedgers/generalLedgers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f70fa7b9-527f-40ea-83c2-22d2a5c2f0c4",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/billing/generalLedgers/generalLedgers.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"billing",
										"generalLedgers",
										"generalLedgers.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/revenueRecognitionRules/revenueRecognitionRules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bfcea92d-e799-44d8-b08c-21d52afd1a1f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/revenueRecognitionRules/revenueRecognitionRules.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"revenueRecognitionRules",
										"revenueRecognitionRules.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/revenueSchedules/revenueSchedules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4e9c3d3-152f-4a6a-adf8-b73ab341a781",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/revenueSchedules/revenueSchedules.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"revenueSchedules",
										"revenueSchedules.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/reportExtracts/reportExtracts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d74c8717-b1a1-425f-bd04-523f71aa2fb4",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/reportExtracts/reportExtracts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"reportExtracts",
										"reportExtracts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/reportExtractHistories/reportExtractHistories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0a5f66e-e1a3-41a7-a22a-fe9e29f9d2ef",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/reportExtractHistories/reportExtractHistories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"reportExtractHistories",
										"reportExtractHistories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "finance/accountingWriting/accountingWritings",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41aa412e-495b-46ed-ac4d-bd3ac205ef10",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/finance/accountingWriting/accountingWritings.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"finance",
										"accountingWriting",
										"accountingWritings.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "reporting/dwh/measurableQuantities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0a7847a-a73a-45b6-aaf0-6691570bca81",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/reporting/dwh/measurableQuantities.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"reporting",
										"dwh",
										"measurableQuantities.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "reporting/dwh/measuredValueDetail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33fd712b-b174-4ffb-9277-3e41a734eda7",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/reporting/dwh/measuredValueDetail.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"reporting",
										"dwh",
										"measuredValueDetail.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "reporting/dwh/charts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3116a508-4f43-4593-bec2-bea7eaa2ba97",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/reporting/dwh/charts.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"reporting",
										"dwh",
										"charts.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/job/jobInstances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aaf12027-bbab-4c4f-8f34-92824ccf4f9a",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/job/jobInstances.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"job",
										"jobInstances.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/job/timerEntities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "90b2ee53-4833-4774-ae03-1d564ffb05d7",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/job/timerEntities.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"job",
										"timerEntities.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/meveoInstance/meveoInstances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fa75758-7045-4f05-b881-51cd88342926",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/meveoInstance/meveoInstances.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"meveoInstance",
										"meveoInstances.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/module/modules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9cd2e4eb-3622-4643-927d-1bcced84802a",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/module/modules.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"module",
										"modules.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/customEntities/customizedEntities",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d63c404f-a97f-452e-bef6-ba54c50004f4",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/customEntities/customizedEntities.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"customEntities",
										"customizedEntities.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/scriptInstanceCategories/scriptInstanceCategories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7cbd2-9128-4040-8001-2acaef8839ce",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/scriptInstanceCategories/scriptInstanceCategories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"scriptInstanceCategories",
										"scriptInstanceCategories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/scriptInstances/scriptInstances",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9184aca5-47f2-433c-8841-7c6a0e25b5cf",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/scriptInstances/scriptInstances.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"scriptInstances",
										"scriptInstances.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/filters/filters/filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1144a5a-6b51-479b-b231-a7bb066710e9",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/filters/filters/filters.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"filters",
										"filters",
										"filters.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/notifications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86b45eb9-e114-4dfe-a4b0-b4c0d6945728",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/notifications.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"notifications.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/webHooks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "abea7d52-f43c-4982-a376-0eebf7b16e4e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/webHooks.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"webHooks.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/emailNotifications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2322043b-365e-41fb-aeae-02cfb5d627ea",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/emailNotifications.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"emailNotifications.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/jobTriggers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a273ea7-c4af-4e45-8ead-b3b4cba8a308",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/jobTriggers.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"jobTriggers.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/notificationHistories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c0af22a-c513-4fc5-94c4-31d9e1676b8f",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/notificationHistories.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"notificationHistories.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "notification/inboundRequests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4881ca33-dff2-42aa-9b32-7b3f83563b4e",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/notification/inboundRequests.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"notification",
										"inboundRequests.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/export/import",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "472a2355-9f5f-41f6-8174-52b2c4b014b1",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/export/import.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"export",
										"import.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/export/export",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2abdcbe6-d9e5-48f2-9fef-697f53b3a290",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/export/export.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"export",
										"export.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/auditLogs/auditConfiguration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf0b416f-4fa3-4e90-b6a2-4d691b4e62fc",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/auditLogs/auditConfiguration.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"auditLogs",
										"auditConfiguration.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "admin/auditLogs/auditLogs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f8e790d-dbdf-406e-bd48-a92fc54478ca",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/admin/auditLogs/auditLogs.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"admin",
										"auditLogs",
										"auditLogs.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "reporting/cache/caches",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e659dff0-4110-4493-8542-684d4dd2cfb6",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/reporting/cache/caches.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"reporting",
										"cache",
										"caches.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "index/fullTextSearch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33504a53-8444-4b04-b997-649363a7a892",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/index/fullTextSearch.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"index",
										"fullTextSearch.jsf"
									]
								}
							},
							"response": []
						},
						{
							"name": "index/index",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "75443d76-eb45-4f39-b715-e5db901703df",
										"exec": [
											"pm.test(\"Check Code\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{opencell.password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{opencell.username}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{opencell.base}}/pages/index/index.jsf",
									"host": [
										"{{opencell.base}}"
									],
									"path": [
										"pages",
										"index",
										"index.jsf"
									]
								}
							},
							"response": []
						}
					],
					"description": "This will run a GET on the admin pages and check if a proper status 200 is returned. ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6ca8031c-21bc-4848-9efc-da49c9921f94",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "47729dc9-5a29-4968-8763-a65bda6f1125",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Scenarios",
					"item": [
						{
							"name": "Setup Base Data",
							"item": [
								{
									"name": "Cleanup data - clear customizations",
									"item": [
										{
											"name": "Clear Seller Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "54cbdd15-5264-4123-a827-359701bc50e3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.admin.Seller\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Customer Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dd3d2108-2c93-455f-82cb-810f89b6952b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.crm.Customer\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Customer Account Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab2707c7-33c7-4e46-a252-ebdb98c7eeba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.payments.CustomerAccount\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Billing Account Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f64a64f5-ee93-4cfd-b24b-a2653244f70e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.BillingAccount\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear User Account Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9dcf2dc3-5e4f-43aa-b7bd-87e5426ed2ca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.UserAccount\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Subscription Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0197a723-d221-42c0-a4f9-069dc08de49a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Subscription\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Access Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7eec257c-e448-4741-9d25-60f7f2c91e96",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.mediation.Access\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Provider Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4173cd7f-78e0-4a0d-99ed-d12ef8f9d627",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.crm.Provider\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Product Template Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de9bbf56-fe5f-464d-928a-68fe4fcb4602",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ProductTemplate\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Product Instance Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aaae2a6b-c89b-4740-9ce7-adbf7ef1e21e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.ProductInstance\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Service Template Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b13c3946-adbc-4335-9cb2-aecd451cd7a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ServiceTemplate\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Offer Template  Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d789d00b-23e7-49af-ba03-60de3630dde2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.OfferTemplate\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Charge Template  Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b98bd2f8-373c-412d-ae78-2c13f48859a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.ChargeTemplate\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Price Plan Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "babc6a83-c687-4bba-9442-a0da4b8739a7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.catalog.PricePlanMatrix\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Invoice Category Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2717d90d-038c-4526-bc0b-981d2d1fb2ce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.InvoiceCategory\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Invoice SubCategory Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7ee48049-4836-46f0-ab4e-694e1f2e97d0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.payments.AccountOperation\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Account Operation Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5480ac81-6e39-4bc7-99cb-ee22806aa29b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.InvoiceSubCategory\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Invoice Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9cf61498-f6ef-43e7-a530-92ed21766142",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Invoice\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Tax Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b32c7b5f-a8da-425e-9727-ec9afe734ccd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.Tax\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Billing Cycle Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6379e1f5-5a17-4143-aa38-303831da2a4e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.model.billing.BillingCycle\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clear Purge Job Customization",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f33f176-bd07-4848-86f3-4b7cc4545995",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"classname\": \"org.meveo.admin.job.PurgeJob\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/customize",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"customize"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clean up data - restore provider and configuration",
									"item": [
										{
											"name": "Update provider",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bb005af7-9444-4191-a3d7-5009640162e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"demo\",\r\n    \"currency\": \"AFA\",\r\n    \"country\": \"AD\",\r\n    \"language\": \"DEU\",\r\n    \"multiCurrency\": \"true\",\r\n    \"multiCountry\": \"true\",\r\n    \"multiLanguage\": \"true\",\r\n    \"enterprise\": \"true\",\r\n    \"levelDuplication\": \"false\",\r\n    \"rounding\": \"8\",\r\n    \"invoiceRounding\": \"2\",\r\n    \"prepaidReservationExpirationDelayinMillisec\": \"60000\",\r\n    \"bankCoordinates\": {\r\n        \"bankCode\": \"SGMB\",\r\n        \"branchCode\": \"12345\",\r\n        \"accountNumber\": \"33333333333\",\r\n        \"key\": \"11\",\r\n        \"iban\": \"11\",\r\n        \"bic\": \"11\",\r\n        \"accountOwner\": \"owner\",\r\n        \"bankName\": \"SGMB\",\r\n        \"bankId\": \"11\",\r\n        \"issuerNumber\": \"1111\",\r\n        \"issuerName\": \"DEMO\"\r\n    },\r\n    \"recognizeRevenue\": \"false\",\r\n    \"invoiceConfiguration\": {\r\n        \"displaySubscriptions\": \"true\",\r\n        \"displayServices\": \"true\",\r\n        \"displayOffers\": \"true\",\r\n        \"displayEdrs\": \"false\",\r\n        \"displayProvider\": \"false\",\r\n        \"displayCfAsXML\": \"false\",\r\n        \"displayPricePlans\": \"false\",\r\n        \"displayDetail\": \"true\",\r\n        \"displayBillingCycle\": \"false\",\r\n        \"displayFreeTransacInInvoice\": \"true\",\r\n        \"displayOrders\": \"false\",\r\n        \"displayWalletOperations\": \"false\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/provider",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"provider"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set securedEntities=false - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8520c39b-f484-4df0-b450-bca771b83bce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"property\": \"secured.entities.enabled\",\r\n\t\"value\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/configurations/setProperty",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"configurations",
														"setProperty"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set service.allowMultiInstantiation=false - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f2fe25c2-e4df-493c-b412-1288840d4326",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/configurations/setProperty",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"configurations",
														"setProperty"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Clean up data - user and ES",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "67a24fe6-e18c-4ee8-8c04-43ef6ad0ee29",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"{{opencell.username}}\",\r\n    \"password\": \"{{opencell.password}}\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\"administrateur\"],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Clean and reindex Full text - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7a415d63-bcd9-4073-8a4b-fbb61099d693",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.superpassword}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.superusername}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuc3VwZXJhZG1pbjpvcGVuY2VsbC5zdXBlcmFkbWlu"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/filteredList/reindex",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"filteredList",
														"reindex"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Configuration: InvType, BC and Seller",
									"item": [
										{
											"name": "Create InvoiceType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c46e4644-8cc1-4c03-8f9f-666f3ec0930d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_TEST-Type\",\r\n\t\"description\": \"Invoice Test Type\",\r\n\t\"occTemplateCode\": \"INV_STD\",\r\n\t\"sequenceDto\": {\r\n\t\t\"prefixEL\": \"Fact_\",\r\n\t\t\"sequenceSize\": \"9\"\r\n\t},\r\n\t\"matchingAuto\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BillingCycle",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aca7447d-e3fb-49ef-8826-ff9d3e39c751",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"CYC_INV_MT_1\",\r\n\t\"description\": \"Monthly Invoice Cycle 1\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"2\",\r\n\t\"invoiceDateDelay\": \"4\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"invoiceTypeCode\": \"{{baseEntityPrefix}}_TEST-Type\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BillingCycle 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bc0c869e-5d46-481c-9842-de8375ef12ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"CYC_INV_MT_3\",\r\n\t\"description\": \"Monthly Invoice Cycle 3\",\r\n\t\"transactionDateDelay\": \"0\",\r\n\t\"invoiceDateProductionDelay\": \"0\",\r\n\t\"dueDateDelay\": \"2\",\r\n\t\"invoiceDateDelay\": \"4\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"dueDateDelayEL\": \"#{ba.id + invoice.billingAccount.id}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "215d55f1-42bb-4a57-99a6-7083821ce5a0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "    {\r\n    \t\"code\": \"SELLER_FR\",\r\n    \t\"description\": \"France Seller\",\r\n    \t\"currencyCode\": \"EUR\",\r\n    \t\"languageCode\": \"FRA\",\r\n    \t\"parentSeller\": \"MAIN_SELLER\",\r\n    \t\"invoiceTypeSequences\": {\r\n    \t\t\"{{baseEntityPrefix}}_TEST-Type\": {\r\n    \t\t\t\"prefixEL\": \"SellFact_\",\r\n    \t\t\t\"sequenceSize\": 9,\r\n    \t\t\t\"currentInvoiceNb\": 9\r\n    \t\t}\r\n    \t}\r\n    }"
												},
												"url": {
													"raw": "{{opencell.url}}/seller/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update InvoiceType COM Sequence",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "35691242-470e-4aa7-86ae-820c9b5e63ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"COM\",\n    \"occTemplateCode\": \"INV_STD\",\n    \"sequenceDto\": {\n        \"prefixEL\": \"COM_\",\n        \"sequenceSize\": \"9\"\n    },\n    \"matchingAuto\": \"false\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Catalog: Charges, Services, Offer, PP, Counters, Wallets",
									"item": [
										{
											"name": "Create Tax Class 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e436d834-7a81-4e95-99ae-2829fc8f132a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_taxClass\",\r\n    \"description\": \"Tax class for {{baseEntityPrefix}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax Class 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e690558d-415a-4cf0-82ed-9f3da73ca1ab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_taxClass2\",\r\n    \"description\": \"Tax class for {{baseEntityPrefix}} 2\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxClass/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxClass",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax Mapping",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "db1f96b4-8f63-4307-bc19-07f3164b051d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"accountTaxCategoryCode\": \"Tax category\",\r\n    \"chargeTaxClassCode\": \"{{baseEntityPrefix}}_taxClass\",\r\n    \"taxCode\": \"TAX_18\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/taxMapping/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxMapping",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Tax Category 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "56b8aacc-7587-4919-bb2a-23cf1efca0ce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\":\"{{baseEntityPrefix}}_taxCategory2\",\r\n\t\"description\":\"Tax category 2\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/taxCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"taxCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create PrepaidWallet",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab725f2a-8b0d-4092-bd87-539c1251432c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PPW1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PrepaidPWallet_Description\",\r\n\t\"walletType\": \"PREPAID\",\r\n\t\"consumptionAlertSet\": \"false\",\r\n\t\"fastRatingLevel\": \"1\",\r\n\t\"lowBalanceLevel\": \"2\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/wallet/template/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"wallet",
														"template",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Counter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef871af0-2ba7-4c6f-bd59-3508ef124ce8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CT1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CounterTemplate_Description\",\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"unity\": \"Quantity\",\r\n\t\"type\": \"USAGE\",\r\n\t\"ceiling\": \"1\",\r\n\t\"disabled\": \"false\",\r\n\t\"counterLevel\": \"BA\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/counterTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"counterTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create TriggeredEDR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c5b18ba4-d2ab-47f0-8ded-4f2ed86e0474",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_EDR1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_Triggered_EDR_DESC\",\r\n\t\"quantityEl\": \"#{op.amountWithoutTax}\",\r\n\t\"param1El\": \"#{edr.parameter1}\",\r\n\t\"param2El\": \"#{edr.parameter2}\",\r\n\t\"param3El\": \"#{edr.parameter3}\",\r\n\t\"param4El\": \"#{edr.parameter4}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/triggeredEdr/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"triggeredEdr",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c58410a8-4f1a-452c-9a98-99b55d1323e7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n\t\"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot - Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "898dbbf5-03f5-4c65-8dce-d73a1957a078",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"true\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n\t\"immediateInvoicing\": \"false\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot - Termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38079342-5e7a-4d61-85b1-27375d47214a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Termination Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"oneShotChargeTemplateType\": \"TERMINATION\",\r\n\t\"immediateInvoicing\": \"false\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot - Other",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "85f0c3d8-2436-48e2-9149-f07b99fda23a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"true\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}s-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"OTHER\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Usage 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cf6424bc-b665-477a-83a7-40965c0e3d4b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE\",\r\n\t\"priority\": \"1\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"filterExpression\": \"#{ci.chargeTemplate.code.equals('{{baseEntityPrefix}}_USAGE1')}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d10b634c-660c-4196-891c-ae1fdced618c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_REC1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateSubscriptions\": {\r\n\t\t\"serviceChargeTemplateSubscription\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OS1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateTerminations\": {\r\n\t\t\"serviceChargeTemplateTermination\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OST1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0b8bcdbf-a839-4098-b75e-343073901ad5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n    \"description\": \"{{baseEntityPrefix}}_SERVICE2\",\n    \"invoicingCalendar\": \"MONTHLY\",\n    \"serviceChargeTemplateRecurrings\": {\n        \"serviceChargeTemplateRecurring\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_REC1\"\n            }\n        ]\n    },\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_USAGE1\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product Charge 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "077e35d2-00c0-4bcc-89de-8e57149db726",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product Charge 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b53f4bb-3a2d-4ab0-8728-9a8a61f40593",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC2\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC2\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit 2 Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86ccb696-864e-4598-9c67-8cb5426d7ee5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PRODUCT1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PRODUCT1 DESC\",\r\n\t\"name\": \"{{baseEntityPrefix}}_PRODUCT1 NAME\",\r\n\t\"productChargeTemplate\": [\r\n\t\t{\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\t\t\"disabled\": \"false\"\r\n\t\t}\r\n\t]\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1038da4f-ed81-4ae8-83df-08b5f6516088",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_PRODUCT2 DESC\",\r\n\t\"name\": \"{{baseEntityPrefix}}_PRODUCT1 NAME\",\r\n\t\"productChargeTemplate\": [\r\n        {\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_PC2\",\r\n\t\t\t\"disabled\": \"false\"\r\n\t\t}\r\n\t]\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "84ecdf3d-3494-42ec-a34d-dfe676e79790",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\"\r\n            }\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\"\r\n            }\r\n        }\r\n    ],\r\n    \"offerProductTemplate\": [\r\n        {\r\n            \"productTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_PRODUCT1\"\r\n            }\r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8b496ad-2bb9-4b46-abe4-4636fd73611e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"org.meveo.service.script.rating.RatingScript\",\n    \"description\": \"rating script\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script.rating;\\r\\n\\r\\nimport java.math.BigDecimal;\\r\\nimport java.util.Map;\\r\\nimport org.meveo.admin.exception.BusinessException;\\r\\nimport org.meveo.model.admin.User;\\r\\nimport org.meveo.model.billing.WalletOperation;\\r\\nimport org.meveo.service.script.Script;\\r\\nimport org.slf4j.Logger;\\r\\nimport org.slf4j.LoggerFactory;\\r\\n\\r\\npublic class RatingScript extends Script {\\r\\n\\r\\n    private static final Logger log = LoggerFactory.getLogger(RatingScript.class);\\r\\n\\r\\n    public void execute(Map<String, Object> context) throws BusinessException {\\r\\n        log.debug(\\\"Rating script creation script...\\\");\\r\\n        // DO not change any amount, as it is untestable\\r\\n        //WalletOperation op = (WalletOperation) context.get(Script.CONTEXT_ENTITY);\\r\\n        //op.setAmountWithoutTax(op.getAmountTax().add(BigDecimal.ONE));\\r\\n    }\\r\\n}\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan  Recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "40d77104-aed6-45d5-b170-15e8330b27f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_REC1\",\r\n\t\"amountWithoutTax\": \"10\",\r\n\t\"amountWithTax\": \"12\",\r\n\t\"scriptInstance\": \"org.meveo.service.script.rating.RatingScript\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan OneShot - Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89052c96-44b9-412e-9a19-f6039bd9132e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS1\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan OneShot - Termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d78b59e3-451e-47d5-8364-a4a321ed7483",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OST1\",\r\n\t\"amountWithoutTax\": \"21\",\r\n\t\"amountWithTax\": \"25\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan OneShot - Other",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13722071-5aa2-438e-b05b-75d18a345f6e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS_OTHER\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\",\r\n\t\"woDescriptionEL\": \"#{\\\"Special \\\".concat(op.description)}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Usage 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3de48909-4bd7-489a-bf5a-2d3562e1a792",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"amountWithoutTax\": \"9\",\r\n\t\"amountWithTax\": \"14\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Product 1 in Offer 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e7848067-8bdc-4410-8fe6-5bc2a9228481",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC1_PP2\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\"amountWithoutTax\": \"0.5\",\r\n\t\"amountWithTax\": \"0.6\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Product 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9572fe19-187e-4475-9083-7e6ed22d779e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC1_PP\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC1\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"2\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Product 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "49d79231-d23b-4dcd-b596-fe8370345812",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_PC2_PP\",\r\n\t\"description\": \"price plan product 1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_PC2\",\r\n\t\"amountWithoutTax\": \"5\",\r\n\t\"amountWithTax\": \"6\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Reccuring 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "007ef2d8-c261-4c77-8031-3e4d6bc73655",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC2\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d29bf574-487b-452a-aa45-1b420febe316",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"calendar\": \"MONTHLY\",\r\n\t\"subscriptionProrata\": \"true\",\r\n\t\"terminationProrata\": \"true\",\r\n\t\"applyInAdvance\": \"true\",\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"1\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"durationTermInMonth\": \"4\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c098ad33-b50e-40f3-b599-0baeca7f1370",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS2\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS2\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OneShot 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b49e167-b7a7-410e-baf4-151557432d5d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OS3\",\r\n    \"description\": \"{{baseEntityPrefix}}_OS3\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": \"false\",\r\n    \"amountEditable\": \"false\",\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n        }\r\n    ],\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"oneShotChargeTemplateType\": \"SUBSCRIPTION\",\r\n    \"immediateInvoicing\": \"false\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n    \"triggeredEdrs\": {\r\n        \"triggeredEdr\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/oneShotChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"oneShotChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Usage 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c81ffa4-2850-483f-ac9e-e4c0e6f893a4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE\",\r\n\t\"priority\": \"1\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n} "
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Usage 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a2a04b99-18b9-4622-b62f-84bb0a7f7d35",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"invoiceSubCategory\": \"SUB_DATA\",\r\n\t\"disabled\": \"false\",\r\n\t\"amountEditable\": \"false\",\r\n\t\"languageDescriptions\": [\r\n\t\t{\r\n\t\t\t\"languageCode\": \"FRA\",\r\n\t\t\t\"description\": \"{{baseEntityPrefix}}-Forfait Test\"\r\n\t\t}\r\n\t],\r\n\t\"inputUnitDescription\": \"1\",\r\n\t\"ratingUnitDescription\": \"Unit\",\r\n\t\"unitMultiplicator\": \"1\",\r\n\t\"unitNbDecimal\": \"2\",\r\n\t\"filterParam1\": \"USAGE3\",\r\n\t\"priority\": \"2\",\r\n\t\"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\" : \"{{baseEntityPrefix}}_taxClass\",\r\n\t\"triggeredEdrs\": {\r\n\t\t\"triggeredEdr\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_EDR1\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"filterExpression\": \"#{ci.chargeTemplate.code.equals('NO_MATCH')}\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/usageChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"usageChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13efbcc5-1292-44ef-b6cc-cdba5fc61b49",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateRecurrings\": {\r\n\t\t\"serviceChargeTemplateRecurring\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_REC3\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateSubscriptions\": {\r\n\t\t\"serviceChargeTemplateSubscription\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_OS3\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1409f2a7-e497-478c-846f-92283c7b5a9e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n\t\"description\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n\t\"invoicingCalendar\": \"MONTHLY\",\r\n\t\"serviceChargeTemplateUsages\": {\r\n\t\t\"serviceChargeTemplateUsage\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\t\t\t\"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05127631-ba23-4206-9b33-6e5f7b8a5100",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\"\r\n            }\r\n        \r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f2fed4e-23a7-4178-a6b5-6e8b14d57924",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"disabled\": \"false\",\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\"\r\n            }\r\n        },\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE4\"\r\n            }\r\n        }\r\n    ],\r\n    \"lifeCycleStatus\": \"ACTIVE\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Usage 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "decf8aef-9ecd-441b-bec3-44c6788d7bf8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE2\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan  Usage 1 in Offer 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14c9a592-388d-4b1d-8493-3fbf2407bebb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE1_OF2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE1\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n\t\"amountWithoutTax\": \"0\",\r\n\t\"amountWithTax\": \"0\",\r\n\t\"priority\": \"0\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan OneShot OS3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8e5f9b19-fcd8-443b-a622-84b2dd2f5730",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_OS3\",\r\n\t\"amountWithoutTax\": \"11\",\r\n\t\"amountWithTax\": \"15\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Recurring 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bba350cd-2405-4358-b052-15549f767f7b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"description\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_REC3\",\r\n\t\"amountWithoutTax\": \"10\",\r\n\t\"amountWithTax\": \"12\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan usage 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac2d6187-d0ea-4e29-ab46-5d9e1b228eba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_USAGE3_OF2\",\r\n\t\"description\": \"{{baseEntityPrefix}}_USAGE3_OF2\",\r\n\t\"eventCode\": \"{{baseEntityPrefix}}_USAGE3\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n\t\"amountWithoutTax\": \"1\",\r\n\t\"amountWithTax\": \"1.2\",\r\n\t\"priority\": \"1\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Bundle 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "938fb1ba-034d-4b30-9f36-3593a0e512a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BUNDLE1\",\r\n    \"description\": \"Bundle 1\",\r\n    \"productChargeTemplates\": {\r\n        \"productChargeTemplate\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_PC2\"\r\n            }\r\n        ]\r\n    },\r\n    \"bundleProducts\": {\r\n        \"bundleProduct\": {\r\n            \"productTemplate\": [\r\n                {\r\n                    \"code\": \"{{baseEntityPrefix}}_PRODUCT1\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/bundleTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"bundleTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create channel - WEB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "67aa1baa-2a52-4b58-9056-86018886484e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CHANNEL_WEB\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CHANNEL_WEB\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create channel - SOCIAL_MEDIA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41e1c567-215c-4534-8162-e5f716848448",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_CHANNEL_WEB\",\r\n\t\"description\": \"{{baseEntityPrefix}}_CHANNEL_WEB\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/channel/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"channel",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer Category - SOFTWARE",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "12a2ee6d-86c0-48f4-b83e-ee0e67cbaf3b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"description\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"name\": \"{{baseEntityPrefix}}_DISK_SPACE\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer Category - DISK_SPACE",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "69dfa425-aeb7-4253-b380-25ee1360cd5d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"description\": \"{{baseEntityPrefix}}_DISK_SPACE\",\r\n\t\"name\": \"{{baseEntityPrefix}}_DISK_SPACE\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplateCategory/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplateCategory",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Customer accounts, subscription, access",
									"item": [
										{
											"name": "Create Customer 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8603f4c8-8d49-453c-b289-482ec8b5d764",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5dd159c7-09c9-414c-bc26-cd68ff25e567",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ed8fd051-cc01-4aa9-8011-71d3cbaf3e39",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"seller\": \"SELLER_FR\",\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"+33100000000\",\r\n        \"mobile\": \"+33666666666\"\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer Account 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fddbb577-c1d6-4d0e-86d4-f4095c702652",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer Account 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4ade5cfd-6eeb-4326-b0d3-35373d52fcf1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_2\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer Account 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7149e642-5c90-40fb-b6de-29e74c8eba54",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{baseEntityPrefix}}@manaty.net\",\r\n        \"phone\": \"1234\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"methodOfPayment\": [\r\n        {\r\n            \"paymentMethodType\": \"CHECK\"\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a15b91f3-85c1-4460-b6f0-6d4de2c42b9a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aa797817-32c9-472d-80ef-bea75ffc4dcd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA_2\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7f48c9d7-4358-43f4-a137-24dbc772f03b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{baseEntityPrefix}}_CA_3\",\r\n    \"billingCycle\": \"CYC_INV_MT_3\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2015-04-01\",\r\n    \"subscriptionDate\": \"2015-01-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"email\": \"{{baseEntityPrefix}}@manaty.net\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ede64e9a-12ca-4927-b453-ed18c14af552",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "56153285-16f9-4a26-a4e5-6a1560af5bd8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_2\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a773ad5-a12a-4873-b526-5d40e02a1bc2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"description\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_3\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8fc6c8d5-161a-4575-a22c-b001ed77d832",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"description\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ecda408c-270f-47d1-acb7-4368c3805636",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_ACCP\",\r\n    \"subscription\": \"{{baseEntityPrefix}}_SUB\",\r\n    \"startDate\": \"2016-06-01\",\r\n    \"endDate\": \"2016-06-30\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/access/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"access",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Administration: Measurable Qtt,Charts, Notifications, etc..",
									"item": [
										{
											"name": "create MeasurableQuantities",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e188d001-791c-447b-9992-e028d72262e7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_MQ1\",\r\n    \"description\": \"{{baseEntityPrefix}}_MQ1-DESC\",\r\n    \"dimension1\": \"1\",\r\n    \"dimension2\": \"2\",\r\n    \"dimension3\": \"3\",\r\n    \"dimension4\": \"4\",\r\n    \"editable\": \"false\",\r\n    \"additive\": \"true\",\r\n    \"sqlQuery\": \"select count(*) from billing_subscription where status='CREATED' and date(created)='#{date}'\",\r\n    \"measurementPeriod\": \"MONTHLY\",\r\n    \"lastMeasureDate\": \"2016-03-16\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/measurableQuantity",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"measurableQuantity"
													]
												}
											},
											"response": []
										},
										{
											"name": "create BarChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c731ba7-2716-4900-b616-a8b26f783a31",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_BC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_BarCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"100\",\r\n    \"height\": \"100\",\r\n    \"style\": \"test1\",\r\n    \"styleClass\": \"test1\",\r\n    \"extender\": \"test1\",\r\n    \"visible\": \"true\",\r\n    \"legendPosition\": \"n\",\r\n    \"barPadding\": \"100\",\r\n    \"barMargin\": \"100\",\r\n    \"orientation\": \"vertical\",\r\n    \"stacked\": \"true\",\r\n    \"min\": \"100\",\r\n    \"max\": \"100\",\r\n    \"breakOnNull\": \"false\",\r\n    \"xaxisLabel\": \"test\",\r\n    \"yaxisLabel\": \"test\",\r\n    \"xaxisAngle\": \"10\",\r\n    \"yaxisAngle\": \"10\",\r\n    \"legendCols\": \"20\",\r\n    \"legendRows\": \"20\",\r\n    \"zoom\": \"true\",\r\n    \"animate\": \"true\",\r\n    \"showDataTip\": \"true\",\r\n    \"datatipFormat\": \"false\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/chart/bar",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"chart",
														"bar"
													]
												}
											},
											"response": []
										},
										{
											"name": "create PieChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf05a7ef-3acd-490d-bfa1-22e764a5c34a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_PieCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"123\",\r\n    \"height\": \"123\",\r\n    \"style\": \"style1\",\r\n    \"styleClass\": \"style_class1\",\r\n    \"extender\": \"extender1\",\r\n    \"visible\": \"true\",\r\n    \"filled\": \"false\",\r\n    \"legendPosition\": \"n\",\r\n    \"diameter\": \"120\",\r\n    \"sliceMargin\": \"10\",\r\n    \"shadow\": \"true\",\r\n    \"showDataLabels\": \"false\",\r\n    \"legendCols\": \"23\",\r\n    \"legendRows\": \"23\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/chart/pie",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"chart",
														"pie"
													]
												}
											},
											"response": []
										},
										{
											"name": "create LineChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e97486db-e11a-4d50-8816-8ca5bad093e5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_LC1\",\r\n    \"description\": \"{{baseEntityPrefix}}_LineCharts\",\r\n    \"measurableQuantity\": {\r\n        \"code\": \"{{baseEntityPrefix}}_MQ1\"\r\n    },\r\n    \"width\": \"200\",\r\n    \"height\": \"200\",\r\n    \"style\": \"style1\",\r\n    \"styleClass\": \"styleClass2\",\r\n    \"extender\": \"extender3\",\r\n    \"visible\": \"true\",\r\n    \"filled\": \"false\",\r\n    \"legendPosition\": \"w\",\r\n    \"shadow\": \"true\",\r\n    \"minX\": \"45\",\r\n    \"maxX\": \"45\",\r\n    \"minY\": \"45\",\r\n    \"maxY\": \"45\",\r\n    \"breakOnNull\": \"true\",\r\n    \"xaxisLabel\": \"label 1\",\r\n    \"yaxisLabel\": \"label 2\",\r\n    \"xaxisAngle\": \"12\",\r\n    \"yaxisAngle\": \"12\",\r\n    \"stacked\": \"true\",\r\n    \"zoom\": \"true\",\r\n    \"animate\": \"false\",\r\n    \"showDataTip\": \"false\",\r\n    \"datatipFormat\": \"false\",\r\n    \"legendCols\": \"56\",\r\n    \"legendRows\": \"56\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/chart/line",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"chart",
														"line"
													]
												}
											},
											"response": []
										},
										{
											"name": "create ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef259e6e-b515-4670-82dd-57550a064146",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\n    \"description\": \"{{baseEntityPrefix}}_Script_Instance\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;           \\r\\n            import java.util.Map;\\r\\n            import java.math.BigDecimal;\\r\\n            import org.meveo.admin.exception.BusinessException;\\r\\n            import org.meveo.model.admin.User;\\r\\n            import org.meveo.model.crm.Provider;\\r\\n            import org.slf4j.Logger;\\r\\n            import org.slf4j.LoggerFactory;         \\r\\n            public class {{baseEntityPrefix}}_Script extends Script {             \\r\\n                private static final Logger log = LoggerFactory.getLogger({{baseEntityPrefix}}_Script.class);\\r\\n                public void execute(Map<String,Object> context) throws BusinessException{\\r\\n                    log.debug(\\\\\\\"{{baseEntityPrefix}}_Script creation script...\\\\\\\");\\r\\n                    log.debug(\\\\\\\"{{baseEntityPrefix}}_Script creation script.\\\\\\\");\\r\\n                }\\r\\n            }\",\n    \"executionRoles\": [\n        {\n            \"name\": \"administrateur\"\n        }\n    ],\n    \"sourcingRoles\": [\n        {\n            \"name\": \"administrateur\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "94179cc0-8f89-4df4-9f37-478bca5cb0ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Notification1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Webhook",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "431778e4-b672-4881-becf-4f13f6853688",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_WebHook1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\r\n    \"host\": \"localhost\",\r\n    \"port\": \"8080\",\r\n    \"page\": \"meveo/api/rest/\",\r\n    \"httpMethod\": \"HTTP_GET\",\r\n    \"username\": \"test.username\",\r\n    \"password\": \"test.password\",\r\n    \"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/notification/webhook/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"webhook",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create EmailNotifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ee2cc66-6e3c-4d61-870e-61cbb2bbcbcb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_EmailNotif1\",\r\n    \"classNameFilter\": \"org.meveo.model.crm.Customer\",\r\n    \"eventTypeFilter\": \"CREATED\",\r\n    \"elFilter\": \"#{event.code.startsWith('test')}\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.{{baseEntityPrefix}}_Script\",\r\n    \"emailFrom\": \"OpenCell\",\r\n    \"emailToEl\": \"edward.legaspi@opencellsoft.com\",\r\n    \"subject\": \"Test Meveo Application\",\r\n    \"body\": \"Test Body\",\r\n    \"htmlBody\": \"HTML Body\",\r\n    \"counterTemplate\": \"{{baseEntityPrefix}}_CT1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/notification/email/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"email",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Timer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f2385d8b-2c3e-4ef4-9c43-bbb8eaecacb2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Timer1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Timer_DESCP\",\r\n    \"hour\": \"1\",\r\n    \"minute\": \"10\",\r\n    \"second\": \"45\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"timerEntity",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create JobInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "399183e2-ca32-49b2-a497-f54a9c9ebd52",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"jobTemplate\": \"ExportSubscriptionsJob\",\r\n    \"code\": \"{{baseEntityPrefix}}_ImpExp-Job1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Import-Export\",\r\n    \"timerCode\": \"{{baseEntityPrefix}}_Timer1\",\r\n    \"jobCategory\": \"IMPORT/EXPORT\",\r\n    \"followingJob\": \"ACCO_JOB\",\r\n    \"parameter\": \"param1\",\r\n    \"active\": \"false\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "22f88a31-bdb4-4e66-af57-1ce6ff31c9b4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_Filter1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Filter1_DESCP\",\r\n    \"shared\": \"false\",\r\n    \"inputXml\": \"<filter>\\n  <disabled>false</disabled>\\n  <appendGeneratedCode>false</appendGeneratedCode>\\n  <filterCondition class=\\\"andCompositeFilterCondition\\\">\\n    <filterConditionType>COMPOSITE_AND</filterConditionType>\\n    <filterConditions>\\n      <primitiveFilterCondition>\\n        <filterConditionType>PRIMITIVE</filterConditionType>\\n        <fieldName>startRatingDate</fieldName>\\n        <operator>>=</operator>\\n        <operand>date:01/09/2015</operand>\\n      </primitiveFilterCondition>\\n    </filterConditions>\\n  </filterCondition>\\n  <primarySelector>\\n    <targetEntity>org.meveo.model.catalog.PricePlanMatrix</targetEntity>\\n    <alias>p</alias>\\n    <displayFields>\\n      <field>code</field>\\n      <field>eventCode</field>\\n    </displayFields>\\n    <exportFields/>\\n    <ignoreIfNotFoundForeignKeys/>\\n  </primarySelector>\\n  <secondarySelectors/>\\n</filter>\"\r\n  }"
												},
												"url": {
													"raw": "{{opencell.url}}/filter/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"filter",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Timer Hourly",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d2ed683-97ff-400f-9399-d2c78c1cb62a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"Hourly\",\r\n    \"description\": \"Hourly\",\r\n    \"hour\": \"*\",\r\n    \"minute\": \"0\",\r\n    \"second\": \"0\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"timerEntity",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create GDPR JobInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "464175c5-4277-457b-bf38-03b2c0d437b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"jobTemplate\": \"GDPRJob\",\n    \"code\": \"GDPR_Job\",\n    \"description\": \"GDPR_Job\",\n    \"jobCategory\": \"DWH\",\n    \"active\": \"false\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create Timer Daily - Midnight",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "75b7b83b-7d75-452a-b937-7dcaacb92023",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"Daily-midnight\",\r\n    \"description\": \"Daily-midnight\",\r\n    \"hour\": \"23\",\r\n    \"minute\": \"59\",\r\n    \"second\": \"59\",\r\n    \"year\": \"*\",\r\n    \"month\": \"*\",\r\n    \"dayOfMonth\": \"*\",\r\n    \"dayOfWeek\": \"*\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/timerEntity/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"timerEntity",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "create PaymentSchedule Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "beb62efd-707c-481c-9e8d-6eb7dcdaa1f9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"jobTemplate\": \"PaymentScheduleProcessingJob\",\r\n    \"code\": \"PaymentSchedule_Job\",\r\n    \"description\": \"PaymentSchedule_Job\",\r\n    \"jobCategory\": \"ACCOUNT_RECEIVABLES\",\r\n    \"active\": \"false\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/jobInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"jobInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup TerminationReason",
									"item": [
										{
											"name": "update TERM_REASON_1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bea1e315-4c21-4bf9-9d9f-645751252558",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TERM_REASON_1\",\r\n    \"description\": \"Agreement Reimbursement Charge\",\r\n    \"applyAgreement\": \"true\",\r\n    \"applyReimbursment\": \"true\",\r\n    \"applyTerminationCharges\": \"true\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason"
													]
												}
											},
											"response": []
										},
										{
											"name": "update TERM_REASON_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "054b8590-88ec-40e4-8e16-668bdbdccea8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TERM_REASON_2\",\r\n    \"description\": \"Reimbursement\",\r\n    \"applyAgreement\": \"false\",\r\n    \"applyReimbursment\": \"true\",\r\n    \"applyTerminationCharges\": \"false\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason"
													]
												}
											},
											"response": []
										},
										{
											"name": "update TERM_REASON_3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9fcb6b11-8d9b-462c-a324-ef879f92eea1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"TERM_REASON_3\",\r\n    \"description\": \"Charge\",\r\n    \"applyAgreement\": \"false\",\r\n    \"applyReimbursment\": \"false\",\r\n    \"applyTerminationCharges\": \"true\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/terminationReason",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"terminationReason"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Service workflow",
							"item": [
								{
									"name": "Service workflow - service multi activation",
									"item": [
										{
											"name": "SET_VARIABLES",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "75188430-ba3a-4b0a-9eef-3b2026abc8fd",
														"exec": [
															"pm.globals.set(\"index\", 240);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "e888569f-795d-4f68-b5c6-2aae27a0b392",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "OPTIONS",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://postman-echo.com/",
													"protocol": "https",
													"host": [
														"postman-echo",
														"com"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Set service.allowMultiInstantiation=true - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e355f2fb-9336-4888-aea7-2b48041d113a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.superpassword}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.superusername}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuc3VwZXJhZG1pbjpvcGVuY2VsbC5zdXBlcmFkbWlu"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/configurations/setProperty",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"configurations",
														"setProperty"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9de6f91f-0dfe-4111-9980-cf30a96b1d8d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"subscriptionDate\": \"2016-12-01\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ae12b2c9-eefd-479a-a077-7825d0cec1bb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service again - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b2b4340f-0bfb-4d81-b5f2-3c0b08b660ef",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9729eb1e-9437-40f8-82af-fee99d5edf9d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_UA\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"INACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(3);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1481414400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1]).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services 1 and 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "42a8492d-aa74-469d-9b14-aad1485bb3c5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\t\"quantity\": \"1\",\r\n\t\t\t\t\"subscriptionDate\": \"2016-12-02\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n\t\t\t\t\"quantity\": \"2\",\r\n\t\t\t\t\"subscriptionDate\": \"2017-01-01\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription A1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2e3dd222-309b-44bf-ba54-6882c29f4585",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_UA\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a9dab772-3a8a-4216-a2be-67926e7f437f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.serviceInstance.quantity).to.eql(1);",
															"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														},
														{
															"key": "serviceInstanceCode",
															"value": "{{baseEntityPrefix}}_SERVICE1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9b01256f-73e8-49ea-aad3-ead19c5bd576",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE1\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1 again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "76dbc4c8-4e6e-4004-a0c1-36e25d7275e1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service 1 again - change quantity and subscription date",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da263817-94e0-432c-aea2-aca5eb88d52f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"5\",\r\n                \"subscriptionDate\": \"2016-12-08\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription A2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9fbc6883-e01a-46a9-bc16-d3f87cd0379a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationReason).to.eql(\"TERM_REASON_1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].quantity).to.eql(5);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].subscriptionDate).to.eql(1481155200000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service1 A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2abf7ad0-a29c-4698-bb62-73976f3e268e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE1\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1 again 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a34fd993-b188-456c-8408-583722621814",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"11\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service 1 again - no changes",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f1f3967-035c-4211-bb88-243d98b6b3c1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"subscriptionDate\": \"2016-12-11\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription A3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "95cf70ed-e6d7-43ff-a2bd-8fb8a5a829cd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.globals.set(\"siid1\", jsonData.subscription.services.serviceInstance[0].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationReason).to.eql(\"TERM_REASON_1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.globals.set(\"siid2\", jsonData.subscription.services.serviceInstance[1].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.globals.set(\"siid3\", jsonData.subscription.services.serviceInstance[2].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].quantity).to.eql(5);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].subscriptionDate).to.eql(1481155200000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].terminationDate).to.eql(1481155200000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[2].terminationReason).to.eql(\"TERM_REASON_1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.globals.set(\"siid4\", jsonData.subscription.services.serviceInstance[3].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].quantity).to.eql(11);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].subscriptionDate).to.eql(1481414400000);",
															"});",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eca3f913-2f79-41c3-9350-7daeec571133",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"More than one service instance with status [] was found. Please use ID to refer to service instance.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														},
														{
															"key": "serviceInstanceCode",
															"value": "{{baseEntityPrefix}}_SERVICE1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance by ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7560e68b-7d2f-4163-8b65-b8cb762c0591",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.serviceInstance.status).to.eql(\"TERMINATED\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI&serviceInstanceId={{siid1}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														},
														{
															"key": "serviceInstanceId",
															"value": "{{siid1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service by id1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d837470-93d9-4b16-b0f3-262a4e16c7b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"serviceIds\": [{{siid4}}],\r\n\t\"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n\t\"terminationReason\": \"TERM_REASON_1\",\r\n\t\"terminationDate\": \"2016-12-31\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription T1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58c97707-3fbd-426c-8e60-533ffcf4a0ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].id).to.eql(pm.globals.get(\"siid4\"));",
															"    pm.expect(jsonData.subscription.services.serviceInstance[3].status).to.eql(\"TERMINATED\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0c19630-b28b-40cb-adaa-83ce47fac3b2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE2\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription T2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8679338d-51e1-48e3-b4bd-f30e09094ce7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_MULTI\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_MULTI"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Service workflow - service single activation",
									"item": [
										{
											"name": "Set service.allowMultiInstantiation=false - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4025bdc-3143-496c-a067-10bf141f459c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"property\": \"service.allowMultiInstantiation\",\r\n\t\"value\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/configurations/setProperty",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"configurations",
														"setProperty"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "361d7a39-d14d-4eec-a0bc-1857cec71ee7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"code\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n\t\"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n\t\"subscriptionDate\": \"2016-12-01\"\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "efd22b09-48b1-49ba-8ab9-70cd5e2c3712",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2016-12-01\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service again - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ec5574fd-bb43-4fec-b72c-1134bdc4b4ca",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"3\",\n                \"subscriptionDate\": \"2016-12-11\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription I",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f580837d-7a15-4970-9520-fd7b61fe182a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"INACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480550400000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services 1 and 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "95a5aaa2-5999-4c9e-a349-0f349245a15f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": [\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\t\"quantity\": \"1\",\r\n\t\t\t\t\"subscriptionDate\": \"2016-12-02\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n\t\t\t\t\"quantity\": \"2\",\r\n\t\t\t\t\"subscriptionDate\": \"2017-01-01\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription A1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1f2468a0-a5e8-47f5-ae5b-ec9a63d03680",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.globals.set(\"siid1\", jsonData.subscription.services.serviceInstance[0].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.globals.set(\"siid2\", jsonData.subscription.services.serviceInstance[1].id);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ae54ec0e-0100-4e39-8c81-83020d28f6fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														},
														{
															"key": "serviceInstanceCode",
															"value": "{{baseEntityPrefix}}_SERVICE1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Instantiate Service 1 again - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bc660768-a135-412a-94eb-d6f77796208d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"ServiceInstance with code=\"+pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1 is already instanciated or activated.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"3\",\r\n                \"subscriptionDate\": \"2016-12-05\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service 1 again - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "118a5b5f-1e39-4bf3-a6fb-124c9ec39ca3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.contain(\"Cannot deserialize instance of `java.util.ArrayList` out of START_OBJECT token\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n\t\"servicesToActivate\": {\r\n\t\t\"service\": {\r\n\t\t\t\"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n\t\t\t\"quantity\": \"5\",\r\n\t\t\t\"subscriptionDate\": \"2016-12-08\"\r\n\t\t}\r\n\t}\r\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance by ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f14b7681-3ed8-4793-917c-d1f60abd3674",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.serviceInstance.code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.serviceInstance.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.serviceInstance.subscriptionDate).to.eql(1480636800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstance?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL&serviceInstanceId={{siid1}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstance"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														},
														{
															"key": "serviceInstanceId",
															"value": "{{siid1}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service by id1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2c38f2cd-1a03-4231-a90b-4e085d657312",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceIds\": [\n        \"{{siid1}}\"\n    ],\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2016-12-31\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription T1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e7312e4b-6b09-46c7-aae8-e051fc42432b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Service 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38d45389-9373-4fc3-b940-9549f81eb52f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"services\": [\r\n        \"{{baseEntityPrefix}}_SERVICE2\"\r\n    ],\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL\",\r\n    \"terminationReason\": \"TERM_REASON_3\",\r\n    \"terminationDate\": \"2016-12-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription T2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "edb5e50c-9593-4ffd-96a1-d215f876af10",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SERVICE_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1480550400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1480636800000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1483228800000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SERVICE_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SERVICE_WFL"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription workflow",
							"item": [
								{
									"name": "Terminate Subscription",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1595e891-b070-4e7e-96e3-7405d02ac030",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2016-03-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a8f5aca7-5dbf-4193-b7e7-b003c073652a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-02\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2015-04-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d37c18b3-0d95-4287-ba46-84c00fc7b175",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SUB_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1456790400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1422835200000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1427846400000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SUB_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SUB_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "92e1179b-3624-47df-b925-e93036950a1b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_SUB_WFL\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"2016-04-30\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a63eae08-772a-49c2-8125-f9c17917bc87",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_SUB_WFL\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1456790400000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(1422835200000);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(2);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(1427846400000);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_SUB_WFL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_SUB_WFL"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "260b9a8e-801a-48b3-bcc1-22b49afcf9df",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\"\r\n  }"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9e4c7e60-014c-4c6b-98fa-e47e43610577",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{today}}\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d271b3c5-c916-4a4e-ab78-72f970800c75",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.renewalRule.initialTermType).to.eql(\"RECURRING\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "049cde4f-318c-4769-8c60-fc9ca036c707",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{terminationDate}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - future termination 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a0c12f85-c6f0-407f-a7f2-6cb5d0c50025",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.subscribedTillDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
															"    pm.expect(jsonData.subscription.renewalRule.endOfTermAction).to.eql(\"TERMINATE\");",
															"    pm.expect(jsonData.subscription.renewalRule.terminationReasonCode).to.eql(\"TERM_REASON_1\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - in-between-days termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5816aa77-f776-4cdb-801e-2427faabbc80",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{10daysBefore}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services - in-between-days termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "72065f95-ec82-4a82-8dee-f226dd0ef969",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"{{5daysBefore}}\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"{{2daysBefore}}\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - in-between-days termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01a14ca2-a559-4003-b89a-6216aa103664",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription - in-between-days termination - before Subscription's subscription date -KO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de796a60-d99b-42b3-a79a-5a1d562f3a29",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Termination date can not be before the subscription date\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{20daysBefore}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription - in-between-days termination - on Subscription's subscription date - OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a931338-d151-452e-af7e-0505ce80957c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{10daysBefore}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - in-between-days termination 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7cae9d26-20cb-4e03-9bb4-4d8292ce72f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].terminationDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - in-between-days 2 termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1a631f60-b6d9-46de-9f08-f454019111b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{10daysBefore}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services - in-between-days 2 termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ba12dca1-a023-4dcc-926f-974905605cff",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{5daysBefore}}\"\n            },\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{2daysBefore}}\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - in-between-days 2 termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e96226d2-eef4-43cd-b081-d52d75221a73",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_2_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate Subscription - in-between-days 2 termination - inbetween service's subscription date - OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab7fba90-8c72-474b-b2be-e9cfea7f4a26",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"terminationDate\": \"{{3daysBefore}}\"\r\n}\r\n\t"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - in-between-days 2 termination 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "150a5336-a9dd-4543-bddf-5fb775e04702",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_INBETWEEN_2_TERMINATION\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"RESILIATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"10daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"3daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE1\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].subscriptionDate).to.eql(new Date(pm.globals.get(\"5daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].terminationDate).to.eql(new Date(pm.globals.get(\"3daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].code).to.eql(pm.environment.get(\"baseEntityPrefix\") + \"_SERVICE2\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].status).to.eql(\"TERMINATED\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(1);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].subscriptionDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].terminationDate).to.eql(new Date(pm.globals.get(\"2daysBefore\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_INBETWEEN_2_TERMINATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - future termination 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c65178a3-faad-4cc5-969d-9ee688daa2a4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\",\r\n    \"terminationDate\": \"{{terminationDate}}\",\r\n    \"terminationReason\": \"TERM_REASON_1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - future termination 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "274d4206-1026-4a01-8306-2a9b66e67c14",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION_3\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.terminationDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - future termination 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a56a9b35-2941-42f8-b96d-830a2697bb73",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services - future termination 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "036e7e57-0be7-460b-a2c1-463e675bd897",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"{{today}}\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update subscription - future termination 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c7b1741-54f7-471f-b9ef-f8cbc2b9fcb6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"{{today}}\",\r\n    \"terminationDate\": \"{{terminationDate}}\",\r\n    \"terminationReason\": \"TERM_REASON_1\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - future termination 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8adb0b57-11a7-4acb-9d9d-3f3244da67e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_FUTURE_TERMINATION_4\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"ACTIVE\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(new Date(pm.globals.get(\"today\")).getTime());",
															"    pm.expect(jsonData.subscription.subscribedTillDate).to.eql(new Date(pm.globals.get(\"terminationDate\")).getTime());",
															"    pm.expect(jsonData.subscription.renewalRule.initialTermType).to.eql(\"FIXED\");",
															"    pm.expect(jsonData.subscription.renewalRule.autoRenew).to.eql(false);",
															"    pm.expect(jsonData.subscription.renewalRule.endOfTermAction).to.eql(\"TERMINATE\");",
															"    pm.expect(jsonData.subscription.renewalRule.terminationReasonCode).to.eql(\"TERM_REASON_1\");",
															"    pm.expect(jsonData.subscription.renewalRule.extendAgreementPeriodToSubscribedTillDate).to.eql(false);",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_FUTURE_TERMINATION_4"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "ApplyOneShotChargeInstance",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "514035c7-8ee3-40f2-be2f-df1baed2faa2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2016-03-01\"\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a8521f4d-4c63-49db-a5de-509734a7bb5a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-02\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2015-04-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "applyOneShotChargeInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fa425d1-6a1f-477c-8ed3-08589d8199b5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"oneShotCharge\": \"{{baseEntityPrefix}}_OS1\",\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_SUB_AOCI\",\n    \"createWallet\": false,\n    \"operationDate\": \"2016-04-06\",\n    \"quantity\": \"1\",\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description\",\n    \"amountWithoutTax\": \"11\",\n    \"amountWithTax\": \"13\",\n    \"criteria1\": \"criteria1\",\n    \"criteria2\": \"criteria2\",\n    \"criteria3\": \"criteria3\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/applyOneShotChargeInstance",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"applyOneShotChargeInstance"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscription instantiate/activate service NOT in Offer and modify offer in subscription",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "691bfd79-bfec-4ad2-a987-1c18c4fa5c28",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create service with min req Vals",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c74901c1-c7fe-41b1-8e26-9f4a6d63737d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n    \"invoicingCalendar\": \"Multi period\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services with service not in Offer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1857b94a-868e-42b7-865f-45e6eee0a79d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Service \"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SERVICE is not associated with Offer\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2015-02-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services with service not in Offer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "119370ac-802b-4d4d-828a-5779d7d35b35",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"BUSINESS_API_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"No offerServiceTemplate corresponds to \"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_SERVICE\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_SERVICE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2016-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update subscription with another offer - ok",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d7bebb2-7a62-4f3d-96a5-0ffb857b1305",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0722da15-eb75-4311-bc21-1af16897665f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"servicesToInstantiate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2016-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update subscription with another offer - fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d7d518bd-c9ba-4d08-acc0-610529201cd0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"INVALID_PARAMETER\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Cannot change the offer of subscription once the services are instantiated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_NO\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Apply Product",
									"item": [
										{
											"name": "Create CFT Product 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e71bd4f3-8ac5-4d0f-83f4-0f727b4c1762",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ProductInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT Product 101",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4eb33e4f-e5ae-43bd-a271-7707ad3d58ac",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ProductInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product charge100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "064d5ef1-55c0-4dc1-b4bb-6bc86cfff17a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"description\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": false,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Produit 100 Test\"\r\n        }\r\n    ],\r\n    \"taxClassCode\":\"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Product 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7dbee14a-8e3c-4097-b999-88e93c8ad6d1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"description\": \"{{baseEntityPrefix}}_PRODUCT2 DESC\",\r\n    \"name\": \"{{baseEntityPrefix}}_PRODUCT100 NAME\",\r\n    \"productChargeTemplate\": [\r\n        {\r\n            \"code\": \"{{baseEntityPrefix}}_PC100\",\r\n            \"invoiceSubCategory\": \"SUB_DATA\",\r\n            \"disabled\": false\r\n        }\r\n    ]\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalogManagement/productTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalogManagement",
														"productTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan product 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ad473ff-92cc-450b-add9-477477628120",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_PC100_PP\",\r\n    \"description\": \"price plan product 100\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_PC100\",\r\n    \"amountWithoutTax\": \"5\",\r\n    \"amountWithTax\": \"6\",\r\n    \"priority\": \"1\",\r\n    \"amountWithoutTaxEL\": \"#{mv:getInheritedCFValue(productInstance,'{{entityPrefix}}_{{index}}_CF_PROD_PRICE100')}\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d47aa1ce-c2cc-419e-9c74-ef6d093056f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 2 to UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "843c28ca-c667-4324-9d50-9d19a0eae47b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 2 to UA_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ea32488-c118-45c1-a3e3-5275e996f87d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_2\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 2 to SUB_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4bdf8ddf-650c-4d62-8400-105884fa7937",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT2\",\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_SUB\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"10\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 100 to UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8146db84-fdb5-4fa9-b746-d575ba835101",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_UA\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"101.1\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply product 100 to SUB_2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "477bafd6-5e69-4a87-8f65-ac16cd10dabd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"product\": \"{{baseEntityPrefix}}_PRODUCT100\",\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_PROD\",\r\n    \"operationDate\": \"2016-04-06\",\r\n    \"quantity\": \"1\",\r\n    \"description\": \"{{baseEntityPrefix}}_Apply-OneShotChargeInstance_Description_SUB\",\r\n    \"amountWithoutTax\": \"11\",\r\n    \"amountWithTax\": \"13\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n                \"doubleValue\": \"101.2\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/applyProduct",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"applyProduct"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT Product 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7413397e-b2bc-44c5-8428-a767fc5509ea",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_PROD_PRICE100/ProductInstance",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100",
														"ProductInstance"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT Product 101",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4fcbe63-6b8f-4928-bee0-9bb11b32085a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_PROD_PRICE101/ProductInstance",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"{{entityPrefix}}_{{index}}_CF_PROD_PRICE101",
														"ProductInstance"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f8d900b7-2992-4443-a904-6e15cc73f7be",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var body = ",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_PROD\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
															"    pm.expect(jsonData.subscription.productInstance[0].code).to.eql(pm.environment.get(\"baseEntityPrefix\")+\"_PRODUCT2\");",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_PROD",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_PROD"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Update service instance",
									"item": [
										{
											"name": "Create CFT ServiceInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a360f3c8-7685-49c2-a3b2-985f12bb3523",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\r\n    \"fieldType\": \"DOUBLE\",\r\n    \"appliesTo\": \"ServiceInstance\",\r\n    \"storageType\": \"SINGLE\",\r\n    \"defaultValue\": \"101\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bc7d729d-01d8-4a2e-a956-43cbda45f8a0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2017-03-15\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e6025f78-4e9c-40a7-b140-547cd3ae0f04",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\r\n                \"quantity\": \"2\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ce2b501-8130-428b-97c0-81dd419a497d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_UPD_SERV_100\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eeb34d15-68b4-4a0a-977d-c7b58006aa1b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"endAgreementDate\": \"2017-03-29\",\n            \"customFields\": {\n                \"customField\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                        \"doubleValue\": \"201\"\n                    }\n                ]\n            }\n        },\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n            \"endAgreementDate\": \"2017-03-30\",\n            \"customFields\": {\n                \"customField\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                        \"doubleValue\": \"202\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/updateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"updateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription-Updated",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bb0bbd21-08d4-44d4-bff1-99d86ca2b41c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_UPD_SERV_100\");",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(jsonBody.services.serviceInstance[0].quantity);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(jsonBody.services.serviceInstance[1].quantity);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
															"    ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"services\": {\n        \"serviceInstance\": [\n            {\n                \"quantity\": 1,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 201\n                        }\n                    ]\n                }\n            },\n            {\n                \"quantity\": 2,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 202\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update services - change quantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df21ba34-52e1-47f5-9f73-f89f3f1f9f36",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"quantity\": \"5\"\n        },\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n            \"quantity\": \"7\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/updateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"updateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription - Updated quantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff8744f5-1484-4089-b37a-e9dc1ab2c77a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.subscription.code).to.eql(jsonBody.code);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[0].quantity).to.eql(jsonBody.services.serviceInstance[0].quantity);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].quantity).to.eql(jsonBody.services.serviceInstance[1].quantity);",
															"    pm.expect(jsonData.subscription.services.serviceInstance[1].customFields).to.eql(jsonBody.services.serviceInstance[1].customFields);",
															"    ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"services\": {\n        \"serviceInstance\": [\n            {\n                \"quantity\": 5,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 201\n                        }\n                    ]\n                }\n            },\n            {\n                \"quantity\": 7,\n                \"customFields\": {\n                    \"customField\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CF_PROD_PRICE100\",\n                            \"fieldType\": \"DOUBLE\",\n                            \"doubleValue\": 202\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CFT ServiceInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "be3b85c3-e633-482b-85bc-6bb6dc5bba33",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/customFieldTemplate/{{entityPrefix}}_{{index}}_CF_SERV_UPD_100/ServiceInstance",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"customFieldTemplate",
														"{{entityPrefix}}_{{index}}_CF_SERV_UPD_100",
														"ServiceInstance"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update services - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4466868-c253-4622-8b2e-4ff683594f7e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "db5ee720-fa96-45e0-a11f-87a0faa43943",
														"exec": [
															"var today = new Date();\r",
															"var terminationDate = new Date();\r",
															"terminationDate.setMonth(today.getMonth() + 5);\r",
															"\r",
															"\r",
															"pm.globals.set(\"testCase.terminationDate\", terminationDate.toISOString().slice(0, 10));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100\",\n    \"serviceToUpdate\": [\n        {\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"terminationDate\": \"{{testCase.terminationDate}}\",\n            \"terminationReason\": \"TERM_REASON_1\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/updateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"updateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find service instance - future termination",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "603aeeea-e792-435c-9f8b-c6e5d62d5415",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.serviceInstances[0].code).to.eql(jsonBody.serviceInstances[0].code);",
															"    pm.expect(jsonData.serviceInstances[0].quantity).to.eql(jsonBody.serviceInstances[0].quantity);",
															"    pm.expect(jsonData.serviceInstances[0].subscriptionDate).to.eql(jsonBody.serviceInstances[0].subscriptionDate);",
															"    pm.expect(jsonData.serviceInstances[0].terminationDate).to.eql(new Date(pm.globals.get(\"testCase.terminationDate\")).getTime());",
															"    pm.expect(jsonData.serviceInstances[0].serviceRenewal).to.eql(jsonBody.serviceInstances[0].serviceRenewal);",
															"    ",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"actionStatus\": {\n        \"status\": \"SUCCESS\"\n    },\n    \"serviceInstances\": [\n        {\n            \"id\": 30,\n            \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"description\": \"{{baseEntityPrefix}}_SERVICE1\",\n            \"subscriptionDate\": 1489536000000,\n            \"quantity\": 5,\n            \"serviceRenewal\": {\n                \"initialTermType\": \"FIXED\",\n                \"renewalTermType\": null,\n                \"initialyActiveFor\": null,\n                \"initialyActiveForUnit\": null,\n                \"calendarInitialyActiveFor\": null,\n                \"autoRenew\": false,\n                \"daysNotifyRenewal\": null,\n                \"endOfTermAction\": \"TERMINATE\",\n                \"terminationReasonCode\": \"TERM_REASON_1\",\n                \"renewFor\": null,\n                \"calendarRenewFor\": null,\n                \"renewForUnit\": null,\n                \"extendAgreementPeriodToSubscribedTillDate\": false\n            }\n        }\n    ]\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/serviceInstances?subscriptionCode={{entityPrefix}}_{{index}}_SUB_UPD_SERV_100&serviceInstanceCode={{baseEntityPrefix}}_SERVICE1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"serviceInstances"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_UPD_SERV_100"
														},
														{
															"key": "serviceInstanceCode",
															"value": "{{baseEntityPrefix}}_SERVICE1"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscribe to disable offer",
									"item": [
										{
											"name": "Disable Offer3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1acc2691-1d61-46c8-9811-86d341a5e089",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{baseEntityPrefix}}_OFFER3/disable",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{baseEntityPrefix}}_OFFER3",
														"disable"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "04c23c78-ce6c-42e5-9087-7f95c5d7d21d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(500);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Cannot subscribe to disabled offer\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"subscriptionDate\": \"2015-02-01\",\r\n    \"endAgreementDate\": \"2015-05-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Enable Offer3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4612c647-6458-4875-9df5-8ec7ef2192ce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_OFFER3\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{baseEntityPrefix}}_OFFER3/enable",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{baseEntityPrefix}}_OFFER3",
														"enable"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Due date delay",
									"item": [
										{
											"name": "Find due date delay - bc",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33c9d659-2824-4c32-951c-81e84628cd3c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData).to.deep.equal(jsonBody);",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"actionStatus\": {\r\n        \"status\": \"SUCCESS\"\r\n    },\r\n    \"dueDateDelay\": {\r\n        \"delayOrigin\": \"BC\",\r\n        \"computedDelay\": 2,\r\n        \"delayEL\": null\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/dueDateDelay?subscriptionCode={{baseEntityPrefix}}_SUB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"dueDateDelay"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{baseEntityPrefix}}_SUB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "74a72100-3899-4f34-82c1-217c968f4849",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"CA_DELAY_{{index}}\",\r\n    \"description\": \"CA_DELAY_{{index}}\",\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST_3\",\r\n    \"currency\": \"USD\",\r\n    \"language\": \"ENG\",\r\n    \"creditCategory\": \"PRO\",\r\n    \"dueDateDelayEL\": \"#{ba.customerAccount.auditable.created.date}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5c2e50e3-7ca6-4a79-aed0-57bc1d1dce9d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"BA_DELAY_{{index}}\",\r\n    \"description\": \"BA_DELAY_{{index}}\",\r\n    \"customerAccount\": \"CA_DELAY_{{index}}\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"US\",\r\n    \"language\": \"ENG\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9733d378-c358-4c64-acec-3eb3c0e1c2d8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"UA_DELAY_{{index}}\",\r\n    \"description\": \"UA_DELAY_{{index}}\",\r\n    \"billingAccount\": \"BA_DELAY_{{index}}\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "25271eeb-a9a8-44b9-a6d4-8e061e888866",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"DELAY_SUB_{{index}}\",\r\n    \"description\": \"DELAY_SUB_{{index}}\",\r\n    \"userAccount\": \"UA_DELAY_{{index}}\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER3\",\r\n    \"subscriptionDate\": \"2017-01-07\",\r\n    \"endAgreementDate\": \"2017-01-07\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find due date delay - ca",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6126e7de-c159-4d70-a82b-bcee4bc553c1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.dueDateDelay.delayOrigin).to.deep.equal(jsonBody.delayOrigin);",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"delayOrigin\": \"CA\"\n}"
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/dueDateDelay?subscriptionCode=DELAY_SUB_{{index}}",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"dueDateDelay"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "DELAY_SUB_{{index}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3187321-01ac-4d99-8d35-451cdc21f68a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"DELAY_SUB_{{index}}\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\r\n                \"quantity\": \"5\",\r\n                \"subscriptionDate\": \"2017-03-15\"\r\n            },\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE4\",\r\n                \"quantity\": \"10\",\r\n                \"subscriptionDate\": \"2017-05-15\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscription age",
									"item": [
										{
											"name": "Create recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1e555fa-b900-4bea-b434-ffba569c4a9e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC1\",\r\n    \"invoiceSubCategory\": \"SUB_DATA\",\r\n    \"disabled\": false,\r\n    \"amountEditable\": true,\r\n    \"languageDescriptions\": [\r\n        {\r\n            \"languageCode\": \"FRA\",\r\n            \"description\": \"{{baseEntityPrefix}}-Subscription Age\"\r\n        }\r\n    ],\r\n    \"calendar\": \"MONTHLY\",\r\n    \"subscriptionProrata\": true,\r\n    \"terminationProrata\": true,\r\n    \"applyInAdvance\": true,\r\n    \"inputUnitDescription\": \"1\",\r\n    \"ratingUnitDescription\": \"1\",\r\n    \"unitMultiplicator\": \"1\",\r\n    \"unitNbDecimal\": \"2\",\r\n    \"durationTermInMonth\": \"4\",\r\n    \"roundingModeDtoEnum\": \"NEAREST\",\r\n    \"taxClassCode\":\"{{baseEntityPrefix}}_taxClass\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Service",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "087c4833-f071-4914-9e4b-11a7e7d65ba9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n    \"invoicingCalendar\": \"MONTHLY\",\r\n    \"serviceChargeTemplateRecurrings\": {\r\n        \"serviceChargeTemplateRecurring\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ee94aa8d-8354-4df0-ad09-d0014345897c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"description\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"name\": \"{{baseEntityPrefix}}_OFFER2\",\r\n    \"disabled\": false,\r\n    \"offerServiceTemplate\": [\r\n        {\r\n            \"serviceTemplate\": {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate ",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate "
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan recurring 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d895d19-d326-43bb-997d-c322c2f0e9a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE2\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"5\",\r\n    \"amountWithTax\": \"10\",\r\n    \"priority\": \"1\",\r\n    \"minSubscriptionAgeInMonth\": \"5\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan recurring 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9120b49f-5357-48bc-9758-754de7f05ee6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE2\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"15\",\r\n    \"amountWithTax\": \"30\",\r\n    \"priority\": \"1\",\r\n    \"maxSubscriptionAgeInMonth\": \"3\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f9a82ec-4ba0-4766-ba8c-e71c5cb5775b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_REC_SUB_AGE1\",\r\n    \"description\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"eventCode\": \"{{baseEntityPrefix}}_REC_SUB_AGE\",\r\n    \"amountWithoutTax\": \"2\",\r\n    \"amountWithTax\": \"4\",\r\n    \"priority\": \"2\",\r\n    \"minSubscriptionAgeInMonth\": \"1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/pricePlan/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"pricePlan",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "199bb061-e294-4e2d-869d-385af29a5318",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"subscriptionDate\": \"2017-03-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "911addb0-b048-4323-aa8a-05630d3b0082",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-05-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate subscription 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9de71780-967e-4122-b539-e382844f4495",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_AGE\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2017-12-01\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "40d92e66-7412-4f09-8a75-eaea2e011471",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_3\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER_SUB_AGE\",\r\n    \"subscriptionDate\": \"2017-07-01\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6eee9355-3e0f-4c23-8fe6-98555d8203cf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\r\n    \"servicesToActivate\": {\r\n        \"service\": [\r\n            {\r\n                \"code\": \"{{baseEntityPrefix}}_SERVICE_SUB_AGE\",\r\n                \"quantity\": \"1\",\r\n                \"subscriptionDate\": \"2017-07-01\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Terminate subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4dbb476-b637-48c5-b5a6-9d8b4f365505",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscriptionCode\": \"{{entityPrefix}}_{{index}}_SUB_AGE2\",\n    \"terminationReason\": \"TERM_REASON_1\",\n    \"terminationDate\": \"2017-09-01\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/terminate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"terminate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Activate Subscription",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05f0d11b-c71c-40e2-ad0c-27d5dbe5714f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f02e75b2-ac1b-41a7-aa0d-ef9a3b4135a1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "84a05fd8-7a0a-4c4e-a71f-fa12e3b3db55",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "64506f44-2311-453b-a6ca-87d1f6d1849e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_ACTIVATION2\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            },\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE2\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "574c8c48-9514-41df-b160-a29676d46ecc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{entityPrefix}}_{{index}}_SUB_ACTIVATION",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate subscription 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ae4b26c3-1ada-4f01-b8d1-ee6075d0a7d2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{entityPrefix}}_{{index}}_SUB_ACTIVATION2",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscription status notification",
									"item": [
										{
											"name": "Create script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f21cc54d-d8e3-4a4d-85ee-f6366a9394a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"org.meveo.service.script.SubscriptionStatusUpdatedScript\",\r\n    \"description\": \"rating script\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\n\\nimport org.meveo.admin.exception.BusinessException;\\nimport org.meveo.model.billing.Subscription;\\nimport org.meveo.model.billing.SubscriptionStatusEnum;\\nimport org.meveo.service.billing.impl.SubscriptionService;\\nimport org.meveo.service.script.Script;\\n\\nimport java.util.Map;\\n\\npublic class SubscriptionStatusUpdatedScript extends Script {\\n\\n    private SubscriptionService subscriptionService = (SubscriptionService) getServiceInterface(\\\"SubscriptionService\\\");\\n\\n    @Override\\n    public void execute(Map<String, Object> methodContext) throws BusinessException {\\n        log.info(\\\"<<<<<<< SubscriptionStatusUpdatedScript >>>>>>>>>>\\\");\\n        Subscription subscription = (Subscription) methodContext.get(\\\"subscription\\\");\\n        SubscriptionStatusEnum previousState = (SubscriptionStatusEnum) methodContext.get(\\\"previousState\\\");\\n        SubscriptionStatusEnum currentState = (SubscriptionStatusEnum) methodContext.get(\\\"currentState\\\");\\n        log.info(\\\"subscription.getCode() : \\\" + subscription.getCode());\\n        log.info(\\\"currentState : \\\" + currentState.name());\\n        log.info(\\\"previousState : \\\" + previousState.name());\\n        subscription.setDescription(\\\"from_\\\" + previousState + \\\"_to_\\\" + currentState);\\n        subscriptionService.update(subscription);\\n    }\\n} \"\r\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fff078de-c7c2-4403-8a24-8a85aa54c0ce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification\",\r\n    \"classNameFilter\": \"org.meveo.model.billing.Subscription\",\r\n    \"eventTypeFilter\": \"STATUS_UPDATED\",\r\n    \"scriptInstanceCode\": \"org.meveo.service.script.SubscriptionStatusUpdatedScript\",\r\n    \"scriptParams\": {\r\n        \"subscription\": \"#{event.entity}\",\r\n        \"previousState\": \"#{event.previousState}\",\r\n        \"currentState\": \"#{event.currentState}\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/notification/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aa096608-15f7-475d-98a7-6c420c04b36c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\r\n    \"userAccount\": \"{{baseEntityPrefix}}_UA\",\r\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\r\n    \"subscriptionDate\": \"2018-10-13\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Instanticate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fca6a83-2842-4acb-9fee-e3141e2bd670",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\n    \"servicesToInstantiate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2018-10-13\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/instantiateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"instantiateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5bec368c-1c59-4642-8c9e-a740389a690b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d2833da-c089-418f-8515-64952561bab5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.subscription.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.subscription.description).to.deep.equal(jsonBody.description);",
															"",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION\",\n    \"description\": \"from_CREATED_to_ACTIVE\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_STATUS_NOTIFICATION"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Notification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "02963f40-6e99-4dcd-a6d7-282f64036e62",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{opencell.url}}/notification/{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"notification",
														"{{entityPrefix}}_{{index}}_SubscriptionStatusUpdatedNotification"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f9e332f9-a14b-4683-a392-d6ef01e5f1fe",
										"type": "text/javascript",
										"exec": [
											"var today = new Date();",
											"var terminationDate = new Date();",
											"var days20before = new Date();",
											"var days10before = new Date();",
											"var days5before = new Date();",
											"var days3before = new Date();",
											"var days2before = new Date();",
											"terminationDate.setDate(today.getDate() + 1);",
											"days20before.setDate(today.getDate() - 20);",
											"days10before.setDate(today.getDate() - 10);",
											"days5before.setDate(today.getDate() - 5);",
											"days3before.setDate(today.getDate() - 3);",
											"days2before.setDate(today.getDate() - 2);",
											"",
											"pm.globals.set(\"index\", 192);",
											"pm.globals.set(\"today\", today.toISOString().slice(0, 10));",
											"pm.globals.set(\"terminationDate\", terminationDate.toISOString().slice(0, 10));",
											"pm.globals.set(\"20daysBefore\", days20before.toISOString().slice(0, 10));",
											"pm.globals.set(\"10daysBefore\", days10before.toISOString().slice(0, 10));",
											"pm.globals.set(\"5daysBefore\", days5before.toISOString().slice(0, 10));",
											"pm.globals.set(\"3daysBefore\", days3before.toISOString().slice(0, 10));",
											"pm.globals.set(\"2daysBefore\", days2before.toISOString().slice(0, 10));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3cc1d356-f177-4519-8dc8-7221527c0779",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Subscription with Inherited CF",
							"item": [
								{
									"name": "Tests",
									"item": [
										{
											"name": "Create CFT for User Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc5c2ac4-f727-4c5d-82d3-d4199bd09f52",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"UserAccount\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"userAccountCF\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e515d9ee-4aac-4343-a642-4dd7dc3a9a3a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Subscription\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"subscriptionCF\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for Subscription - Not Inherited",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb0b855a-6249-4db3-922f-825bf4f3c509",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Subscription\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"subscriptionCFNotInherited\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account 3 - Temp",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "218c81e1-4960-4adb-ba00-e8e7374a8da8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"billingAccount\": \"{{baseEntityPrefix}}_BA_3\",\n    \"externalRef1\": \"EXTREF1\",\n    \"externalRef2\": \"EXTREF2\",\n    \"name\": {\n        \"title\": \"MR\",\n        \"firstName\": \"Edward\",\n        \"lastName\": \"Legaspi\"\n    },\n    \"address\": {\n        \"address1\": \"adress1\",\n        \"address3\": \"adress3\",\n        \"zipCode\": \"21000\",\n        \"city\": \"Dijon\",\n        \"country\": \"France\"\n    },\n    \"subscriptionDate\": \"2016-03-10\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"stringValue\": \"UA_INHERITED\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b2a6f266-7667-4015-ab50-b4dcdf29173f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"userAccount\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"subscriptionDate\": \"2015-02-01\",\n    \"endAgreementDate\": \"2015-05-01\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"stringValue\": \"SUB_INHERITED\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5fb498fe-c5fc-4fa3-a2eb-9535d3f5abfa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.subscription.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SUB_InheritedCF\");",
															"    pm.expect(jsonData.subscription.status).to.eql(\"CREATED\");",
															"    pm.expect(jsonData.subscription.userAccount).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_UA_3_InheritedCF\");",
															"    pm.expect(jsonData.subscription.subscriptionDate).to.eql(1422748800000);",
															"    pm.expect(jsonData.subscription.endAgreementDate).to.eql(1430438400000);",
															"    pm.expect(jsonData.subscription.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_NOT_INHERITED\");",
															"    pm.expect(jsonData.subscription.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_NOT_INHERITED\");",
															"    pm.expect(jsonData.subscription.customFields.customField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.subscription.customFields.customField[0].stringValue).to.eql(\"subscriptionCFNotInherited\");",
															"    pm.expect(jsonData.subscription.customFields.customField[1].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_INHERITED\");",
															"    pm.expect(jsonData.subscription.customFields.customField[1].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_CF_INHERITED\");",
															"    pm.expect(jsonData.subscription.customFields.customField[1].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.subscription.customFields.customField[1].stringValue).to.eql(\"SUB_INHERITED\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SUB_InheritedCF\",\n    \"userAccount\": \"{{entityPrefix}}_{{index}}_UA_3_InheritedCF\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER1\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_CF_NOT_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"subscriptionCFNotInherited\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"SUB_INHERITED\"\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"stringValue\": \"UA_INHERITED\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_SUB_InheritedCF",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_SUB_InheritedCF"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "81b8d49c-cfab-49be-8623-656332b8e235",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_UA_CF_INHERITED/UserAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_UA_CF_INHERITED",
														"UserAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT SUB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4806a727-f82f-49e7-a45b-3c45bfbf7013",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_SUB_CF_INHERITED/Subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_SUB_CF_INHERITED",
														"Subscription"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT SUB 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cd6da168-d37b-4ff6-9e80-d146439999bf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_SUB_CF_NOT_INHERITED/Subscription",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_SUB_CF_NOT_INHERITED",
														"Subscription"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Inherited CF in Account",
									"item": [
										{
											"name": "Create CFT for CUST",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "079ec78e-e57c-4bf8-8f96-dceb61465893",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"Customer\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for BA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b77ce808-c01e-4231-8ce2-f3d1fe860bbc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"BillingAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for CA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da31a248-c799-4682-9fdc-6e1021457719",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"CustomerAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT for UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9003bcbc-bc30-49f0-938b-be996a69c132",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n    \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"UserAccount\",\n    \"storageType\": \"MATRIX\",\n    \"defaultValue\": \"INHERITED_CF\",\n    \"mapKeyType\": \"STRING\",\n    \"matrixColumn\": [\n        {\n            \"code\": \"MAT_1\",\n            \"position\": \"1\",\n            \"label\": \"One\",\n            \"keyType\": \"STRING\"\n        },\n        {\n            \"code\": \"MAT_2\",\n            \"position\": \"2\",\n            \"label\": \"Two\",\n            \"keyType\": \"RON\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create AccountHierarchy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7eff0d4d-031c-4991-8cc5-693118bfaa53",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{entityPrefix}}_432@manaty.net\",\n    \"paymentMethod\": \"2\",\n    \"customerId\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"sellerCode\": \"SELLER_FR\",\n    \"customerBrandCode\": \"DEFAULT\",\n    \"customerCategoryCode\": \"CLIENT\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"billingCycleCode\": \"CYC_INV_MT_1\",\n    \"titleCode\": \"MR\",\n    \"firstName\": \"firstName\",\n    \"lastName\": \"lastName\",\n    \"phoneNumber\": \"+102354749\",\n    \"address1\": \"Address1\",\n    \"address2\": \"Address2\",\n    \"zipCode\": \"75001\",\n    \"city\": \"Tunis\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fc732d2b-a991-41c1-b11d-a165dfe0871e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"customerCategory\": \"CLIENT\",\n    \"seller\": \"SELLER_FR\",\n    \"customerBrand\": \"DEFAULT\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueC1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueC2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create customer account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2a13d5c4-2687-4859-affe-605b6e2c2e5e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"customer\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"currency\": \"EUR\",\n    \"language\": \"FRA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueCA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueCA2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create billing account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b55f52b-fece-49a8-ac3f-6e1d1c085107",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"customerAccount\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"country\": \"FR\",\r\n    \"language\": \"FRA\",\r\n    \"nextInvoiceDate\": \"2016-04-01\",\r\n    \"subscriptionDate\": \"2016-01-01\",\r\n    \"electronicBilling\": true,\r\n    \"status\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}@manaty.net\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueBA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueBA2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create user account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1a0c4d7e-1382-4091-a944-2183156fe1cc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_UA\",\r\n    \"billingAccount\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"address1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"address3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"subscriptionDate\": \"2016-03-10\",\r\n    \"status\": \"ACTIVE\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueUA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueUA2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find customer account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e909e968-d058-4b9c-aaef-6ef3886f1acf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.customerAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueCA1\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueCA2\");",
															"    pm.expect(jsonData.customerAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"",
															"    ",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueC1\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueC2\");",
															"    pm.expect(jsonData.customerAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\r\n    \"customFields\": {\r\n        \"customField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\r\n                \"fieldType\": \"STRING\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueCA1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueCA2\"\r\n                    },\r\n                    \"key\": {\r\n                        \"value\": \"MAT_1/MAT_2\"\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        \"inheritedCustomField\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\r\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\r\n                \"fieldType\": \"STRING\",\r\n                \"mapValue\": {\r\n                    \"MAT_1\": {\r\n                        \"value\": \"ValueC1\"\r\n                    },\r\n                    \"MAT_2\": {\r\n                        \"value\": \"ValueC2\"\r\n                    },\r\n                    \"key\": {\r\n                        \"value\": \"MAT_1/MAT_2\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CUST1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find billing account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b18c55c8-0c51-499b-9fed-f7bd018c6d18",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.billingAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
															"    pm.expect(jsonData.billingAccount.description).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_BA\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueBA1\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueBA2\");",
															"    pm.expect(jsonData.billingAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"",
															"    ",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueCA1\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueCA2\");",
															"    pm.expect(jsonData.billingAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_BA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueBA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueBA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueCA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueCA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CUST1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find user account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5cbf3644-8f94-41d3-bdac-250a977e0fd3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.userAccount.code).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUST1\");",
															"    pm.expect(jsonData.userAccount.description).to.eql(pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_UA\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.MAT_1.value).to.eql(\"ValueUA1\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.MAT_2.value).to.eql(\"ValueUA2\");",
															"    pm.expect(jsonData.userAccount.customFields.customField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"",
															"    ",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].code).to.eql(pm.environment.get(\"entityPrefix\") + \"_ACCOUNT_CF_INHERITED\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].description).to.eql(pm.environment.get(\"entityPrefix\") + \"_SUB_UA_CF_INHERITED\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].fieldType).to.eql(\"STRING\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.MAT_1.value).to.eql(\"ValueBA1\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.MAT_2.value).to.eql(\"ValueBA2\");",
															"    pm.expect(jsonData.userAccount.customFields.inheritedCustomField[0].mapValue.key.value).to.eql(\"MAT_1/MAT_2\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUST1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_UA\",\n    \"customFields\": {\n        \"customField\": [\n            {\n            },\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueUA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueUA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ],\n        \"inheritedCustomField\": [\n            {\n                \"code\": \"{{entityPrefix}}_ACCOUNT_CF_INHERITED\",\n                \"description\": \"{{entityPrefix}}_SUB_UA_CF_INHERITED\",\n                \"fieldType\": \"STRING\",\n                \"mapValue\": {\n                    \"MAT_1\": {\n                        \"value\": \"ValueBA1\"\n                    },\n                    \"MAT_2\": {\n                        \"value\": \"ValueBA2\"\n                    },\n                    \"key\": {\n                        \"value\": \"MAT_1/MAT_2\"\n                    }\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CUST1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86c25369-8af0-47a9-a50a-dfa1c9204346",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount/{{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount",
														"{{entityPrefix}}_{{index}}_CUST1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Billing Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aaee994b-ec29-43ba-b0c3-5c1b6e3cee45",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount/{{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount",
														"{{entityPrefix}}_{{index}}_CUST1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete CustomerAccount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "29244589-6b41-4140-88c2-1a8b2a0c8400",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/{{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"{{entityPrefix}}_{{index}}_CUST1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd56b47b-9f6c-4017-ad65-2855abc6ec60",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUST1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{entityPrefix}}_{{index}}_CUST1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT UA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b42da2ee-f5b5-46ec-aef7-5ff943b0a196",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/UserAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
														"UserAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT BA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c1229d0d-6576-40a1-b27e-3ffc739838e7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/BillingAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
														"BillingAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT CA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2802f8eb-1728-4a17-9ec1-88a595251dcb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/CustomerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
														"CustomerAccount"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT CUST",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "61a74d32-e244-4fca-9fb2-c656156e87b8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{entityPrefix}}_ACCOUNT_CF_INHERITED/Customer",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{entityPrefix}}_ACCOUNT_CF_INHERITED",
														"Customer"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f7891c2a-52e2-465c-b6d9-874ac00ab7a7",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 460);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2102a697-af2a-4f19-9ddf-92a09bf12bf0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "EL expression tests",
							"item": [
								{
									"name": "Calling script from EL",
									"item": [
										{
											"name": "Create script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b7138cc-ad47-469b-80cd-5dae517c58f2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;           \\n            import java.util.Map;\\n            import java.math.BigDecimal;\\n            import org.meveo.admin.exception.BusinessException;\\n            import org.meveo.model.admin.User;\\n            import org.meveo.model.crm.Provider;\\n            import org.meveo.model.BusinessEntity;\\n            import org.slf4j.Logger;\\n            import org.slf4j.LoggerFactory;\\n            public class The{{baseEntityPrefix}}_ScriptEL extends Script {\\n                private static final Logger log = LoggerFactory.getLogger(The{{baseEntityPrefix}}_ScriptEL.class);\\n                public void execute(Map<String,Object> context) throws BusinessException{\\n                    log.debug(\\\"The{{baseEntityPrefix}}_ScriptEL called\\\");\\n                    context.put(Script.RESULT_VALUE, ((BusinessEntity)context.get(Script.CONTEXT_ENTITY)).getCode()!=null && ((BusinessEntity)context.get(Script.CONTEXT_ENTITY)).getCode().startsWith(\\\"EL_\\\"));                 \\n                }\\n            }\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT on Charge",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af087b8e-5c6f-4247-ba90-819c1fecc1ec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_CFT_EL_SCRIPT\",\n    \"description\": \"Field visible on entities with code starting 'EL_'\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"ChargeTemplate\",\n    \"defaultValue\": \"KUKU\",\n    \"storageType\": \"SINGLE\",\n    \"valueRequired\": true,\n    \"applicableOnEl\": \"#{mv:executeScript(entity,'org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL', null, entity.auditable.creator)}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recuring Charge OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c0787023-8d50-4748-ad7b-5075eed6e4c1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC1\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"calendar\": \"MONTHLY\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate ",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate "
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove CFT",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "12de08d9-6bc6-4e28-be82-d47bcf48394b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customFieldTemplateCode\": \"{{baseEntityPrefix}}_CFT_EL_SCRIPT\",\n    \"appliesTo\": \"ChargeTemplate\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/{{baseEntityPrefix}}_CFT_EL_SCRIPT/ChargeTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"{{baseEntityPrefix}}_CFT_EL_SCRIPT",
														"ChargeTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Script Instance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ceae8902-b02f-4780-b106-7d9ae0dc4672",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"removeScriptInstanceRequest\": \"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"org.meveo.service.script.The{{baseEntityPrefix}}_ScriptEL"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Charge filter expression",
									"item": [
										{
											"name": "Update recurring 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f1de8d8-3a96-420d-9c16-7efc91079361",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC3\",\n    \"description\": \"{{baseEntityPrefix}}_REC3\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"disabled\": false,\n    \"amountEditable\": false,\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\n        }\n    ],\n    \"calendar\": \"MONTHLY\",\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"inputUnitDescription\": \"1\",\n    \"ratingUnitDescription\": \"1\",\n    \"unitMultiplicator\": \"1\",\n    \"unitNbDecimal\": \"2\",\n    \"durationTermInMonth\": \"4\",\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": {\n        \"triggeredEdr\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\n            }\n        ]\n    },\n    \"filterExpression\": false\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26a46c60-4cec-43ea-817a-cd95b2da0ad2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\",\n    \"userAccount\": \"{{baseEntityPrefix}}_UA_2\",\n    \"offerTemplate\": \"{{baseEntityPrefix}}_OFFER2\",\n    \"subscriptionDate\": \"2018-01-01\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4b7ca525-cf07-4a33-b385-161fe62644b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_SERVICE3\",\n                \"quantity\": \"2\",\n                \"subscriptionDate\": \"2018-01-01\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "07347b94-2bb6-455f-9559-f324fbe9bdac",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CHARGE_FILTER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription?subscriptionCode={{entityPrefix}}_{{index}}_CHARGE_FILTER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription"
													],
													"query": [
														{
															"key": "subscriptionCode",
															"value": "{{entityPrefix}}_{{index}}_CHARGE_FILTER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update recurring 3 - restore",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2176d3be-4ce9-4b0f-853b-928266c147ab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{baseEntityPrefix}}_REC3\",\n    \"description\": \"{{baseEntityPrefix}}_REC3\",\n    \"invoiceSubCategory\": \"SUB_DATA\",\n    \"disabled\": false,\n    \"amountEditable\": false,\n    \"languageDescriptions\": [\n        {\n            \"languageCode\": \"FRA\",\n            \"description\": \"{{baseEntityPrefix}}-Forfait Test\"\n        }\n    ],\n    \"calendar\": \"MONTHLY\",\n    \"subscriptionProrata\": true,\n    \"terminationProrata\": true,\n    \"applyInAdvance\": true,\n    \"inputUnitDescription\": \"1\",\n    \"ratingUnitDescription\": \"1\",\n    \"unitMultiplicator\": \"1\",\n    \"unitNbDecimal\": \"2\",\n    \"durationTermInMonth\": \"4\",\n    \"roundingModeDtoEnum\": \"NEAREST\",\n    \"triggeredEdrs\": {\n        \"triggeredEdr\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_EDR1\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/recurringChargeTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"recurringChargeTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "InvoiceType - EL AO",
									"item": [
										{
											"name": "Create Service1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ccd11296-86af-426f-bce0-559e3018b5ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n    \"description\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n    \"serviceChargeTemplateUsages\": {\n        \"serviceChargeTemplateUsage\": [\n            {\n                \"code\": \"{{baseEntityPrefix}}_USAGE1\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/serviceTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"serviceTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Offer1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d934a152-c238-4086-8c0b-4ebbf11aecc4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"description\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"name\": \"{{baseEntityPrefix}}_EL_INV_OFFER1\",\n    \"disabled\": false,\n    \"offerServiceTemplate\": [\n        {\n            \"serviceTemplate\": {\n                \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\"\n            }\n        }\n    ],\n    \"lifeCycleStatus\": \"ACTIVE\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InvoiceType - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b6c612ed-15b2-45c5-b5c8-5f7e6b53e668",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_InvTypeElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_Description_Created\",\n    \"occTemplateCode\": \"INV_REB\",\n    \"occTemplateNegativeCode\": \"PAY_TIP\",\n    \"sequenceDto\": {\n        \"prefixEL\": \"Fact_\",\n        \"sequenceSize\": \"2\",\n        \"currentInvoiceNb\": \"1\"\n    },\n    \"sellerSequence\": {\n        \"SELLER_FR\": {\n            \"prefixEL\": \"SellFact_\",\n            \"sequenceSize\": \"9\",\n            \"currentInvoiceNb\": \"9\"\n        }\n    },\n    \"appliesTo\": [\n        \"COM\"\n    ],\n    \"matchingAuto\": false,\n    \"billingTemplateName\": \"BTN\",\n    \"billingTemplateNameEL\": \"DEMO_#{invoice.id}\",\n    \"occTemplateCodeEl\": \"#{invoice.invoiceNumber.startsWith(\\\"Fact_\\\")?\\\"INV_STD\\\":\\\"INV_REB\\\"}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoiceType/createOrUpdate ",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoiceType",
														"createOrUpdate "
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BillingCycle - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c63cf472-2ee1-435c-a2ea-c71de8c5b8dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"dueDateDelay\": \"1\",\n    \"calendar\": \"MONTHLY\",\n    \"invoiceDateDelay\": \"1\",\n    \"invoiceTypeCode\": \"{{entityPrefix}}_{{index}}_InvTypeElAO\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billingCycle/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billingCycle",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create AccountHierarchy - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05149fcc-3cf2-47a1-917b-608734643b3f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{entityPrefix}}_43@manaty.net\",\n    \"customerId\": \"{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"sellerCode\": \"SELLER_US\",\n    \"customerBrandCode\": \"DEFAULT\",\n    \"customerCategoryCode\": \"CLIENT\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"billingCycleCode\": \"{{entityPrefix}}_{{index}}_BC_ElAO\",\n    \"titleCode\": \"MR\",\n    \"firstName\": \"toto\",\n    \"lastName\": \"toc\",\n    \"phoneNumber\": \"+102354749\",\n    \"address1\": \"Address1\",\n    \"address2\": \"Address2\",\n    \"zipCode\": \"4050\",\n    \"city\": \"Los Banana\",\n    \"methodOfPayment\": [\n        {\n            \"paymentMethodType\": \"DIRECTDEBIT\",\n            \"bankCoordinates\": {\n                \"bankCode\": \"12456\",\n                \"branchCode\": \"23456\",\n                \"accountNumber\": \"34589324756\",\n                \"key\": \"45\",\n                \"iban\": \"1212\",\n                \"bic\": \"67789456\",\n                \"accountOwner\": \"Me and co\",\n                \"bankName\": \"Some bank\",\n                \"bankId\": \"78946\",\n                \"issuerNumber\": \"46789\",\n                \"issuerName\": \"Some issuer\",\n                \"ics\": \"5587\"\n            }\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create subscription - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cc761e5f-0301-472c-97f3-2b0cd1f36a22",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"description\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"userAccount\": \"UA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"offerTemplate\": \"{{entityPrefix}}_EL_INV_OFFER1\",\n    \"subscriptionDate\": \"2050-10-13\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create access - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c4a140d-e792-4483-b6d3-9bb6e22a45e1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_INV_SUB_ACCESS_ElAO\",\n    \"subscription\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/access/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"access",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "73a750ee-556c-41b7-86dc-8b867ce32141",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"subscription\": \"{{entityPrefix}}_{{index}}_INV_SUB_ElAO\",\n    \"servicesToActivate\": {\n        \"service\": [\n            {\n                \"code\": \"{{entityPrefix}}_EL_INV_SERVICE1\",\n                \"quantity\": \"1\",\n                \"subscriptionDate\": \"2050-10-13\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/subscription/activateServices",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"subscription",
														"activateServices"
													]
												}
											},
											"response": []
										},
										{
											"name": "Charge CDR - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "871978af-2a88-44c3-960d-15bea410a93c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "2050-10-13T00:00:00.000Z;1;{{entityPrefix}}_{{index}}_INV_SUB_ACCESS_ElAO;USAGE",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/billing/mediation/chargeCdr",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"billing",
														"mediation",
														"chargeCdr"
													]
												}
											},
											"response": []
										},
										{
											"name": "Generate invoice - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "17e21027-61f8-4b16-9e19-0a9f8f1999ae",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetCode\": \"BA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\",\n    \"targetType\": \"BILLINGACCOUNT\",\n    \"invoicingDate\": \"2050-10-15\",\n    \"firstTransactionDate\": \"2050-10-01\",\n    \"lastTransactionDate\": \"2050-10-31\",\n    \"generatePDF\": false\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/invoice/generateInvoice",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"invoice",
														"generateInvoice"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create DDRequestLotOp - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e724431e-81e9-465c-9a43-b53eb15fc35a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"fromDueDate\": \"2050-01-01T00:00:00Z\",\n    \"toDueDate\": \"2051-01-01T00:00:00Z\",\n    \"ddrequestOp\": \"CREATE\",\n    \"status\": \"WAIT\",\n    \"ddRequestBuilderCode\": \"SEPA_STD\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "AO Job - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "258ed280-dd78-405a-a9e8-85203895afc7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"AO_Job\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/job/execute",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"job",
														"execute"
													]
												}
											},
											"response": []
										},
										{
											"name": "List Account operations - EL AO",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1493b8af-0dd3-48c0-891a-83406b0fc80a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"actionStatus\": {\r\n        \"status\": \"SUCCESS\"\r\n    },\r\n    \"paging\": {\r\n        \"fullTextFilter\": null,\r\n        \"filters\": {\r\n            \"customerAccount.code\": \"CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO\"\r\n        },\r\n        \"fields\": null,\r\n        \"offset\": null,\r\n        \"limit\": null,\r\n        \"sortBy\": \"id\",\r\n        \"sortOrder\": \"DESCENDING\",\r\n        \"totalNumberOfRecords\": 2,\r\n        \"loadReferenceDepth\": 0\r\n    },\r\n    \"accountOperations\": {\r\n        \"accountOperation\": [\r\n            {\r\n                \"id\": 2,\r\n                \"dueDate\": 2549491200000,\r\n                \"type\": \"I\",\r\n                \"transactionDate\": 2549404800000,\r\n                \"transactionCategory\": \"DEBIT\",\r\n                \"reference\": \"Fact_03\",\r\n                \"accountCode\": \"411000000\",\r\n                \"accountingCode\": \"411000000\",\r\n                \"accountCodeClientSide\": \"445510000\",\r\n                \"amount\": 21.240000000000,\r\n                \"amountWithoutTax\": 18.000000000000,\r\n                \"taxAmount\": 3.240000000000,\r\n                \"matchingAmount\": 0E-12,\r\n                \"unMatchingAmount\": 21.240000000000,\r\n                \"matchingStatus\": \"O\",\r\n                \"code\": \"INV_STD\",\r\n                \"description\": \"Standard invoice sub-item\",\r\n                \"excludedFromDunning\": false,\r\n                \"orderNumber\": \"\",\r\n                \"paymentMethod\": \"DIRECTDEBIT\"\r\n            },\r\n            {\r\n                \"id\": 1,\r\n                \"dueDate\": 2549491200000,\r\n                \"type\": \"I\",\r\n                \"transactionDate\": 2549404800000,\r\n                \"transactionCategory\": \"DEBIT\",\r\n                \"reference\": \"Fact_02\",\r\n                \"accountCode\": \"411000000\",\r\n                \"accountingCode\": \"411000000\",\r\n                \"accountCodeClientSide\": \"445510000\",\r\n                \"amount\": 10.620000000000,\r\n                \"amountWithoutTax\": 9.000000000000,\r\n                \"taxAmount\": 1.620000000000,\r\n                \"matchingAmount\": 0E-12,\r\n                \"unMatchingAmount\": 10.620000000000,\r\n                \"matchingStatus\": \"O\",\r\n                \"code\": \"INV_STD\",\r\n                \"description\": \"Standard invoice sub-item\",\r\n                \"excludedFromDunning\": false,\r\n                \"orderNumber\": \"\",\r\n                \"paymentMethod\": \"DIRECTDEBIT\"\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/accountOperation/list?customerAccountCode=CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"accountOperation",
														"list"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "CA_{{entityPrefix}}_{{index}}_INV_CUST_ElAO"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3d5c90f1-b8bb-49fb-94e2-6614b082b4f7",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 73);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f00f1402-dd46-4557-a46b-d6f1d6a4493f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Entity Customization",
							"item": [
								{
									"name": "Reference Entity",
									"item": [
										{
											"name": "Create CFT with reference entity",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "533a9760-47ad-467e-b31e-e37de40a5977",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_RCF100\",\n    \"fieldType\": \"ENTITY\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"entityClazz\": \"org.meveo.model.crm.Customer\",\n    \"storageType\": \"SINGLE\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get reference entities - no wildcard",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dfaa5ff4-532f-4536-a0da-8d2ed586b6a2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/listBusinessEntityForCFVByCode/?code={{entityPrefix}}_{{index}}_RCF100",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"listBusinessEntityForCFVByCode",
														""
													],
													"query": [
														{
															"key": "code",
															"value": "{{entityPrefix}}_{{index}}_RCF100"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get reference entities - with wildcard",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f8c53e9-82d4-4ffb-acdb-f71845d6d699",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_RCF100\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/listBusinessEntityForCFVByCode/?code={{entityPrefix}}_{{index}}_RCF100&wildcode=2",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"listBusinessEntityForCFVByCode",
														""
													],
													"query": [
														{
															"key": "code",
															"value": "{{entityPrefix}}_{{index}}_RCF100"
														},
														{
															"key": "wildcode",
															"value": "2"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "List per entity instance - el evaluated",
									"item": [
										{
											"name": "Create CFT Offer visible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5c3a1502-d331-42b0-a758-9a47d211d0cc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"VISIBLE\",\n    \"applicableOnEl\": \"#{entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CFT Offer hidden",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99cec392-1b32-4d6d-a003-4949403a803b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CF_HIDDEN_100\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CF_HIDDEN_100\",\n    \"fieldType\": \"STRING\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"storageType\": \"SINGLE\",\n    \"defaultValue\": \"HIDDEN\",\n    \"applicableOnEl\": \"#{!entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/field/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"field",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Query visible CFT",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b0f3910-77b5-4e5b-8a5a-c7288ed6901a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.entityCustomization.field[0].code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.entityCustomization.field[0].description).to.deep.equal(jsonBody.description);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\":\"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\",\n    \"description\":\"{{entityPrefix}}_{{index}}_CF_VISIBLE_100\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/entity/listELFiltered?appliesTo=OfferTemplate&entityCode={{baseEntityPrefix}}_OFFER1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"entity",
														"listELFiltered"
													],
													"query": [
														{
															"key": "appliesTo",
															"value": "OfferTemplate"
														},
														{
															"key": "entityCode",
															"value": "{{baseEntityPrefix}}_OFFER1"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "List entity action",
									"item": [
										{
											"name": "Create script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b144f1fe-e695-4111-b8d4-4b9263b78b69",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"executeAction\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;\\n    \\n    import java.util.Map;\\n    import java.math.BigDecimal;\\n    import org.meveo.admin.exception.BusinessException;\\n    import org.meveo.model.admin.User;\\n    import org.meveo.model.crm.Provider;\\n    import org.slf4j.Logger;\\n    import org.slf4j.LoggerFactory;\\n    import org.meveo.service.catalog.impl.OfferTemplateService;\\n    import org.meveo.model.catalog.OfferTemplate;\\n    \\n    public class ExecuteCustomAction_{{index}}_Script extends Script {\\n      \\n        private static final Logger log = LoggerFactory.getLogger(ExecuteCustomAction_{{index}}_Script.class);\\n        private OfferTemplateService offerTemplateService = (OfferTemplateService)getServiceInterface(\\\"OfferTemplateService\\\");\\n    \\n        public void execute(Map<String,Object> context) throws BusinessException{\\n            OfferTemplate offerTemplate = (OfferTemplate) context.get(Script.CONTEXT_ENTITY);\\n            offerTemplate.setDescription(\\\"action executed\\\");\\n        }\\n    }\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create custom action hidden",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d74f7419-f1b5-42ba-9da4-9cdbf17a80da",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_HIDDEN\",\n    \"description\": \"ExecuteCustomAction_{{index}}_HIDDEN\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    },\n    \"applicableOnEl\": \"#{!entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create custom action visible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4726816d-4a71-4322-9bdc-6bf2526caf38",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"description\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    },\n    \"applicableOnEl\": \"#{entity.code.equals('{{baseEntityPrefix}}_OFFER1')}\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "List visible CA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6cd6653a-5891-445a-afc8-df6993cf2e71",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.entityCustomization.action[0].code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.entityCustomization.action[0].description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.entityCustomization.action[0].appliesTo).to.deep.equal(jsonBody.appliesTo);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"description\": \"ExecuteCustomAction_{{index}}_VISIBLE\",\n    \"appliesTo\": \"OfferTemplate\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/entity/listELFiltered?appliesTo=OfferTemplate&entityCode={{baseEntityPrefix}}_OFFER1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"entity",
														"listELFiltered"
													],
													"query": [
														{
															"key": "appliesTo",
															"value": "OfferTemplate"
														},
														{
															"key": "entityCode",
															"value": "{{baseEntityPrefix}}_OFFER1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete custom action hidden",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bfab18cb-8394-4f39-87f6-b9ca30fcd558",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}_HIDDEN/OfferTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"ExecuteCustomAction_{{index}}_HIDDEN",
														"OfferTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete custom action visible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2991a587-bcdd-4f93-9f98-1ab14339286d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}_VISIBLE/OfferTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"ExecuteCustomAction_{{index}}_VISIBLE",
														"OfferTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87209377-c45a-4753-91d6-abb481088abe",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.ExecuteCustomAction_{{index}}_Script",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Execute entity action",
									"item": [
										{
											"name": "Create script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "11ad3bbd-037c-4649-a859-2d787c265ead",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"executeAction\",\n    \"type\": \"JAVA\",\n    \"script\": \"package org.meveo.service.script;\\n    \\n    import java.util.Map;\\n    import java.math.BigDecimal;\\n    import org.meveo.admin.exception.BusinessException;\\n    import org.meveo.model.admin.User;\\n    import org.meveo.model.crm.Provider;\\n    import org.slf4j.Logger;\\n    import org.slf4j.LoggerFactory;\\n    import org.meveo.service.catalog.impl.OfferTemplateService;\\n    import org.meveo.model.catalog.OfferTemplate;\\n    \\n    public class ExecuteCustomAction_{{index}}_Script extends Script {\\n      \\n        private static final Logger log = LoggerFactory.getLogger(ExecuteCustomAction_{{index}}_Script.class);\\n        private OfferTemplateService offerTemplateService = (OfferTemplateService)getServiceInterface(\\\"OfferTemplateService\\\");\\n    \\n        public void execute(Map<String,Object> context) throws BusinessException{\\n            OfferTemplate offerTemplate = (OfferTemplate) context.get(Script.CONTEXT_ENTITY);\\n            offerTemplate.setDescription(\\\"action executed\\\");\\n        }\\n    }\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create custom action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6a5a186a-eab3-4e57-bf73-95ba09ccb55f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"ExecuteCustomAction_{{index}}\",\n    \"description\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"script\": {\n        \"code\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ea2258a-4907-4441-a280-f2250d8a8b30",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"actionCode\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\",\n    \"entityCode\": \"{{baseEntityPrefix}}_OFFER3\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/entity/action/execute/ExecuteCustomAction_{{index}}/OfferTemplate/{{baseEntityPrefix}}_OFFER3",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"entity",
														"action",
														"execute",
														"ExecuteCustomAction_{{index}}",
														"OfferTemplate",
														"{{baseEntityPrefix}}_OFFER3"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ca24c160-7ad2-48fd-a17c-c7ad1e21ede2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"    pm.expect(jsonData.offerTemplate.description).to.deep.equal(jsonBody.description);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"action executed\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{baseEntityPrefix}}_OFFER3",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{baseEntityPrefix}}_OFFER3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete custom action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39ed3780-13cc-4d73-a857-a0c6d107c4c5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"actionCode\": \"ExecuteCustomAction_{{index}}\",\n    \"appliesTo\": \"OfferTemplate\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/entityCustomization/action/ExecuteCustomAction_{{index}}/OfferTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"entityCustomization",
														"action",
														"ExecuteCustomAction_{{index}}",
														"OfferTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c6597567-5582-4385-9407-b72eb5aa20e5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"removeScriptInstanceRequest\": \"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/org.meveo.service.script.ExecuteCustomAction_{{index}}_Script ",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"org.meveo.service.script.ExecuteCustomAction_{{index}}_Script "
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "07abccae-0dbd-413b-83c2-9730c57c8a7f",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 461);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0b2c29d5-594b-4002-96cc-00ded8b83945",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Entity Security",
							"item": [
								{
									"name": "Setup Data",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "147492b1-c40b-4b4e-a346-45f830d8df5f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b5c24b5e-2be9-4413-a92e-b63c46fac974",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e0413a16-bc6b-4757-9778-69b8cec5fbcc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8c356120-f595-4320-b2f2-604191b65c82",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9cf995b3-d61a-4a81-bd40-2dcebf9638e4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Seller SELLER_C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53c1b00d-4bb4-4500-82a4-24a0943351aa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Account Hierarchy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f4858c4-e99a-4459-a1ab-f2394cfd34de",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellers\": {\n        \"seller\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n                \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n                \"currencyCode\": \"EUR\",\n                \"countryCode\": \"FR\",\n                \"languageCode\": \"FRA\",\n                \"parentSeller\": \"MAIN_SELLER\",\n                \"customers\": {\n                    \"customer\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n                            \"externalRef1\": \"1\",\n                            \"externalRef2\": \"1\",\n                            \"name\": {\n                                \"title\": \"MR\",\n                                \"firstName\": \"firstName\",\n                                \"lastName\": \"lastName\"\n                            },\n                            \"address\": {\n                                \"address1\": \"address1\",\n                                \"address2\": \"address2\",\n                                \"address3\": \"address3\",\n                                \"zipCode\": \"75001\",\n                                \"city\": \"Tunis\",\n                                \"country\": \"TN\"\n                            },\n                            \"customerCategory\": \"CLIENT\",\n                            \"customerBrand\": \"DEFAULT\",\n                            \"mandateIdentification\": \"M1\",\n                            \"mandateDate\": \"2016-02-28\",\n                            \"contactInformation\": {\n                                \"email\": \"{{entityPrefix}}@manaty.net\",\n                                \"phone\": \"1234\",\n                                \"mobile\": \"092152154716\",\n                                \"fax\": \"1234\"\n                            },\n                            \"customerAccounts\": {\n                                \"customerAccount\": [\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA1\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA2\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA3\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA2\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA2\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA4\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA4\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA5\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA5\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA6\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA6\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA3\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA3\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA7\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA7\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA8\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA8\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA9\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA9\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA2\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA2\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA4\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA4\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA11\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA11\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA12\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA12\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA13\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA13\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA5\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA5\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA14\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA14\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA15\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA15\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA16\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA16\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA6\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA6\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA17\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA17\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA18\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA18\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA19\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA19\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAA3\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAA3\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA7\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA7\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA21\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA21\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA22\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA22\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA23\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA23\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA8\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA8\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA24\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA24\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA25\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA25\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA26\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA26\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAA9\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAA9\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA27\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA27\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA28\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA28\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAA29\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAA29\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n                \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n                \"currencyCode\": \"USD\",\n                \"countryCode\": \"US\",\n                \"languageCode\": \"ENG\",\n                \"parentSeller\": \"MAIN_SELLER\",\n                \"customers\": {\n                    \"customer\": [\n                        {\n                            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n                            \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n                            \"externalRef1\": \"1\",\n                            \"externalRef2\": \"1\",\n                            \"name\": {\n                                \"title\": \"MR\",\n                                \"firstName\": \"firstName\",\n                                \"lastName\": \"lastName\"\n                            },\n                            \"address\": {\n                                \"address1\": \"address1\",\n                                \"address2\": \"address2\",\n                                \"address3\": \"address3\",\n                                \"zipCode\": \"75001\",\n                                \"city\": \"Tunis\",\n                                \"country\": \"TN\"\n                            },\n                            \"customerCategory\": \"CLIENT\",\n                            \"customerBrand\": \"DEFAULT\",\n                            \"mandateIdentification\": \"M1\",\n                            \"mandateDate\": \"2016-02-28\",\n                            \"contactInformation\": {\n                                \"email\": \"{{entityPrefix}}@manaty.net\",\n                                \"phone\": \"1234\",\n                                \"mobile\": \"092152154716\",\n                                \"fax\": \"1234\"\n                            },\n                            \"customerAccounts\": {\n                                \"customerAccount\": [\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB1\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB2\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB3\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB2\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB2\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB4\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB4\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB5\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB5\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB6\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB6\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB3\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB3\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB7\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB7\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB8\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB8\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB9\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB9\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB2\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB2\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB4\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB4\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB11\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB11\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB12\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB12\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB13\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB13\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB5\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB5\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB14\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB14\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB15\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB15\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB16\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB16\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB6\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB6\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB17\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB17\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB18\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB18\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB19\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB19\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    },\n                                    {\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CAB3\",\n                                        \"description\": \"{{entityPrefix}}_{{index}}_CAB3\",\n                                        \"externalRef1\": \"1\",\n                                        \"externalRef2\": \"1\",\n                                        \"name\": {\n                                            \"title\": \"MR\",\n                                            \"firstName\": \"firstName\",\n                                            \"lastName\": \"lastName\"\n                                        },\n                                        \"address\": {\n                                            \"address1\": \"address1\",\n                                            \"address2\": \"address2\",\n                                            \"address3\": \"address3\",\n                                            \"zipCode\": \"75001\",\n                                            \"city\": \"Tunis\",\n                                            \"country\": \"TN\"\n                                        },\n                                        \"currency\": \"USD\",\n                                        \"language\": \"ENG\",\n                                        \"creditCategory\": \"NEWCUSTOMER\",\n                                        \"dateStatus\": \"2016-02-28\",\n                                        \"dateDunningLevel\": \"2016-02-28\",\n                                        \"contactInformation\": {\n                                            \"email\": \"{{entityPrefix}}@manaty.net\",\n                                            \"phone\": \"1234\",\n                                            \"mobile\": \"092152154716\",\n                                            \"fax\": \"1234\"\n                                        },\n                                        \"dunningLevel\": \"R0\",\n                                        \"mandateIdentification\": \"1234\",\n                                        \"mandateDate\": \"2016-02-28\",\n                                        \"billingAccounts\": {\n                                            \"billingAccount\": [\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB7\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB7\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB21\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB21\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB22\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB22\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB23\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB23\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB8\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB8\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB24\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB24\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB25\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB25\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB26\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB26\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                },\n                                                {\n                                                    \"code\": \"{{entityPrefix}}_{{index}}_BAB9\",\n                                                    \"description\": \"{{entityPrefix}}_{{index}}_BAB9\",\n                                                    \"externalRef1\": \"1\",\n                                                    \"externalRef2\": \"1\",\n                                                    \"name\": {\n                                                        \"title\": \"MR\",\n                                                        \"firstName\": \"firstName\",\n                                                        \"lastName\": \"lastName\"\n                                                    },\n                                                    \"address\": {\n                                                        \"address1\": \"address1\",\n                                                        \"address2\": \"address2\",\n                                                        \"address3\": \"address3\",\n                                                        \"zipCode\": \"75001\",\n                                                        \"city\": \"Tunis\",\n                                                        \"country\": \"TN\"\n                                                    },\n                                                    \"billingCycle\": \"CYC_INV_MT_1\",\n                                                    \"country\": \"US\",\n                                                    \"language\": \"ENG\",\n                                                    \"nextInvoiceDate\": \"2016-02-28\",\n                                                    \"subscriptionDate\": \"2016-02-28\",\n                                                    \"electronicBilling\": \"true\",\n                                                    \"email\": \"{{entityPrefix}}@manaty.net\",\n                                                    \"userAccounts\": {\n                                                        \"userAccount\": [\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB27\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB27\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB28\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB28\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            },\n                                                            {\n                                                                \"code\": \"{{entityPrefix}}_{{index}}_UAB29\",\n                                                                \"description\": \"{{entityPrefix}}_{{index}}_UAB29\",\n                                                                \"externalRef1\": \"1\",\n                                                                \"externalRef2\": \"1\",\n                                                                \"name\": {\n                                                                    \"title\": \"MR\",\n                                                                    \"firstName\": \"firstName\",\n                                                                    \"lastName\": \"lastName\"\n                                                                },\n                                                                \"address\": {\n                                                                    \"address1\": \"address1\",\n                                                                    \"address2\": \"address2\",\n                                                                    \"address3\": \"address3\",\n                                                                    \"zipCode\": \"75001\",\n                                                                    \"city\": \"Tunis\",\n                                                                    \"country\": \"TN\"\n                                                                }\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/customerHierarchyUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"customerHierarchyUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create UserHierarchyLevels",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fa199fc5-25e2-45e5-b9fb-ec1a8abee71a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_1\",\n    \"description\": \"{{entityPrefix}}_{{index}}_Description1\",\n    \"orderLevel\": \"1\",\n    \"userHierarchyLevel\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2\",\n            \"description\": \"{{entityPrefix}}_{{index}}_Description 2\",\n            \"orderLevel\": \"1\",\n            \"userHierarchyLevel\": [\n                {\n                    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2_1\",\n                    \"description\": \"{{entityPrefix}}_{{index}}_Description 21\",\n                    \"orderLevel\": \"1\"\n                },\n                {\n                    \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_2_2\",\n                    \"description\": \"{{entityPrefix}}_{{index}}_Description 22\",\n                    \"orderLevel\": \"2\"\n                }\n            ]\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_LEVEL_3\",\n            \"description\": \"{{entityPrefix}}_{{index}}_Description 3\",\n            \"orderLevel\": \"2\"\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/hierarchy/userGroupLevel",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"hierarchy",
														"userGroupLevel"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cd731bc2-0093-4c49-853a-6f21be37ab23",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level1\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 1\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_1\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4fbfa259-7207-4eb7-a37a-37663cf705c8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level2\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 2.1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "739e13d7-0326-4536-a742-198e369df4b6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level21\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2.1\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2_1\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 2.2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b6965db4-3c15-47e0-a0a1-9af6ce22062d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level22\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"Level 2.2\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_2_2\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User in level 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4de0da0d-aa3a-48fb-8588-6122bb810731",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level3\",\n    \"email\": \"{{entityPrefix}}_{{index}}@test.com\",\n    \"userRole\": [\n      \"administrateur\"\n    ],\n    \"firstName\": \"Level 3\",\n    \"lastName\": \"User\",\n    \"userLevel\": \"{{entityPrefix}}_{{index}}_LEVEL_3\"\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create UserRole with userSelfManagement permission",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ffd850a8-b79d-4de5-b59c-870e5571e9e2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"{{entityPrefix}}_{{index}}_ROLE_SELF_USER\",\n    \"description\": \"{{entityPrefix}}_{{index}}_ROLE_SELF_USER\",\n    \"permission\": [\n      {\n        \"permission\": \"userSelfManagement\",\n        \"name\": \"User Self Management\"\n      }\n    ]\n  }",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/role",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"role"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - no seller",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "631c978c-293f-4a2b-b545-d018aba80c03",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - seller A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "398484c9-ebe9-4abf-a74c-b4e101d27467",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_A\"\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - seller B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "51f1bb1f-3005-4a88-9530-d5c005ca93bb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_B\"\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - seller C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "801bfb31-2b8c-43c4-a42d-211cc362c77c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_C\"\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create offer template - seller A,B,C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "56ad2eba-8259-4ca8-ade5-590b87baaa88",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_D\",\n    \"seller\": [\n        \"{{entityPrefix}}_{{index}}_SELLER_A\",\n        \"{{entityPrefix}}_{{index}}_SELLER_B\",\n        \"{{entityPrefix}}_{{index}}_SELLER_C\"\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Set securedEntities=true - AUTHORIZATION_SUPERADMIN",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4a55b8ff-bd0e-4617-ab78-7457f2eba1b5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"property\": \"secured.entities.enabled\",\n    \"value\": \"true\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Seller Tests",
									"item": [
										{
											"name": "Restore User to default.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "25898ce3-6453-4dbb-b74a-0c6894df8f29",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f4da986-c5e7-4450-9ace-ac39155e8175",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0e982020-945e-4f60-b71b-54bf880a9742",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to MAIN_SELLER",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d0fdc854-4857-4349-829e-5659a26831aa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"MAIN_SELLER\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        },\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9ba14d8e-6fed-4f6f-813e-4d69e945d0dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8c561e69-176f-471e-b69f-40495230acec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ecf3a240-e877-4a5a-93e2-c09cfab2eb09",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still accessible.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3860912c-4abe-4086-8eea-571ee7987461",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ecdebb3-08ef-486a-b58c-1a7c5732f62b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller MAIN_SELLER not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09bd6875-6b50-4ccf-a513-ded2c9bb59af",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode=MAIN_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "MAIN_SELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "37a393ba-9cdd-4482-b89f-473867b206e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3c44007-077b-4e57-a090-eea40fb4e60a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"-code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"-description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f5ea732-7fc5-4c6d-9ffb-ead49b081ed6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller MAIN_SELLER still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb6b7b6b-5d96-4639-bf36-8106c57220ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode=MAIN_SELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "MAIN_SELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38b3edeb-d955-4a75-baa3-1af8199667da",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fe322c52-b90d-4fa3-a2e5-4e8870805fa2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef3858b9-cd71-47f5-886d-275fe582c603",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f2ccda2-6d77-42d3-9d3c-178ee4656db3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01b0a26c-847e-48a1-a69b-66edde60f060",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\n        \n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "53a251b5-2bb2-41ca-b29b-81bff91a73eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6f4d585e-8425-4385-8261-ca68223d866f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Customer with Filter CUSTA is accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "51f51ccb-a35d-44cf-9e09-7f966f3270f2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(1);",
															"    pm.expect(jsonData.customers.customer[0].code).to.deep.equal(jsonBody.customer[0].code);",
															"    pm.expect(jsonData.customers.customer[0].description).to.deep.equal(jsonBody.customer[0].description);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customer\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n            \"customerAccounts\": {\n                \"customerAccount\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTA|seller:{{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"list"
													],
													"query": [
														{
															"key": "query",
															"value": "code:{{entityPrefix}}_{{index}}_CUSTA|seller:{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Customer with Filter CUSTB not accessible.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2b99e292-a563-4690-85a5-a6f3b69e106b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customer\": [\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"list"
													],
													"query": [
														{
															"key": "query",
															"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f496ed96-b4b7-4614-9b02-29a28e65b405",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_A\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05c49a86-fde3-4007-8588-d018198d50a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTB only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5fac00e0-09b4-4418-8d1c-998f250fdc71",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b401a288-c5eb-48e3-964b-d4203ff2db4e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1a1eb0fc-71f8-4a4d-8ce0-2d2507820dcc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7e3717cf-4dc2-47a9-98ae-8a93ed4aa894",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_A\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "72952ba9-7c68-4a14-be3e-91d8ee139d9d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Customer with Filter CUSTA not accessible.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3227a8e-6896-40b4-b24b-94c519b568c7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(0);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customer\": [\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"list"
													],
													"query": [
														{
															"key": "query",
															"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "List Customer with Filter CUSTB is accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9ad7b74f-7fed-46c5-914f-34324b072928",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customers.totalNumberOfRecords).to.eql(1);",
															"    pm.expect(jsonData.customers.customer[0].code).to.deep.equal(jsonBody.customer[0].code);",
															"    pm.expect(jsonData.customers.customer[0].description).to.deep.equal(jsonBody.customer[0].description);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customers.customer[0].customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customer[0].customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customer\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n            \"customerAccounts\": {\n                \"customerAccount\": [\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n                    },\n                    {\n                        \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/list?query=code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"list"
													],
													"query": [
														{
															"key": "query",
															"value": "code:{{entityPrefix}}_{{index}}_CUSTB|seller:{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a105566a-26d5-4c0e-873a-a8bf9bffa7a9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer Account Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5890cc05-d523-4388-a68a-9b5707e30f8c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0f54b0a9-a0e6-4928-8854-983b5b8efc7a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d41f251-8c96-4175-bb28-18e8cf605c98",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1320568c-e961-4271-9ab6-d0e4d24d89cd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d0199a0-fc63-4b66-8f37-fca9b152c5eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTB\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAB3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39cdae8f-5b59-46b4-8e78-58553c795e08",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\n    \"currencyCode\": \"EUR\",\n    \"countryCode\": \"FR\",\n    \"languageCode\": \"FRA\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41a15f19-6ab2-4824-9a6b-d7edb2889c32",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.seller.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.seller.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.seller.currencyCode).to.deep.equal(jsonBody.currencyCode);",
															"    pm.expect(jsonData.seller.countryCode).to.deep.equal(jsonBody.countryCode);",
															"    pm.expect(jsonData.seller.languageCode).to.deep.equal(jsonBody.languageCode);",
															"    pm.expect(jsonData.seller.parentSeller).to.deep.equal(jsonBody.parentSeller);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"description\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n    \"currencyCode\": \"USD\",\n    \"countryCode\": \"US\",\n    \"languageCode\": \"ENG\",\n    \"parentSeller\": \"MAIN_SELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c403604f-e1ce-4542-af55-a53944c381ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "67f2c937-f932-47e0-98eb-e1a633b2f913",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c0b74cca-6d03-4482-a2d5-bee6adba5f90",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ed7d05e2-5fc5-49d6-a7ef-d61d6b621700",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1a3b911e-75a2-404a-871d-96fe126dc8db",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e7e2b4b8-a918-4d89-8abb-1737432040b0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d890bce8-08a7-4784-b67a-9e15d81b7649",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fee8df2f-8f45-4822-bee8-9520ee189db0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2af1f9d1-7d46-4390-bf14-8fc25479f37b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTB only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2f210913-643d-4bfa-8349-04507128ac46",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9fd07d43-bf4d-4dae-8be2-88aeb32e8f43",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a525177b-1784-4969-91e5-a83f7f8e5bfc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a14adb9-8fc9-4d30-8d8f-24bf81589fb9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6040509c-b8ab-4891-939a-ffd89f2a064a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c2b2a0be-3dd5-48ec-88b0-9a72bf575b36",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9fcd2a3f-fa60-46b1-b390-1cdbc71e9704",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d84ebf5e-9ddf-4ed8-b6e4-99aa67b989a2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerCode\": \"{{entityPrefix}}_{{index}}_CUSTA\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "55df8b1e-c373-4c7c-98f1-33c1b2130726",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b37ae192-03c0-4fe4-b503-a36d499d0f65",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d381de94-e815-4623-8b53-c9464374a1eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06472c7a-8d22-4b9f-810e-28c01243fcd1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2e061e8-1a71-4492-bd88-b929750dcccc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "56c858c1-a137-4a39-a536-6ebd17e915e5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "940fa01d-986f-44a8-9b99-eedc3820e76a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "05ec57fa-3d25-4e98-b1c5-cdffeb5c1540",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "54ae0771-ffdc-4640-8c50-5bc79e107e24",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA and CAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9b54d143-daef-4d0f-a389-27f6c9b178fa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "72846e73-0313-42ff-92db-e61e6199b6da",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA with all its CustomerAccounts included",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14428110-7376-4e03-984d-1270119eb8a1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[1].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[1].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[2].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"description\": \"{{entityPrefix}}_{{index}}_CUSTA\",\n    \"customerAccounts\": {\n        \"customerAccount\": [\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA1\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA2\"\n            },\n            {\n                \"code\": \"{{entityPrefix}}_{{index}}_CAA3\"\n            }\n        ]\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "59898e91-6f74-4c47-a3cb-ccdd00df6ded",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Billing Account Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ec662c45-a0cc-4a18-9e98-b1f9f97442cf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "955fbbf2-d9c4-4277-87e9-65f2fbceea27",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ae7c216-0ca8-423d-9dd5-ec2263d963c0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "514d329c-1cf9-4a4a-9630-42d49fc9ad36",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b2537fb9-9647-46e4-a3fc-b7e40fdb5f4c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08b45985-5628-40a8-8829-265c092fad6c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ffdb1b3-7056-4661-bb95-2601e839a702",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2be85554-24fa-4a67-a3f1-81b70baa3408",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fd13c39f-28f6-4522-b648-8ac68d2b6dbb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "560ee7f2-d8ed-4baf-affe-ea0d98a71944",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a59f1cdc-397a-4a33-bacf-ae847188f7ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "07c77dbc-6e83-40f6-a363-d2d84a2a42f7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTB only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4070a058-23dd-4ec1-9cec-2c8e7a514be1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "480924cc-8463-4c2c-a23a-042963a5cd49",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ea276b28-76cb-40e4-a976-51cd8524126e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb789bb9-b000-447a-849e-f462d9a08e43",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9d721676-6d14-4561-8247-35bfe17c5787",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c86c3555-5d60-4227-b843-15323fef91e4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8edb3c0a-bc12-4d13-8440-193377d1e862",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3af2b710-ad17-468d-8baf-47ab2df404a1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1480fcc1-9e1a-4400-bb22-7cb68b4435f1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "62d1e48f-e5de-422f-9f86-55e94eba2883",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87b031cc-a524-4b3f-916e-56126c2821e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c74eeb79-509e-418e-86a9-ede927208f0c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "215a7ec8-6d8f-4640-91dc-ad6ae3ae8ead",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1a20b75-0239-4e31-9b3b-6bda4ab5bf97",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14fe98a6-0d8f-4a6e-837a-7a8330e4e696",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b17abd20-38ca-4729-84eb-c80f5cf106c2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab03bd52-0ed2-439a-aef8-e736c17e9491",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7b7a6bf7-ce5f-4cce-a2b8-dee1fde53a94",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5a58d25a-f736-43e7-b957-5145dc582e44",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "48d91a81-b64a-4bb0-98a1-859ab9ddc7ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f83c1ca8-0eae-4138-a4d7-d78c61210c20",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAB3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "afd80caa-6db1-4fbe-9024-47a55df36711",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "314604b1-9d64-48ea-a0ce-71dc6f4b87fd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "466788de-2e4c-4fed-bd65-63895a51afd4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "29e830b9-c69d-4007-bb9c-7c03e914ee45",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8cd3a9a4-6265-4429-9cf0-76f1910ed844",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0899a9c0-4f11-4055-a231-401f0e4fda46",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 and BAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "37a69002-efba-4add-b6b6-3b57f6030939",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 with all its BillingAccounts included",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "add5f115-a901-4b20-b548-1bc1e1b2f993",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customerAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customerAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[0].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[0].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[1].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[1].code);",
															"    pm.expect(jsonData.customerAccount.billingAccounts.billingAccount[2].code).to.deep.equal(jsonBody.billingAccounts.billingAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n    \"billingAccounts\": {\r\n        \"billingAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_BAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "06e8b0e9-377e-42e8-b3fd-5615dac1f777",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "User Account Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d3704ca-c631-4476-965b-38ef8b484ba1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1f8f09eb-4011-4cdf-9c3e-37a1bcedf358",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d3a0bcb-58cd-41c2-bf9f-6af911b7dd20",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6bcc073a-63e7-41bc-95c7-1cdad48042ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 still accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fce415b4-8074-49a1-9acb-5c2142ab1586",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c079367c-db19-4236-832e-d09d78d98d69",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da6d02ee-36cf-44e0-ab9a-29d69dbc9ebc",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff15327a-26b0-4c0b-8cfc-4a122618f5c3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e5060f20-342c-4903-9100-a281c31d9409",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTA only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c3f24829-42f9-471f-b253-aa676e4ef205",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTA\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82ece9c0-db1d-4d79-8524-2e4dc954a8d3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d0a4165-1b00-4096-8095-7a8fa7d7a961",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CUSTB only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fccdc398-31fe-4707-a4d3-0979d4dffbc2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CUSTB\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b2de11a8-ae25-4d43-941c-c17b5cb7f93a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible again",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d13cc24f-dabd-4977-b701-f8904712386d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "25b86be8-33e6-4cfa-8bd0-2b88e906bc3a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAA1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "232be1d9-27dd-4b5d-a15f-e1e7e52a5cfb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f4733db1-965c-44f5-9b44-4db6cc118bf5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CAA1 only Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "affc18e7-9067-41d3-abe8-66455b5f9da0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CAB1\",\r\n            \"entityClass\": \"org.meveo.model.payments.CustomerAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0939d1ff-7ee2-4621-9c29-24f663fedc35",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible again.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "255d7768-a5cd-4ace-a02f-6e6c7b1092a8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3d021d8d-0178-4bf6-bf77-e88f8f836bd7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "657972dd-bbb2-4204-8e1a-073d3dbc52b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "701acb55-911b-43fd-bdc8-846375294f03",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aa570e4c-bff1-41a0-8bc0-bfd5dd792725",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "258ec596-1a56-4b99-90d0-8b3b9c12c389",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible again..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1da64343-f027-4f05-a1d8-1f4308d64843",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to UAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "abd125cd-8cea-4ebe-aa0e-c2a0df12cb5f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 now accessible again...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d0e6d40-09e4-43cc-bb5e-c623997b196a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 not accessible again...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0f7e3ace-ff0f-4ec3-a154-70bc18c8495a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ee551919-4dfa-4699-a20d-f202f9c845ea",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f83ef157-fb0e-49bc-977d-9fc952eada94",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1415acf9-6432-41b6-a182-8c483a7b31b7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8097ebc2-7188-41cd-b492-5c3525ee6587",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6db96a77-c3f1-4dbe-b403-122cad202bff",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f00525e6-1e0c-47bf-8ac8-c09b7e6f918c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb4a4d88-71c4-4eca-969d-59916a2671b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "270148c1-1aad-47bf-bba6-df6168dd89e6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to UAB1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "50cd04c1-2ae7-4a9b-af4f-87bfa29d7cf3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAB1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAA1 not accessible again...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0ae4ccf-63f0-4e31-bef1-730c894fcaf8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find User Account UAB1 now accessible again...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0913096-6ad1-4a96-b2ba-358adb44a65c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.userAccount.code).to.deep.equal(jsonBody.code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_UAB1\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/userAccount?userAccountCode={{entityPrefix}}_{{index}}_UAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"userAccount"
													],
													"query": [
														{
															"key": "userAccountCode",
															"value": "{{entityPrefix}}_{{index}}_UAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b5854235-1a0e-4ba6-afbb-49fe0f0259ab",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAB1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f80d4f1a-808c-4465-ba36-1d6ec51cd5c4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAA1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6d6cc57-6d60-48a8-8d20-ef1fd0b3c1de",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer Account CAB1 still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8c572b40-d780-4835-9bf5-ac550686c8c7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount?customerAccountCode={{entityPrefix}}_{{index}}_CAB1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount"
													],
													"query": [
														{
															"key": "customerAccountCode",
															"value": "{{entityPrefix}}_{{index}}_CAB1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTA still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d0265896-4a6c-43c2-8813-4d340eb2258f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Customer CUSTB still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a29f0f31-1cfe-434a-9217-d6b1016c8681",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_A still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f49c921b-a422-49be-a142-447930556f00",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Seller SELLER_B still not accessible",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "70cf615a-e306-438d-89d5-9a5adb5821be",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to BAA1 and UAA1 only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3182dcfe-fa4d-4cd1-acc1-c7d418769d5a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.BillingAccount\"\r\n        },\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_UAA1\",\r\n            \"entityClass\": \"org.meveo.model.billing.UserAccount\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Billing Account BAA1 with all its UserAccounts included",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d3600449-9373-473d-9333-4181494e79a2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.billingAccount.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.billingAccount.description).to.deep.equal(jsonBody.description);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[0].code).to.deep.equal(jsonBody.userAccounts.userAccount[0].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[1].code).to.deep.equal(jsonBody.userAccounts.userAccount[1].code);",
															"    pm.expect(jsonData.billingAccount.userAccounts.userAccount[2].code).to.deep.equal(jsonBody.userAccounts.userAccount[2].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_BAA1\",\r\n    \"userAccounts\": {\r\n        \"userAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA1\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA2\"\r\n            },\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_UAA3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/billingAccount?billingAccountCode={{entityPrefix}}_{{index}}_BAA1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"billingAccount"
													],
													"query": [
														{
															"key": "billingAccountCode",
															"value": "{{entityPrefix}}_{{index}}_BAA1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c613db9-d3f3-425c-a63f-01990c8cbcaa",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "AccountHierarchy API Tests",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f5b3334f-e657-417f-95ac-802d9f968395",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f37700d-8060-4f14-a88f-1a0430b63a6f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CRMAccountHierarchy fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ff6f787-c869-4339-a672-f473d3f5159f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b49c792f-bb8d-4b8d-b1c7-33ca252683a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create CRMAccountHierarchy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f91f8d0-6a83-4db0-a4fc-b6895af364e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/createCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"createCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bd826dd-b9ed-4af6-abed-87d9e7eef866",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find CRMAccountHierarchy fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2c4f8e4-43e3-472f-9e6d-7370a7525b0b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dc375bc-8578-460a-939f-95548b9d5f90",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find CRMAccountHierarchy.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82ea1782-5aa1-4eaa-bf5a-0d274fde25d0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].billingAccounts.billingAccount[0].userAccounts.userAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"customerAccounts\": {\r\n        \"customerAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n                \"billingAccounts\": {\r\n                    \"billingAccount\": [\r\n                        {\r\n                            \"userAccounts\": {\r\n                                \"userAccount\": [\r\n                                    {\r\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b4d0c58-dab1-4e5b-85f6-e54c9b95f47d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CRMAccountHierarchy fail",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "13ad7f11-d273-41a4-a002-3a965508d69a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"updateCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dabb0bd5-7a8e-46e6-889a-2e40075e789b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CRMAccountHierarchy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ef0ef147-fef0-41fb-887e-77218fa0f5f2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"updateCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "865d5523-b6b2-45e8-abc5-7058530b51a1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find CRMAccountHierarchy fail.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "48940ae0-5ffe-457b-98a7-2562f65974b4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only...",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "643d458a-b06d-451f-a08f-0326010ac289",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find CRMAccountHierarchy..",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4089449-07f9-401e-85df-3921715e7fdb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.customer.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"    pm.expect(jsonData.customer.customerAccounts.customerAccount[0].billingAccounts.billingAccount[0].userAccounts.userAccount[0].code).to.deep.equal(jsonBody.customerAccounts.customerAccount[0].code);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"customerAccounts\": {\r\n        \"customerAccount\": [\r\n            {\r\n                \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n                \"billingAccounts\": {\r\n                    \"billingAccount\": [\r\n                        {\r\n                            \"userAccounts\": {\r\n                                \"userAccount\": [\r\n                                    {\r\n                                        \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CRM-CUST"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to CRM-CUST only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c9a734d6-30fc-49e5-ba6b-43d789080b6c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n            \"entityClass\": \"org.meveo.model.crm.Customer\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update CRMAccountHierarchy.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b371619e-539d-4f9b-9854-fc3531b55c15",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy-Updated\",\r\n    \"externalRef1\": \"EXTRef1\",\r\n    \"externalRef2\": \"EXTRef2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"01020\",\r\n        \"city\": \"Charguia2\",\r\n        \"country\": \"TN\",\r\n        \"state\": \"Tunisie\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n        \"phone\": \"+0135215579\",\r\n        \"mobile\": \"+0141487410\"\r\n    },\r\n    \"language\": \"ENG\",\r\n    \"terminationReason\": \"TERM_REASON_2\",\r\n    \"subscriptionDate\": \"2016-03-16\",\r\n    \"terminationDate\": \"2016-06-15\",\r\n    \"customerCategory\": \"PROSPECT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M10221\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"USD\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"PART_C\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R1\",\r\n    \"billingCycle\": \"CYC_INV_MT_2\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"US\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_{{index}}@manaty.com\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/accountHierarchy/updateCRMAccountHierarchy",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"accountHierarchy",
														"updateCRMAccountHierarchy"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer CRM_CUST",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2baf6e50-4ccb-483a-b742-3ccc86f7f525",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"crmAccountType\": \"C_UA\",\r\n    \"crmParentCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"code\": \"{{entityPrefix}}_{{index}}_CRM-CUST\",\r\n    \"description\": \"{{entityPrefix}}_{{index}}_CRM-AccountHierarchy\",\r\n    \"externalRef1\": \"Ref1\",\r\n    \"externalRef2\": \"Ref2\",\r\n    \"name\": {\r\n        \"title\": \"M\",\r\n        \"firstName\": \"Saidani\",\r\n        \"lastName\": \"Hatem\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"Address1\",\r\n        \"address2\": \"Address2\",\r\n        \"zipCode\": \"20250\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"FR\",\r\n        \"state\": \"Paris\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}_18@yahoo.fr\",\r\n        \"phone\": \"+0122674100\",\r\n        \"mobile\": \"+0139154716\"\r\n    },\r\n    \"language\": \"FRA\",\r\n    \"terminationReason\": \"TERM_REASON_1\",\r\n    \"subscriptionDate\": \"2016-02-01\",\r\n    \"terminationDate\": \"2016-05-01\",\r\n    \"customerCategory\": \"CLIENT\",\r\n    \"customerBrand\": \"DEFAULT\",\r\n    \"mandateIdentification\": \"M1\",\r\n    \"mandateDate\": \"2016-04-01\",\r\n    \"currency\": \"EUR\",\r\n    \"caStatus\": \"ACTIVE\",\r\n    \"creditCategory\": \"VIP\",\r\n    \"dateStatus\": \"2016-04-01\",\r\n    \"dateDunningLevel\": \"2016-04-04\",\r\n    \"dunningLevel\": \"R0\",\r\n    \"billingCycle\": \"CYC_INV_MT_1\",\r\n    \"seller\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\r\n    \"country\": \"FR\",\r\n    \"nextInvoiceDate\": \"2016-05-01\",\r\n    \"electronicBilling\": \"true\",\r\n    \"baStatus\": \"ACTIVE\",\r\n    \"email\": \"{{entityPrefix}}_18@yahoo.fr\",\r\n    \"uaStatus\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CRM-CUST",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{entityPrefix}}_{{index}}_CRM-CUST"
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2148163b-b0c1-49bc-b54b-378b4fff066f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Offer templates",
									"item": [
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d2b3eaaf-4648-4bda-a6e1-4a882486f1bf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates - show all",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c2a7bad-c254-416e-ba81-80bd14a51217",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													],
													"query": [
														{
															"key": "limit",
															"value": "500"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_A only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2d5e1eb9-9aa2-4ac0-ae7c-4337954823cf",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"username\": \"opencell.admin\",\r\n    \"password\": \"opencell.admin\",\r\n    \"email\": \"meveo.admin@opencellsoft.com\",\r\n    \"userRole\": [\r\n        \"administrateur\"\r\n    ],\r\n    \"accessibleEntity\": [\r\n        {\r\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_A\",\r\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\r\n        }\r\n    ],\r\n    \"firstName\": \"meveo\",\r\n    \"lastName\": \"admin\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates - show A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5880bcb8-7ac2-4bfd-9bb8-632b5d51125d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													],
													"query": [
														{
															"key": "limit",
															"value": "500"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - no seller",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b99b9fa4-c011-4a37-879f-bb2f83be7b7f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\",\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_NOSELLER\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_NOSELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_NOSELLER"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c2363342-a5c7-4494-8009-9b41e3eb71cb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\",\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_A\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - B fails",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "25bef5f2-d24e-485f-9749-fdcff27e5858",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_B only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "51b3cc88-641f-4f72-9253-311747fb82a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_B\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates - show B and C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0042f4cc-abd9-4a42-baa0-980e19df0d6d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													],
													"query": [
														{
															"key": "limit",
															"value": "500"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - B 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "20fbbb41-74ba-4fdc-9b0c-071335512c53",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_B\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "813b7f36-d7de-4277-ae38-ed1b49ed2595",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - A  fails",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a3f8535-0b35-44a6-bead-b7f395380424",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update User to Allow Access to SELLER_C only",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "def4c2e0-7546-4153-b592-cb9260541147",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"accessibleEntity\": [\n        {\n            \"code\": \"{{entityPrefix}}_{{index}}_SELLER_C\",\n            \"entityClass\": \"org.meveo.model.admin.Seller\"\n        }\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates - show C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d7757186-32f6-49e1-ad5c-57e4c2b1eb5e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list?limit=500",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													],
													"query": [
														{
															"key": "limit",
															"value": "500"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - C 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "63fa35e8-4007-411a-933c-f7c2aa7a377e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Check Data\", function () {",
															"    var jsonData = pm.response.json();",
															"    var jsonBody = JSON.parse(pm.request.body);",
															"",
															"    pm.expect(jsonData.offerTemplate.code).to.deep.equal(jsonBody.code);",
															"    pm.expect(jsonData.offerTemplate.name).to.deep.equal(jsonBody.name);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\",\r\n    \"name\": \"{{entityPrefix}}_{{index}}_OFFER_SELLER_C\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - A  fails 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e542a4eb-fc62-4894-bc33-6a0484aa78f0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find offerTemplate - B fails 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "577428d6-9573-4268-ad39-d8e8b271e1f1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"AUTHENTICATION_AUTHORIZATION_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Access to entity details is not allowed.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate?offerTemplateCode={{entityPrefix}}_{{index}}_OFFER_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate"
													],
													"query": [
														{
															"key": "offerTemplateCode",
															"value": "{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e6a12adb-571a-4e9d-a4ac-46e6039d952f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates by filter - show only C and A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f923fe77-cdf0-4865-b4bf-d1cbbd3c5f19",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    var jsonData = pm.response.json();",
															"",
															"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(3);",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_D\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"filters\": {\r\n        \"inList sellers\": \"{{entityPrefix}}_{{index}}_SELLER_A,{{entityPrefix}}_{{index}}_SELLER_C\"\r\n    }\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													]
												}
											},
											"response": []
										},
										{
											"name": "List offerTemplates by filter - do not show C and A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "42279d18-280b-48ad-8cb0-47e2eea40e5f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});",
															"",
															"pm.test(\"Body contains offer templates\", function () {",
															"    var jsonData = pm.response.json();",
															"",
															"    pm.expect(jsonData.paging.totalNumberOfRecords).to.eql(2);",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_NOSELLER\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_A\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_B\\\"\");",
															"    pm.expect(pm.response.text()).to.not.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_C\\\"\");",
															"    pm.expect(pm.response.text()).to.include(\"\\\"code\\\":\\\"\"+pm.environment.get(\"entityPrefix\")+\"_\"+pm.globals.get(\"index\")+\"_OFFER_SELLER_D\\\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"filters\": {\n        \"not-inList sellers\": \"{{entityPrefix}}_{{index}}_SELLER_A,{{entityPrefix}}_{{index}}_SELLER_C\",\n        \"like code\": \"{{entityPrefix}}_{{index}}_*\"\n    }\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/list",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"list"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Cleanup Data",
									"item": [
										{
											"name": "Set securedEntities=false",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3ada593-7e4e-428a-9cdd-cc79004ff96d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"property\": \"secured.entities.enabled\",\n    \"value\": \"false\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer CUSTA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "548880e2-0652-4cb3-8fa5-0f9060ec0941",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{entityPrefix}}_{{index}}_CUSTA"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Deleted Customer CUSTA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3e27cea-735c-4d61-b813-5c18d304d2ee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Customer with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUSTA does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTA",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTA"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Customer CUSTB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ee848f50-72d4-4f67-ba0c-99731612228b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer/{{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer",
														"{{entityPrefix}}_{{index}}_CUSTB"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find Deleted Customer CUSTB",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9807ed1f-b2b5-4184-b8a8-a5ec07d6a2e2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Customer with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_CUSTB does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customer?customerCode={{entityPrefix}}_{{index}}_CUSTB",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customer"
													],
													"query": [
														{
															"key": "customerCode",
															"value": "{{entityPrefix}}_{{index}}_CUSTB"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - no seller",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "02afabd8-7b64-426d-8273-22269eb1d80b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_NOSELLER",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_NOSELLER"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "82cc26c7-b6a5-4f1d-9314-84db98f18e86",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_SELLER_A"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df3050d2-de2f-45f7-be7f-aec9ece72d51",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_SELLER_B"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f7d956fd-2485-432d-8e63-f0f1261037db",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_SELLER_C"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove offerTemplate - D",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a39c4701-c83a-43b4-8ee7-c22d05a5338e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/catalog/offerTemplate/{{entityPrefix}}_{{index}}_OFFER_SELLER_D",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"catalog",
														"offerTemplate",
														"{{entityPrefix}}_{{index}}_OFFER_SELLER_D"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b321f4da-775f-40a9-b7c2-2b3d707d8bf0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{entityPrefix}}_{{index}}_SELLER_A"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find deleted Seller SELLER_A",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9300ffaa-4cc9-4a85-afba-2899193c51ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_A does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_A",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_A"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller SELLER_C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c7c822e8-372c-459e-85b8-2172c8eac0e0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{entityPrefix}}_{{index}}_SELLER_C"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "51250c71-166b-4358-a5ff-ff03f07931a0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller/{{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller",
														"{{entityPrefix}}_{{index}}_SELLER_B"
													]
												}
											},
											"response": []
										},
										{
											"name": "Find deleted Seller SELLER_B",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c0aa3c0-ae55-42e6-9b7d-2f305876dc71",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_B does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_B",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_B"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Find deleted Seller SELLER_C",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d90a65e-d832-4981-953b-17a273fe24d2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"FAIL\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql(\"ENTITY_DOES_NOT_EXISTS_EXCEPTION\");",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"Seller with code=\" + pm.environment.get(\"entityPrefix\") + \"_\" + pm.globals.get(\"index\") + \"_SELLER_C does not exists.\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"sellerCode\": \"{{entityPrefix}}_{{index}}_SELLER_B\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/seller?sellerCode={{entityPrefix}}_{{index}}_SELLER_C",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"seller"
													],
													"query": [
														{
															"key": "sellerCode",
															"value": "{{entityPrefix}}_{{index}}_SELLER_C"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Restore User to default",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e3565d39-e6b7-4e6a-8c65-7940d402baac",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"opencell.admin\",\n    \"password\": \"opencell.admin\",\n    \"email\": \"meveo.admin@opencellsoft.com\",\n    \"userRole\": [\n        \"administrateur\"\n    ],\n    \"firstName\": \"meveo\",\n    \"lastName\": \"admin\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9872e1c8-31c5-4610-9cab-6edc91c0871c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level1\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level1"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89647235-7b52-48c3-ac51-0a41790e508f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level2\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level2",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level2"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 2.1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "89812ff3-67ff-43fd-9617-4ad5f5ee8bea",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql()",
															"    ;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level21\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level21",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level21"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 2.2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "896ae283-07b2-4728-9eee-3a6311e135a3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level22\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level22",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level22"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete User level 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "430da7c4-100f-4bef-8ab7-78874df1e621",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"{{entityPrefix}}_{{index}}_Username.Level3\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/user/{{entityPrefix}}_{{index}}_Username.Level3",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"user",
														"{{entityPrefix}}_{{index}}_Username.Level3"
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove UserHierarchyLevel 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e0c0bb6-66c7-42ef-b576-09535d8bfcb1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hierarchyLevelCode\": \"{{entityPrefix}}_{{index}}_LEVEL_1\"\n}\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/hierarchy/userGroupLevel/{{entityPrefix}}_{{index}}_LEVEL_1",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"hierarchy",
														"userGroupLevel",
														"{{entityPrefix}}_{{index}}_LEVEL_1"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0ea0efb5-08c1-47fa-a772-a355072abb4f",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 34);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f506591b-e1a6-4af4-b756-b1eec4970b28",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Workflow executions",
							"item": [
								{
									"name": "Test data",
									"item": [
										{
											"name": "Create customer account for WF",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "172ebf7c-83e3-422e-a4aa-5fd4c61e2951",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"description\": \"testWF_CA\",\r\n    \"externalRef1\": \"EXTREF1\",\r\n    \"externalRef2\": \"EXTREF2\",\r\n    \"name\": {\r\n        \"title\": \"MR\",\r\n        \"firstName\": \"firstname\",\r\n        \"lastName\": \"lastname\"\r\n    },\r\n    \"address\": {\r\n        \"address1\": \"adress1\",\r\n        \"address2\": \"address2\",\r\n        \"address3\": \"adress3\",\r\n        \"zipCode\": \"21000\",\r\n        \"city\": \"Dijon\",\r\n        \"country\": \"France\"\r\n    },\r\n    \"contactInformation\": {\r\n        \"email\": \"{{entityPrefix}}@manaty.net\",\r\n        \"phone\": \"00123456789\",\r\n        \"mobile\": \"092152154716\"\r\n    },\r\n    \"mandateIdentification\": \"1234569548\",\r\n    \"mandateDate\": \"2016-03-10\",\r\n    \"customer\": \"{{baseEntityPrefix}}_CUST\",\r\n    \"currency\": \"EUR\",\r\n    \"language\": \"FRA\",\r\n    \"creditCategory\": \"Pro\",\r\n    \"status\": \"ACTIVE\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/account/customerAccount/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"account",
														"customerAccount",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ScriptInstance for Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7615bfc3-ff83-42ad-b5bf-29b593df196e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"org.meveo.service.script.TheAction\",\r\n    \"description\": \"The Action Script\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\nimport java.util.Map;\\nimport java.math.BigDecimal;\\nimport org.meveo.admin.exception.BusinessException;\\nimport org.meveo.model.admin.User;\\nimport org.meveo.model.crm.Provider;\\nimport org.slf4j.Logger;\\nimport org.slf4j.LoggerFactory;\\npublic class TheAction extends Script {  \\n  private static final Logger log = LoggerFactory.getLogger(TheAction.class);\\npublic void execute(Map<String,Object> context) throws BusinessException{\\nlog.debug(\\\"\\\\nTheAction Execution\\\\n\\\");\\ncontext.put(Script.RESULT_VALUE, \\\"A string response\\\");\\n}\\n}\",\r\n    \"executionRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ],\r\n    \"sourcingRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Dunning WFType Script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ed066b6f-bf15-4fc5-be76-9fb6029d2a38",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"org.meveo.service.script.DunningWFTypeScript\",\r\n    \"description\": \"DunningWFTypeScript\",\r\n    \"type\": \"JAVA\",\r\n    \"script\": \"package org.meveo.service.script;\\n\\nimport java.util.ArrayList;\\nimport java.util.Date;\\nimport java.util.List;\\n\\nimport org.meveo.model.admin.User;\\nimport org.meveo.model.payments.CustomerAccount;\\nimport org.meveo.model.payments.DunningLevelEnum;\\nimport org.meveo.service.script.wf.WFTypeScript;\\n\\n\\npublic class DunningWFTypeScript extends WFTypeScript<CustomerAccount>{\\n\\n  public DunningWFTypeScript() {    \\n  }\\n  \\n  public DunningWFTypeScript(CustomerAccount e) {\\n    super(e);\\n  }\\n  @Override\\n  public List<String> getStatusList() {    \\n    List<String> values = new ArrayList<String>();\\n    for (DunningLevelEnum dunningLevelEnum : DunningLevelEnum.values()) {\\n      values.add(dunningLevelEnum.name());\\n    }\\n    return values;\\n  }\\n\\n  @Override\\n  public void changeStatus(String newStatus) {\\n    entity.setDunningLevel(DunningLevelEnum.valueOf(newStatus));\\n    entity.setDateDunningLevel(new Date());\\n  }\\n\\n  @Override\\n  public String getActualStatus() {    \\n    return entity.getDunningLevel().name();\\n  }\\n}\",\r\n    \"executionRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ],\r\n    \"sourcingRoles\": [\r\n        {\r\n            \"name\": \"administrateur\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/scriptInstance/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"scriptInstance",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Workflow with natif WFType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "51eecb88-039a-4b3d-b7d2-d3226e47f08d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_DunningWorkflow\",\r\n    \"description\": \"Dunning workflow from class\",\r\n    \"enableHistory\": \"true\",\r\n    \"targetEntityClass\": \"org.meveo.admin.wf.types.DunningWF\",\r\n    \"initStatus\": \"R0\",\r\n    \"transition\": [\r\n        {\r\n            \"fromStatus\": \"R0\",\r\n            \"toStatus\": \"R1\",\r\n            \"conditionEl\": \"#{true}\",\r\n            \"description\": \"DESCRIPTION to R1\",\r\n            \"actionScriptCode\": \"#{mv:executeScript(entity,\\\"org.meveo.service.script.TheAction\\\",null)}\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"createOrUpdate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Workflow with runTime WFType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c00d47a4-eb64-43d5-8d80-d855f84cdde1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"code\": \"{{baseEntityPrefix}}_DunningRunTimeWF\",\r\n    \"description\": \"Dunning workflow from script\",\r\n    \"enableHistory\": \"true\",\r\n    \"targetEntityClass\": \"org.meveo.service.script.DunningWFTypeScript\",\r\n    \"initStatus\": \"R0\",\r\n    \"transition\": [\r\n        {\r\n            \"fromStatus\": \"R1\",\r\n            \"toStatus\": \"R2\",\r\n            \"conditionEl\": \"#{true}\",\r\n            \"description\": \"DESCRIPTION to R2\",\r\n            \"actionScriptCode\": \"#{mv:executeScript(entity,\\\"org.meveo.service.script.TheAction\\\",null)}\"\r\n        }\r\n    ]\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/createOrUpdate",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"createOrUpdate"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "find & execute",
									"item": [
										{
											"name": "find workflow by entity",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "444b3e0d-02f4-47ab-a18f-ca3804d4a6b3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.actionStatus.message).to.eql();",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/findByEntity?baseEntityName=org.meveo.model.payments.CustomerAccount",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"findByEntity"
													],
													"query": [
														{
															"key": "baseEntityName",
															"value": "org.meveo.model.payments.CustomerAccount"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute WF - NatitType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dcdc1a05-0b9f-4c1c-a198-fc0bc166939b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"baseEntityName\": \"org.meveo.model.payments.CustomerAccount\",\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"workflowCode\": \"{{baseEntityPrefix}}_DunningWorkflow\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/execute?baseEntityName=org.meveo.model.payments.CustomerAccount&entityInstanceCode=RS_FULL_{{index}}_WF_CA&workflowCode={{entityPrefix}}_DunningWorkflow",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"execute"
													],
													"query": [
														{
															"key": "baseEntityName",
															"value": "org.meveo.model.payments.CustomerAccount"
														},
														{
															"key": "entityInstanceCode",
															"value": "RS_FULL_{{index}}_WF_CA"
														},
														{
															"key": "workflowCode",
															"value": "{{entityPrefix}}_DunningWorkflow"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute WF - scriptType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eeb45f44-846c-4380-a797-e08c854cac86",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"baseEntityName\": \"org.meveo.model.payments.CustomerAccount\",\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"workflowCode\": \"{{baseEntityPrefix}}_DunningRunTimeWF\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/execute?baseEntityName=org.meveo.model.payments.CustomerAccount&entityInstanceCode=RS_FULL_{{index}}_WF_CA&workflowCode={{entityPrefix}}_DunningRunTimeWF",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"execute"
													],
													"query": [
														{
															"key": "baseEntityName",
															"value": "org.meveo.model.payments.CustomerAccount"
														},
														{
															"key": "entityInstanceCode",
															"value": "RS_FULL_{{index}}_WF_CA"
														},
														{
															"key": "workflowCode",
															"value": "{{entityPrefix}}_DunningRunTimeWF"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "wf history",
									"item": [
										{
											"name": "findHistory-no criteria",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9529ad9-5e06-42e6-afa6-81473387f73d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/history",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"history"
													]
												}
											},
											"response": []
										},
										{
											"name": "findHistory-with criteria",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9e5e53c8-7dc9-4c31-a77b-10143d744467",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"entityInstanceCode\": \"{{entityPrefix}}_{{index}}_WF_CA\",\r\n    \"fromStatus\": \"R1\",\r\n    \"toStatus\": \"R2\"\r\n}\r\n",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/admin/genericWorkflow/history?entityInstanceCode=RS_FULL_{{index}}_WF_CA&fromStatus=R1&toStatus=R2",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														"admin",
														"genericWorkflow",
														"history"
													],
													"query": [
														{
															"key": "entityInstanceCode",
															"value": "RS_FULL_{{index}}_WF_CA"
														},
														{
															"key": "fromStatus",
															"value": "R1"
														},
														{
															"key": "toStatus",
															"value": "R2"
														}
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ba0abacb-a6e8-46fe-80fa-290c0a5c724e",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"index\", 34);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "eadebcb1-cd4c-403e-8b80-642476896ceb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "651346a8-c1e1-40c9-aeae-324807de200b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3d23e210-f445-47fc-a4a7-f0e5c30f3208",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "In Progress",
			"item": [
				{
					"name": "Scenarios",
					"item": [
						{
							"name": "Custom Fields in Filters",
							"item": [
								{
									"name": "Setup Test Data",
									"item": [
										{
											"name": "Create Test Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c55ad27-455b-49b9-a3f4-95dbb1f6e9df",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb2e0585-ae26-4b8f-953e-46a66a93444d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e5d10825-6dde-4a04-8fde-47072e985b92",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0e06663-4e3b-47b0-b35e-f9f4719d8b65",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan OneShot",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f494e1f-1cec-4fd2-bc7f-533249635ed9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create priceplan usage",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf0eccd3-ed55-4ba2-8975-9c8f30f28dfb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create recurring charge template",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cb827a9b-e2af-4423-a47b-a4faaded261f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Setup Filters",
									"item": [
										{
											"name": "Create Access Filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c3b1ab7a-d3ce-4724-b00b-3af74c4a9fb9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Filter - Rating date",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0af87acd-23af-4f72-8b29-04cfc6e54ca7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Filter by Code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "52968a2a-421a-409f-8b88-10d7d3f65340",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Filter by Amount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ad379f9-bc15-492e-930c-c73eb05ca788",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Price Plan Filter Age",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cf9a4fee-ffe0-42c1-ad19-83c9d566f097",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account Filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "50469702-f8fa-4dda-b8af-e7615efbdfec",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account Filter enum",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "931058ac-37f2-4edf-9628-9e3b48eed922",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring charge template Filter by Duration",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a48119eb-5f2c-42e8-bda8-7cddc3d20e99",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Recurring charge template Filter by Prorata",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d4d6483-660e-43b0-89fd-da0f5c8d5095",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Search with Filters",
									"item": [
										{
											"name": "Search PP by date - date",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b73ef2d2-dd5b-4291-bc08-4d1a847754cb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search PP by code - string",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4ac6429-86f2-4dc5-b90f-0b437a940f2e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search PP by amount - decimal",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "96c6d174-9780-40d7-bb2a-d291f981695e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search PP by age - long",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "943aef8f-f0dc-43e9-a844-a821e8317372",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search RCT by duration - integer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9e69b1e-166f-4993-bf1b-5c902f53b657",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Search RCT by prorata - boolean",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d08b8d3-c67e-4205-8240-1e3e41ff5893",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Test Data Cleanup",
									"item": [
										{
											"name": "Remove recurring charge template",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c7ac81fb-151d-40b5-b21d-d14c01b6dd82",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2eb4b43-6045-4927-b4a6-e765178b2cd3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove Billing Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c245ad5-eb36-4a06-9697-4786db0a8883",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove priceplan recurring",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d564579-f91b-4f51-a866-16ff56011ac3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove priceplan OneShot",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ecd4f542-67b7-4825-a9fa-a6e711bfe5ce",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove priceplan usage",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "74a9f84a-98fa-4ce7-a398-8caa3bb0740a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Filter search and invoicing",
							"item": [
								{
									"name": "Data model",
									"item": [
										{
											"name": "Create subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "84ae4021-d541-4726-a747-c23bfb19b896",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3db370ff-eb7e-4346-a30b-675c84d70a2c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create RatedTransactions Filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08b49f85-fa43-4910-98e9-a0e4f3c6a143",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Rated Transaction Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "74b84748-10c8-45a0-8418-7e0b1feb95dd",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Search",
									"item": [
										{
											"name": "Search from filter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7156c69d-cbf1-4d05-a804-48ff360b0f96",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Inbound Request Tests",
							"item": [
								{
									"name": "Inbound 1",
									"item": [
										{
											"name": "Create ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d5589b65-339a-4ab3-8a43-bac376c4aef7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Notifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "293407a8-1b0c-407c-8939-7600c6327cee",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Fired=true",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "025df413-5f3e-42e6-b168-81feb7ba3a0a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Fired - change return status to 230",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "43ff1b18-0686-4526-9141-4d3b1914a8d5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Fired=false",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ea49d66a-895f-4d9d-b8c3-337c5efcef9e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "List notification history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b7b9438e-c347-40b8-80a1-c621981494f4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Jobs",
							"item": [
								{
									"name": "Job Reporting",
									"item": [
										{
											"name": "Execute 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d24cc590-3e81-46c8-9b30-d6e363d5457c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8fcfb118-f449-40a7-9d13-df16ec8df0ff",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find by code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ce29668-01ad-49b1-8bc1-3830fb4019ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find by id",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d891c0f3-d242-4d6b-beb1-cbb19f7b3f19",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Reporting",
							"item": [
								{
									"name": "ReportExtract",
									"item": [
										{
											"name": "Create ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8af411aa-c5d8-4815-b40a-66fd6430b230",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate - SQL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d68dd2a-a2de-48a4-82af-9169075e1918",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateOrUpdate - JAVA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0e797b6-5d57-41e2-aeb0-dfd0bc39892d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run - SQL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e07228b9-7acd-4521-bdc6-835f8916f432",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run - JAVA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "549763d6-bde4-454a-98e6-0847d163eff4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find - SQL 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "31cbc6ee-a189-45c6-b8a0-78e57224cc5f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find - JAVA 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5902998e-feec-4ea2-931f-968a611b44ea",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove - SQL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7212acf1-77c9-476d-9525-cc8c16c8e554",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Remove - JAVA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a9ad37e3-de08-417e-a0b3-3a3245dd07db",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find - SQL",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2eeeff13-49a6-45d4-b444-878a19b0c963",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Find - JAVA",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d94825b3-36aa-405f-963a-324bae03e1ef",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "57183196-c72f-4b8f-8a35-c86243cfd854",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Execute Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01f70318-f535-4408-91bc-a2bc2354efa9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete script",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e3254fe7-3600-4d3d-bde3-63e673cf4704",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "GDPR Erasure",
							"item": [
								{
									"name": "Account operations",
									"item": [
										{
											"name": "Create BillingCycle",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30e783e4-a475-40a0-8531-1398523ebdac",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e6c9cbd0-8766-4eae-aed9-8048e24b6668",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Created sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9f38f10a-7de6-4859-a900-1c949f8c9cf7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c65fa3b1-c841-4d43-b24c-ca2423038799",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run RT",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "04294a59-0813-4275-86e0-03a310fae268",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Generate Previous Invoice old",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df9679d1-efbd-44b8-9c18-e196110491ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Payment for Invoice old",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "338a8b06-3a80-45fd-a2e3-fd45cc9019a5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Created sub 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4e2a3de1-9724-4135-862c-d36c4ef20ee6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d961506-82bc-4328-aca6-b8656424b046",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run RT 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df2d1ee3-1b57-4f4e-95f4-84303335d085",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Generate Previous Invoice new",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5f9f4c2b-8b1a-45f3-8073-a91687a08b8a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Payment for Invoice new",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "50027fa3-288e-419f-ab11-7a081fdbd0e9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Undue payment 50",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cdb37016-8375-4217-bbd4-2774f641d62c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Refund 50",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "95f203a7-9704-4ee1-aa4c-ef6b46f3d1ad",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Match Undue payment and Refund",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3481592d-c58c-4891-8bb0-dc8c488a0df1",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Subscription",
									"item": [
										{
											"name": "Created sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "486cabd0-5bb5-4a79-8bf2-0b6eeb4e699e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Active sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "046e9307-4707-449c-9647-ee4ffa2952e6",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6954eb35-f9f5-4795-b967-d0a719aa7118",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Suspended sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dd4c46d5-ea86-4761-9782-a678ba32793b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create access to suspended sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b39f38a1-ab49-4a05-8c07-238c17e346a4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Suspend sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "923e830b-6c65-4ab2-b03e-318dcbfd235f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Resiliated sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15f209d9-ff40-4075-bd6a-09b93269d4b2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate service - Resiliated",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "73c2c1af-d61f-4a62-a540-118e0ff77824",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Resiliate sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5e84f745-81d0-4df4-a1e1-a0108128cd58",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Order",
									"item": [
										{
											"name": "Create old order",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e338f371-7894-4dd8-adef-a4fb5c9cced8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new order",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4fc86ee9-53a2-4ade-9e82-aad0ab0e2d47",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Invoice",
									"item": [
										{
											"name": "Create BillingCycle",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "24cd5c3a-3395-4836-aa5d-5347f8aa03f9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create InvoiceType",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7870fa61-8bc6-43b6-ac34-768191b41959",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Billing Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "239b3587-ea36-4a59-900e-b7cf70cffb7d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create User Account",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "30e17009-cf26-479d-8bbe-19e8acdcb912",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Created sub",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "877ac3d6-52d8-4767-8dde-8e872ca83465",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Apply one shot",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "15f3e54a-f325-40f4-946f-b064dc93b912",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run RT",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "346efb51-85d8-4077-bbfc-d580c6a932e4",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create BR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "786c5bed-1045-4d9e-8a51-ed986f6e53eb",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Invoicing Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "23082939-3b2c-41f0-938d-76ae991fe25d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Validate BR",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8afc45c0-4006-4aea-bd64-11ccde5f4393",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Create invoice",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "34343332-6eba-4a21-a3ff-21d80e57382f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "GDPR",
									"item": [
										{
											"name": "Create GPDR Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e57e5401-56df-4900-9db4-57e15630aad3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Run GDPR Job",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5a7b259c-b4d7-4f52-b2a7-19adb7cb5d37",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Remove base data",
							"item": [
								{
									"name": "Remove Administration",
									"item": [
										{
											"name": "find BarChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b9f47136-3e40-4650-a708-46489becad96",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find PieChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66e4ceca-91a2-45e6-878f-e391fd4d8e09",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find LineChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fb72e7d6-0900-469e-b378-713352345c88",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find ScriptInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14c74c3f-00a1-4890-aa83-d9f2e4f964c8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find Notification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f110887a-46cb-4453-b1e6-7f269fade0e7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find WebHookNotification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d193ee9b-6a0d-45dd-a2ee-3991fe9d3c08",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find EmailNotifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5ea2ccee-cdc4-4c9b-9999-46f90027f893",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find Timer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cbaa924f-db88-4aa5-9ace-e42fe52d6387",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find JobInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf494430-c0c1-4830-bfe1-72a09fd68a4b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove BarChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b7d10ab4-e3b0-4a24-b776-0541ef30c412",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove PieChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3123a460-869a-4332-997d-2e2a5475a0c0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove LineChart",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ca5b9553-d958-4e28-baa7-48e8065c2cc2",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove Notification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8fc8bbe8-73bd-4c16-8064-ac002be38bc3",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove WebHookNotification",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6c25b86-b833-4a69-9362-d5d3627a9736",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove EmailNotifications",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ce2762f-45a0-4f87-a780-f44063baed60",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove JobInstance",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "21115450-8221-4935-a2e5-07b057072bb7",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove Timer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7cf7b1dc-619f-4510-9ffd-5560b3bea867",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Remove Catalog",
									"item": [
										{
											"name": "findRecurringChargeTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da786ed1-58d8-4710-a777-16b8df4b3c81",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find RecurringCHargeTemplate with Calendar",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8bfe6544-073e-4c08-ad5b-cff3d0ef227f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findOneShotChargeTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f789abce-3bb7-4a29-8aa8-d96e84d0bb3a",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findUsageChargeTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8adf5ae7-6763-411c-b2f4-f8d4f228128e",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findServiceTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2bae654-73b4-4ce0-a201-22d4a71be31c",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findOfferTemplate",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "262e438e-524c-4e32-a9cc-e5b003be8916",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findPricePlanRec",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cef75853-f547-435a-ad52-2fde874406ba",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findPricePlanOS",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a0ea08b1-f3d0-4add-bc30-010b7db22a03",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "findPricePlanUC",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e012bcbb-b166-4f8d-aef6-b6f9bfde0a4d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "removeRecurringChargeTemplate 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8955945a-944a-4151-9112-540f3e5d484d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "removeOneShotChargeTemplate 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c946781-39f8-4c11-9934-c837664d638b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "removeUsageChargeTemplate 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "481b5348-b0ea-497f-ab76-70b4dca08c5d",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Remove Customer accounts, subsription, access",
									"item": [
										{
											"name": "find Customer",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e0f6e5bc-6818-42f2-9b6b-52246504b5a9",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find CustomerAccount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8502b175-4ce0-47ba-a013-67a854f7ace8",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find BillingAccount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e1149a9-037f-4e72-8f91-43250ddb0577",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find UserAccount",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ded909be-c67d-461b-a7ba-cd47f99f0a33",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find Subscription",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86c0cb05-812b-431f-acbc-0d2e66d930ed",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "find Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da06c3e3-c536-4a0b-8604-2f0f3a721f06",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "remove Access",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7dc90602-ae1e-4390-a2c3-d31264233931",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Remove Script BOM, BSM, BAM",
									"item": [],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Banking Calendar and Date status",
							"item": [
								{
									"name": "Create 2017 Banking Calendar",
									"item": [
										{
											"name": "Create 2017 Banking Calendar with All Vals",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a32b4342-8545-435b-891c-b3a41540df7f",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Date status",
									"item": [
										{
											"name": "Saturday Date Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4fbeed68-8e7b-4f37-b8b9-89bc26fc7b4b",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Sunday Date Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8a0defc8-b851-42d4-a33c-2f9a90fd8915",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Monday Date Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c96354da-f7f0-4951-b40e-20661dcdaa66",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "New Year's Day Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3d61e20c-a9c1-420a-b47d-0803159c8bc0",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Labor Day Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "daca9237-08a1-45a1-932f-00cea91363f5",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "Simple Working Date Status",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bbdb77b0-48f3-4cfc-84cf-e22104490d00",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "blank",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7a614d5d-5acd-4966-b0ca-9df5de988d03",
														"exec": [
															"pm.test(\"Check Code\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Check Status\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.status).to.eql(\"SUCCESS\");",
															"});",
															"",
															"pm.test(\"Check ErrorCode\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.errorCode).to.eql();",
															"});",
															"",
															"pm.test(\"Check Message\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.message).to.eql(\"\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "{{opencell.password}}",
															"type": "string"
														},
														{
															"key": "username",
															"value": "{{opencell.username}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic b3BlbmNlbGwuYWRtaW46b3BlbmNlbGwuYWRtaW4="
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{opencell.url}}/",
													"host": [
														"{{opencell.url}}"
													],
													"path": [
														""
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}